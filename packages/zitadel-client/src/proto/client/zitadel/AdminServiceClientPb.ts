/**
 * @fileoverview gRPC-Web generated client stub for zitadel.admin.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: zitadel/admin.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as zitadel_admin_pb from '../zitadel/admin_pb'; // proto import: "zitadel/admin.proto"


export class AdminServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorHealthz = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/Healthz',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.HealthzRequest,
    zitadel_admin_pb.HealthzResponse,
    (request: zitadel_admin_pb.HealthzRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.HealthzResponse.deserializeBinary
  );

  healthz(
    request: zitadel_admin_pb.HealthzRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.HealthzResponse>;

  healthz(
    request: zitadel_admin_pb.HealthzRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.HealthzResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.HealthzResponse>;

  healthz(
    request: zitadel_admin_pb.HealthzRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.HealthzResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/Healthz',
        request,
        metadata || {},
        this.methodDescriptorHealthz,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/Healthz',
    request,
    metadata || {},
    this.methodDescriptorHealthz);
  }

  methodDescriptorGetSupportedLanguages = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetSupportedLanguages',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetSupportedLanguagesRequest,
    zitadel_admin_pb.GetSupportedLanguagesResponse,
    (request: zitadel_admin_pb.GetSupportedLanguagesRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetSupportedLanguagesResponse.deserializeBinary
  );

  getSupportedLanguages(
    request: zitadel_admin_pb.GetSupportedLanguagesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetSupportedLanguagesResponse>;

  getSupportedLanguages(
    request: zitadel_admin_pb.GetSupportedLanguagesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSupportedLanguagesResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetSupportedLanguagesResponse>;

  getSupportedLanguages(
    request: zitadel_admin_pb.GetSupportedLanguagesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSupportedLanguagesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetSupportedLanguages',
        request,
        metadata || {},
        this.methodDescriptorGetSupportedLanguages,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetSupportedLanguages',
    request,
    metadata || {},
    this.methodDescriptorGetSupportedLanguages);
  }

  methodDescriptorGetAllowedLanguages = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetAllowedLanguages',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetAllowedLanguagesRequest,
    zitadel_admin_pb.GetAllowedLanguagesResponse,
    (request: zitadel_admin_pb.GetAllowedLanguagesRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetAllowedLanguagesResponse.deserializeBinary
  );

  getAllowedLanguages(
    request: zitadel_admin_pb.GetAllowedLanguagesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetAllowedLanguagesResponse>;

  getAllowedLanguages(
    request: zitadel_admin_pb.GetAllowedLanguagesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetAllowedLanguagesResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetAllowedLanguagesResponse>;

  getAllowedLanguages(
    request: zitadel_admin_pb.GetAllowedLanguagesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetAllowedLanguagesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetAllowedLanguages',
        request,
        metadata || {},
        this.methodDescriptorGetAllowedLanguages,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetAllowedLanguages',
    request,
    metadata || {},
    this.methodDescriptorGetAllowedLanguages);
  }

  methodDescriptorSetDefaultLanguage = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultLanguage',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultLanguageRequest,
    zitadel_admin_pb.SetDefaultLanguageResponse,
    (request: zitadel_admin_pb.SetDefaultLanguageRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultLanguageResponse.deserializeBinary
  );

  setDefaultLanguage(
    request: zitadel_admin_pb.SetDefaultLanguageRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultLanguageResponse>;

  setDefaultLanguage(
    request: zitadel_admin_pb.SetDefaultLanguageRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultLanguageResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultLanguageResponse>;

  setDefaultLanguage(
    request: zitadel_admin_pb.SetDefaultLanguageRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultLanguageResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultLanguage',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultLanguage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultLanguage',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultLanguage);
  }

  methodDescriptorGetDefaultLanguage = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultLanguage',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultLanguageRequest,
    zitadel_admin_pb.GetDefaultLanguageResponse,
    (request: zitadel_admin_pb.GetDefaultLanguageRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultLanguageResponse.deserializeBinary
  );

  getDefaultLanguage(
    request: zitadel_admin_pb.GetDefaultLanguageRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultLanguageResponse>;

  getDefaultLanguage(
    request: zitadel_admin_pb.GetDefaultLanguageRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultLanguageResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultLanguageResponse>;

  getDefaultLanguage(
    request: zitadel_admin_pb.GetDefaultLanguageRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultLanguageResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultLanguage',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultLanguage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultLanguage',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultLanguage);
  }

  methodDescriptorGetMyInstance = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetMyInstance',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetMyInstanceRequest,
    zitadel_admin_pb.GetMyInstanceResponse,
    (request: zitadel_admin_pb.GetMyInstanceRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetMyInstanceResponse.deserializeBinary
  );

  getMyInstance(
    request: zitadel_admin_pb.GetMyInstanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetMyInstanceResponse>;

  getMyInstance(
    request: zitadel_admin_pb.GetMyInstanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetMyInstanceResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetMyInstanceResponse>;

  getMyInstance(
    request: zitadel_admin_pb.GetMyInstanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetMyInstanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetMyInstance',
        request,
        metadata || {},
        this.methodDescriptorGetMyInstance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetMyInstance',
    request,
    metadata || {},
    this.methodDescriptorGetMyInstance);
  }

  methodDescriptorListInstanceDomains = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListInstanceDomains',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListInstanceDomainsRequest,
    zitadel_admin_pb.ListInstanceDomainsResponse,
    (request: zitadel_admin_pb.ListInstanceDomainsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListInstanceDomainsResponse.deserializeBinary
  );

  listInstanceDomains(
    request: zitadel_admin_pb.ListInstanceDomainsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListInstanceDomainsResponse>;

  listInstanceDomains(
    request: zitadel_admin_pb.ListInstanceDomainsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListInstanceDomainsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListInstanceDomainsResponse>;

  listInstanceDomains(
    request: zitadel_admin_pb.ListInstanceDomainsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListInstanceDomainsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListInstanceDomains',
        request,
        metadata || {},
        this.methodDescriptorListInstanceDomains,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListInstanceDomains',
    request,
    metadata || {},
    this.methodDescriptorListInstanceDomains);
  }

  methodDescriptorListSecretGenerators = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListSecretGenerators',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListSecretGeneratorsRequest,
    zitadel_admin_pb.ListSecretGeneratorsResponse,
    (request: zitadel_admin_pb.ListSecretGeneratorsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListSecretGeneratorsResponse.deserializeBinary
  );

  listSecretGenerators(
    request: zitadel_admin_pb.ListSecretGeneratorsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListSecretGeneratorsResponse>;

  listSecretGenerators(
    request: zitadel_admin_pb.ListSecretGeneratorsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListSecretGeneratorsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListSecretGeneratorsResponse>;

  listSecretGenerators(
    request: zitadel_admin_pb.ListSecretGeneratorsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListSecretGeneratorsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListSecretGenerators',
        request,
        metadata || {},
        this.methodDescriptorListSecretGenerators,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListSecretGenerators',
    request,
    metadata || {},
    this.methodDescriptorListSecretGenerators);
  }

  methodDescriptorGetSecretGenerator = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetSecretGenerator',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetSecretGeneratorRequest,
    zitadel_admin_pb.GetSecretGeneratorResponse,
    (request: zitadel_admin_pb.GetSecretGeneratorRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetSecretGeneratorResponse.deserializeBinary
  );

  getSecretGenerator(
    request: zitadel_admin_pb.GetSecretGeneratorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetSecretGeneratorResponse>;

  getSecretGenerator(
    request: zitadel_admin_pb.GetSecretGeneratorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSecretGeneratorResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetSecretGeneratorResponse>;

  getSecretGenerator(
    request: zitadel_admin_pb.GetSecretGeneratorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSecretGeneratorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetSecretGenerator',
        request,
        metadata || {},
        this.methodDescriptorGetSecretGenerator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetSecretGenerator',
    request,
    metadata || {},
    this.methodDescriptorGetSecretGenerator);
  }

  methodDescriptorUpdateSecretGenerator = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateSecretGenerator',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateSecretGeneratorRequest,
    zitadel_admin_pb.UpdateSecretGeneratorResponse,
    (request: zitadel_admin_pb.UpdateSecretGeneratorRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateSecretGeneratorResponse.deserializeBinary
  );

  updateSecretGenerator(
    request: zitadel_admin_pb.UpdateSecretGeneratorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateSecretGeneratorResponse>;

  updateSecretGenerator(
    request: zitadel_admin_pb.UpdateSecretGeneratorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSecretGeneratorResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateSecretGeneratorResponse>;

  updateSecretGenerator(
    request: zitadel_admin_pb.UpdateSecretGeneratorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSecretGeneratorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateSecretGenerator',
        request,
        metadata || {},
        this.methodDescriptorUpdateSecretGenerator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateSecretGenerator',
    request,
    metadata || {},
    this.methodDescriptorUpdateSecretGenerator);
  }

  methodDescriptorGetSMTPConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetSMTPConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetSMTPConfigRequest,
    zitadel_admin_pb.GetSMTPConfigResponse,
    (request: zitadel_admin_pb.GetSMTPConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetSMTPConfigResponse.deserializeBinary
  );

  getSMTPConfig(
    request: zitadel_admin_pb.GetSMTPConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetSMTPConfigResponse>;

  getSMTPConfig(
    request: zitadel_admin_pb.GetSMTPConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSMTPConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetSMTPConfigResponse>;

  getSMTPConfig(
    request: zitadel_admin_pb.GetSMTPConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSMTPConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetSMTPConfig',
        request,
        metadata || {},
        this.methodDescriptorGetSMTPConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetSMTPConfig',
    request,
    metadata || {},
    this.methodDescriptorGetSMTPConfig);
  }

  methodDescriptorAddSMTPConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddSMTPConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddSMTPConfigRequest,
    zitadel_admin_pb.AddSMTPConfigResponse,
    (request: zitadel_admin_pb.AddSMTPConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddSMTPConfigResponse.deserializeBinary
  );

  addSMTPConfig(
    request: zitadel_admin_pb.AddSMTPConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddSMTPConfigResponse>;

  addSMTPConfig(
    request: zitadel_admin_pb.AddSMTPConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddSMTPConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddSMTPConfigResponse>;

  addSMTPConfig(
    request: zitadel_admin_pb.AddSMTPConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddSMTPConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddSMTPConfig',
        request,
        metadata || {},
        this.methodDescriptorAddSMTPConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddSMTPConfig',
    request,
    metadata || {},
    this.methodDescriptorAddSMTPConfig);
  }

  methodDescriptorUpdateSMTPConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateSMTPConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateSMTPConfigRequest,
    zitadel_admin_pb.UpdateSMTPConfigResponse,
    (request: zitadel_admin_pb.UpdateSMTPConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateSMTPConfigResponse.deserializeBinary
  );

  updateSMTPConfig(
    request: zitadel_admin_pb.UpdateSMTPConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateSMTPConfigResponse>;

  updateSMTPConfig(
    request: zitadel_admin_pb.UpdateSMTPConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSMTPConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateSMTPConfigResponse>;

  updateSMTPConfig(
    request: zitadel_admin_pb.UpdateSMTPConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSMTPConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateSMTPConfig',
        request,
        metadata || {},
        this.methodDescriptorUpdateSMTPConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateSMTPConfig',
    request,
    metadata || {},
    this.methodDescriptorUpdateSMTPConfig);
  }

  methodDescriptorUpdateSMTPConfigPassword = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateSMTPConfigPassword',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateSMTPConfigPasswordRequest,
    zitadel_admin_pb.UpdateSMTPConfigPasswordResponse,
    (request: zitadel_admin_pb.UpdateSMTPConfigPasswordRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateSMTPConfigPasswordResponse.deserializeBinary
  );

  updateSMTPConfigPassword(
    request: zitadel_admin_pb.UpdateSMTPConfigPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateSMTPConfigPasswordResponse>;

  updateSMTPConfigPassword(
    request: zitadel_admin_pb.UpdateSMTPConfigPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSMTPConfigPasswordResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateSMTPConfigPasswordResponse>;

  updateSMTPConfigPassword(
    request: zitadel_admin_pb.UpdateSMTPConfigPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSMTPConfigPasswordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateSMTPConfigPassword',
        request,
        metadata || {},
        this.methodDescriptorUpdateSMTPConfigPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateSMTPConfigPassword',
    request,
    metadata || {},
    this.methodDescriptorUpdateSMTPConfigPassword);
  }

  methodDescriptorRemoveSMTPConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveSMTPConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveSMTPConfigRequest,
    zitadel_admin_pb.RemoveSMTPConfigResponse,
    (request: zitadel_admin_pb.RemoveSMTPConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveSMTPConfigResponse.deserializeBinary
  );

  removeSMTPConfig(
    request: zitadel_admin_pb.RemoveSMTPConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveSMTPConfigResponse>;

  removeSMTPConfig(
    request: zitadel_admin_pb.RemoveSMTPConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveSMTPConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveSMTPConfigResponse>;

  removeSMTPConfig(
    request: zitadel_admin_pb.RemoveSMTPConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveSMTPConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveSMTPConfig',
        request,
        metadata || {},
        this.methodDescriptorRemoveSMTPConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveSMTPConfig',
    request,
    metadata || {},
    this.methodDescriptorRemoveSMTPConfig);
  }

  methodDescriptorListSMSProviders = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListSMSProviders',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListSMSProvidersRequest,
    zitadel_admin_pb.ListSMSProvidersResponse,
    (request: zitadel_admin_pb.ListSMSProvidersRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListSMSProvidersResponse.deserializeBinary
  );

  listSMSProviders(
    request: zitadel_admin_pb.ListSMSProvidersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListSMSProvidersResponse>;

  listSMSProviders(
    request: zitadel_admin_pb.ListSMSProvidersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListSMSProvidersResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListSMSProvidersResponse>;

  listSMSProviders(
    request: zitadel_admin_pb.ListSMSProvidersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListSMSProvidersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListSMSProviders',
        request,
        metadata || {},
        this.methodDescriptorListSMSProviders,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListSMSProviders',
    request,
    metadata || {},
    this.methodDescriptorListSMSProviders);
  }

  methodDescriptorGetSMSProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetSMSProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetSMSProviderRequest,
    zitadel_admin_pb.GetSMSProviderResponse,
    (request: zitadel_admin_pb.GetSMSProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetSMSProviderResponse.deserializeBinary
  );

  getSMSProvider(
    request: zitadel_admin_pb.GetSMSProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetSMSProviderResponse>;

  getSMSProvider(
    request: zitadel_admin_pb.GetSMSProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSMSProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetSMSProviderResponse>;

  getSMSProvider(
    request: zitadel_admin_pb.GetSMSProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSMSProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetSMSProvider',
        request,
        metadata || {},
        this.methodDescriptorGetSMSProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetSMSProvider',
    request,
    metadata || {},
    this.methodDescriptorGetSMSProvider);
  }

  methodDescriptorAddSMSProviderTwilio = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddSMSProviderTwilio',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddSMSProviderTwilioRequest,
    zitadel_admin_pb.AddSMSProviderTwilioResponse,
    (request: zitadel_admin_pb.AddSMSProviderTwilioRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddSMSProviderTwilioResponse.deserializeBinary
  );

  addSMSProviderTwilio(
    request: zitadel_admin_pb.AddSMSProviderTwilioRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddSMSProviderTwilioResponse>;

  addSMSProviderTwilio(
    request: zitadel_admin_pb.AddSMSProviderTwilioRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddSMSProviderTwilioResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddSMSProviderTwilioResponse>;

  addSMSProviderTwilio(
    request: zitadel_admin_pb.AddSMSProviderTwilioRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddSMSProviderTwilioResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddSMSProviderTwilio',
        request,
        metadata || {},
        this.methodDescriptorAddSMSProviderTwilio,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddSMSProviderTwilio',
    request,
    metadata || {},
    this.methodDescriptorAddSMSProviderTwilio);
  }

  methodDescriptorUpdateSMSProviderTwilio = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateSMSProviderTwilio',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateSMSProviderTwilioRequest,
    zitadel_admin_pb.UpdateSMSProviderTwilioResponse,
    (request: zitadel_admin_pb.UpdateSMSProviderTwilioRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateSMSProviderTwilioResponse.deserializeBinary
  );

  updateSMSProviderTwilio(
    request: zitadel_admin_pb.UpdateSMSProviderTwilioRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateSMSProviderTwilioResponse>;

  updateSMSProviderTwilio(
    request: zitadel_admin_pb.UpdateSMSProviderTwilioRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSMSProviderTwilioResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateSMSProviderTwilioResponse>;

  updateSMSProviderTwilio(
    request: zitadel_admin_pb.UpdateSMSProviderTwilioRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSMSProviderTwilioResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateSMSProviderTwilio',
        request,
        metadata || {},
        this.methodDescriptorUpdateSMSProviderTwilio,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateSMSProviderTwilio',
    request,
    metadata || {},
    this.methodDescriptorUpdateSMSProviderTwilio);
  }

  methodDescriptorUpdateSMSProviderTwilioToken = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateSMSProviderTwilioToken',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateSMSProviderTwilioTokenRequest,
    zitadel_admin_pb.UpdateSMSProviderTwilioTokenResponse,
    (request: zitadel_admin_pb.UpdateSMSProviderTwilioTokenRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateSMSProviderTwilioTokenResponse.deserializeBinary
  );

  updateSMSProviderTwilioToken(
    request: zitadel_admin_pb.UpdateSMSProviderTwilioTokenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateSMSProviderTwilioTokenResponse>;

  updateSMSProviderTwilioToken(
    request: zitadel_admin_pb.UpdateSMSProviderTwilioTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSMSProviderTwilioTokenResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateSMSProviderTwilioTokenResponse>;

  updateSMSProviderTwilioToken(
    request: zitadel_admin_pb.UpdateSMSProviderTwilioTokenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSMSProviderTwilioTokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateSMSProviderTwilioToken',
        request,
        metadata || {},
        this.methodDescriptorUpdateSMSProviderTwilioToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateSMSProviderTwilioToken',
    request,
    metadata || {},
    this.methodDescriptorUpdateSMSProviderTwilioToken);
  }

  methodDescriptorActivateSMSProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ActivateSMSProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ActivateSMSProviderRequest,
    zitadel_admin_pb.ActivateSMSProviderResponse,
    (request: zitadel_admin_pb.ActivateSMSProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ActivateSMSProviderResponse.deserializeBinary
  );

  activateSMSProvider(
    request: zitadel_admin_pb.ActivateSMSProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ActivateSMSProviderResponse>;

  activateSMSProvider(
    request: zitadel_admin_pb.ActivateSMSProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ActivateSMSProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ActivateSMSProviderResponse>;

  activateSMSProvider(
    request: zitadel_admin_pb.ActivateSMSProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ActivateSMSProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ActivateSMSProvider',
        request,
        metadata || {},
        this.methodDescriptorActivateSMSProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ActivateSMSProvider',
    request,
    metadata || {},
    this.methodDescriptorActivateSMSProvider);
  }

  methodDescriptorDeactivateSMSProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/DeactivateSMSProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.DeactivateSMSProviderRequest,
    zitadel_admin_pb.DeactivateSMSProviderResponse,
    (request: zitadel_admin_pb.DeactivateSMSProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.DeactivateSMSProviderResponse.deserializeBinary
  );

  deactivateSMSProvider(
    request: zitadel_admin_pb.DeactivateSMSProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.DeactivateSMSProviderResponse>;

  deactivateSMSProvider(
    request: zitadel_admin_pb.DeactivateSMSProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.DeactivateSMSProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.DeactivateSMSProviderResponse>;

  deactivateSMSProvider(
    request: zitadel_admin_pb.DeactivateSMSProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.DeactivateSMSProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/DeactivateSMSProvider',
        request,
        metadata || {},
        this.methodDescriptorDeactivateSMSProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/DeactivateSMSProvider',
    request,
    metadata || {},
    this.methodDescriptorDeactivateSMSProvider);
  }

  methodDescriptorRemoveSMSProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveSMSProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveSMSProviderRequest,
    zitadel_admin_pb.RemoveSMSProviderResponse,
    (request: zitadel_admin_pb.RemoveSMSProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveSMSProviderResponse.deserializeBinary
  );

  removeSMSProvider(
    request: zitadel_admin_pb.RemoveSMSProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveSMSProviderResponse>;

  removeSMSProvider(
    request: zitadel_admin_pb.RemoveSMSProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveSMSProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveSMSProviderResponse>;

  removeSMSProvider(
    request: zitadel_admin_pb.RemoveSMSProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveSMSProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveSMSProvider',
        request,
        metadata || {},
        this.methodDescriptorRemoveSMSProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveSMSProvider',
    request,
    metadata || {},
    this.methodDescriptorRemoveSMSProvider);
  }

  methodDescriptorGetOIDCSettings = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetOIDCSettings',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetOIDCSettingsRequest,
    zitadel_admin_pb.GetOIDCSettingsResponse,
    (request: zitadel_admin_pb.GetOIDCSettingsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetOIDCSettingsResponse.deserializeBinary
  );

  getOIDCSettings(
    request: zitadel_admin_pb.GetOIDCSettingsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetOIDCSettingsResponse>;

  getOIDCSettings(
    request: zitadel_admin_pb.GetOIDCSettingsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetOIDCSettingsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetOIDCSettingsResponse>;

  getOIDCSettings(
    request: zitadel_admin_pb.GetOIDCSettingsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetOIDCSettingsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetOIDCSettings',
        request,
        metadata || {},
        this.methodDescriptorGetOIDCSettings,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetOIDCSettings',
    request,
    metadata || {},
    this.methodDescriptorGetOIDCSettings);
  }

  methodDescriptorAddOIDCSettings = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddOIDCSettings',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddOIDCSettingsRequest,
    zitadel_admin_pb.AddOIDCSettingsResponse,
    (request: zitadel_admin_pb.AddOIDCSettingsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddOIDCSettingsResponse.deserializeBinary
  );

  addOIDCSettings(
    request: zitadel_admin_pb.AddOIDCSettingsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddOIDCSettingsResponse>;

  addOIDCSettings(
    request: zitadel_admin_pb.AddOIDCSettingsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddOIDCSettingsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddOIDCSettingsResponse>;

  addOIDCSettings(
    request: zitadel_admin_pb.AddOIDCSettingsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddOIDCSettingsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddOIDCSettings',
        request,
        metadata || {},
        this.methodDescriptorAddOIDCSettings,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddOIDCSettings',
    request,
    metadata || {},
    this.methodDescriptorAddOIDCSettings);
  }

  methodDescriptorUpdateOIDCSettings = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateOIDCSettings',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateOIDCSettingsRequest,
    zitadel_admin_pb.UpdateOIDCSettingsResponse,
    (request: zitadel_admin_pb.UpdateOIDCSettingsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateOIDCSettingsResponse.deserializeBinary
  );

  updateOIDCSettings(
    request: zitadel_admin_pb.UpdateOIDCSettingsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateOIDCSettingsResponse>;

  updateOIDCSettings(
    request: zitadel_admin_pb.UpdateOIDCSettingsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateOIDCSettingsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateOIDCSettingsResponse>;

  updateOIDCSettings(
    request: zitadel_admin_pb.UpdateOIDCSettingsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateOIDCSettingsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateOIDCSettings',
        request,
        metadata || {},
        this.methodDescriptorUpdateOIDCSettings,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateOIDCSettings',
    request,
    metadata || {},
    this.methodDescriptorUpdateOIDCSettings);
  }

  methodDescriptorGetFileSystemNotificationProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetFileSystemNotificationProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetFileSystemNotificationProviderRequest,
    zitadel_admin_pb.GetFileSystemNotificationProviderResponse,
    (request: zitadel_admin_pb.GetFileSystemNotificationProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetFileSystemNotificationProviderResponse.deserializeBinary
  );

  getFileSystemNotificationProvider(
    request: zitadel_admin_pb.GetFileSystemNotificationProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetFileSystemNotificationProviderResponse>;

  getFileSystemNotificationProvider(
    request: zitadel_admin_pb.GetFileSystemNotificationProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetFileSystemNotificationProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetFileSystemNotificationProviderResponse>;

  getFileSystemNotificationProvider(
    request: zitadel_admin_pb.GetFileSystemNotificationProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetFileSystemNotificationProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetFileSystemNotificationProvider',
        request,
        metadata || {},
        this.methodDescriptorGetFileSystemNotificationProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetFileSystemNotificationProvider',
    request,
    metadata || {},
    this.methodDescriptorGetFileSystemNotificationProvider);
  }

  methodDescriptorGetLogNotificationProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetLogNotificationProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetLogNotificationProviderRequest,
    zitadel_admin_pb.GetLogNotificationProviderResponse,
    (request: zitadel_admin_pb.GetLogNotificationProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetLogNotificationProviderResponse.deserializeBinary
  );

  getLogNotificationProvider(
    request: zitadel_admin_pb.GetLogNotificationProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetLogNotificationProviderResponse>;

  getLogNotificationProvider(
    request: zitadel_admin_pb.GetLogNotificationProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetLogNotificationProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetLogNotificationProviderResponse>;

  getLogNotificationProvider(
    request: zitadel_admin_pb.GetLogNotificationProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetLogNotificationProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetLogNotificationProvider',
        request,
        metadata || {},
        this.methodDescriptorGetLogNotificationProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetLogNotificationProvider',
    request,
    metadata || {},
    this.methodDescriptorGetLogNotificationProvider);
  }

  methodDescriptorGetSecurityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetSecurityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetSecurityPolicyRequest,
    zitadel_admin_pb.GetSecurityPolicyResponse,
    (request: zitadel_admin_pb.GetSecurityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetSecurityPolicyResponse.deserializeBinary
  );

  getSecurityPolicy(
    request: zitadel_admin_pb.GetSecurityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetSecurityPolicyResponse>;

  getSecurityPolicy(
    request: zitadel_admin_pb.GetSecurityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSecurityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetSecurityPolicyResponse>;

  getSecurityPolicy(
    request: zitadel_admin_pb.GetSecurityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetSecurityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetSecurityPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetSecurityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetSecurityPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetSecurityPolicy);
  }

  methodDescriptorSetSecurityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetSecurityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetSecurityPolicyRequest,
    zitadel_admin_pb.SetSecurityPolicyResponse,
    (request: zitadel_admin_pb.SetSecurityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetSecurityPolicyResponse.deserializeBinary
  );

  setSecurityPolicy(
    request: zitadel_admin_pb.SetSecurityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetSecurityPolicyResponse>;

  setSecurityPolicy(
    request: zitadel_admin_pb.SetSecurityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetSecurityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetSecurityPolicyResponse>;

  setSecurityPolicy(
    request: zitadel_admin_pb.SetSecurityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetSecurityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetSecurityPolicy',
        request,
        metadata || {},
        this.methodDescriptorSetSecurityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetSecurityPolicy',
    request,
    metadata || {},
    this.methodDescriptorSetSecurityPolicy);
  }

  methodDescriptorGetOrgByID = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetOrgByID',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetOrgByIDRequest,
    zitadel_admin_pb.GetOrgByIDResponse,
    (request: zitadel_admin_pb.GetOrgByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetOrgByIDResponse.deserializeBinary
  );

  getOrgByID(
    request: zitadel_admin_pb.GetOrgByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetOrgByIDResponse>;

  getOrgByID(
    request: zitadel_admin_pb.GetOrgByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetOrgByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetOrgByIDResponse>;

  getOrgByID(
    request: zitadel_admin_pb.GetOrgByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetOrgByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetOrgByID',
        request,
        metadata || {},
        this.methodDescriptorGetOrgByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetOrgByID',
    request,
    metadata || {},
    this.methodDescriptorGetOrgByID);
  }

  methodDescriptorIsOrgUnique = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/IsOrgUnique',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.IsOrgUniqueRequest,
    zitadel_admin_pb.IsOrgUniqueResponse,
    (request: zitadel_admin_pb.IsOrgUniqueRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.IsOrgUniqueResponse.deserializeBinary
  );

  isOrgUnique(
    request: zitadel_admin_pb.IsOrgUniqueRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.IsOrgUniqueResponse>;

  isOrgUnique(
    request: zitadel_admin_pb.IsOrgUniqueRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.IsOrgUniqueResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.IsOrgUniqueResponse>;

  isOrgUnique(
    request: zitadel_admin_pb.IsOrgUniqueRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.IsOrgUniqueResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/IsOrgUnique',
        request,
        metadata || {},
        this.methodDescriptorIsOrgUnique,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/IsOrgUnique',
    request,
    metadata || {},
    this.methodDescriptorIsOrgUnique);
  }

  methodDescriptorSetDefaultOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultOrgRequest,
    zitadel_admin_pb.SetDefaultOrgResponse,
    (request: zitadel_admin_pb.SetDefaultOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultOrgResponse.deserializeBinary
  );

  setDefaultOrg(
    request: zitadel_admin_pb.SetDefaultOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultOrgResponse>;

  setDefaultOrg(
    request: zitadel_admin_pb.SetDefaultOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultOrgResponse>;

  setDefaultOrg(
    request: zitadel_admin_pb.SetDefaultOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultOrg',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultOrg',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultOrg);
  }

  methodDescriptorGetDefaultOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultOrgRequest,
    zitadel_admin_pb.GetDefaultOrgResponse,
    (request: zitadel_admin_pb.GetDefaultOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultOrgResponse.deserializeBinary
  );

  getDefaultOrg(
    request: zitadel_admin_pb.GetDefaultOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultOrgResponse>;

  getDefaultOrg(
    request: zitadel_admin_pb.GetDefaultOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultOrgResponse>;

  getDefaultOrg(
    request: zitadel_admin_pb.GetDefaultOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultOrg',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultOrg',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultOrg);
  }

  methodDescriptorListOrgs = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListOrgs',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListOrgsRequest,
    zitadel_admin_pb.ListOrgsResponse,
    (request: zitadel_admin_pb.ListOrgsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListOrgsResponse.deserializeBinary
  );

  listOrgs(
    request: zitadel_admin_pb.ListOrgsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListOrgsResponse>;

  listOrgs(
    request: zitadel_admin_pb.ListOrgsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListOrgsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListOrgsResponse>;

  listOrgs(
    request: zitadel_admin_pb.ListOrgsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListOrgsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListOrgs',
        request,
        metadata || {},
        this.methodDescriptorListOrgs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListOrgs',
    request,
    metadata || {},
    this.methodDescriptorListOrgs);
  }

  methodDescriptorSetUpOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetUpOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetUpOrgRequest,
    zitadel_admin_pb.SetUpOrgResponse,
    (request: zitadel_admin_pb.SetUpOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetUpOrgResponse.deserializeBinary
  );

  setUpOrg(
    request: zitadel_admin_pb.SetUpOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetUpOrgResponse>;

  setUpOrg(
    request: zitadel_admin_pb.SetUpOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetUpOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetUpOrgResponse>;

  setUpOrg(
    request: zitadel_admin_pb.SetUpOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetUpOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetUpOrg',
        request,
        metadata || {},
        this.methodDescriptorSetUpOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetUpOrg',
    request,
    metadata || {},
    this.methodDescriptorSetUpOrg);
  }

  methodDescriptorRemoveOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveOrgRequest,
    zitadel_admin_pb.RemoveOrgResponse,
    (request: zitadel_admin_pb.RemoveOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveOrgResponse.deserializeBinary
  );

  removeOrg(
    request: zitadel_admin_pb.RemoveOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveOrgResponse>;

  removeOrg(
    request: zitadel_admin_pb.RemoveOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveOrgResponse>;

  removeOrg(
    request: zitadel_admin_pb.RemoveOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveOrg',
        request,
        metadata || {},
        this.methodDescriptorRemoveOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveOrg',
    request,
    metadata || {},
    this.methodDescriptorRemoveOrg);
  }

  methodDescriptorGetIDPByID = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetIDPByID',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetIDPByIDRequest,
    zitadel_admin_pb.GetIDPByIDResponse,
    (request: zitadel_admin_pb.GetIDPByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetIDPByIDResponse.deserializeBinary
  );

  getIDPByID(
    request: zitadel_admin_pb.GetIDPByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetIDPByIDResponse>;

  getIDPByID(
    request: zitadel_admin_pb.GetIDPByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetIDPByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetIDPByIDResponse>;

  getIDPByID(
    request: zitadel_admin_pb.GetIDPByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetIDPByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetIDPByID',
        request,
        metadata || {},
        this.methodDescriptorGetIDPByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetIDPByID',
    request,
    metadata || {},
    this.methodDescriptorGetIDPByID);
  }

  methodDescriptorListIDPs = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListIDPs',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListIDPsRequest,
    zitadel_admin_pb.ListIDPsResponse,
    (request: zitadel_admin_pb.ListIDPsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListIDPsResponse.deserializeBinary
  );

  listIDPs(
    request: zitadel_admin_pb.ListIDPsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListIDPsResponse>;

  listIDPs(
    request: zitadel_admin_pb.ListIDPsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListIDPsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListIDPsResponse>;

  listIDPs(
    request: zitadel_admin_pb.ListIDPsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListIDPsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListIDPs',
        request,
        metadata || {},
        this.methodDescriptorListIDPs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListIDPs',
    request,
    metadata || {},
    this.methodDescriptorListIDPs);
  }

  methodDescriptorAddOIDCIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddOIDCIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddOIDCIDPRequest,
    zitadel_admin_pb.AddOIDCIDPResponse,
    (request: zitadel_admin_pb.AddOIDCIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddOIDCIDPResponse.deserializeBinary
  );

  addOIDCIDP(
    request: zitadel_admin_pb.AddOIDCIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddOIDCIDPResponse>;

  addOIDCIDP(
    request: zitadel_admin_pb.AddOIDCIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddOIDCIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddOIDCIDPResponse>;

  addOIDCIDP(
    request: zitadel_admin_pb.AddOIDCIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddOIDCIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddOIDCIDP',
        request,
        metadata || {},
        this.methodDescriptorAddOIDCIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddOIDCIDP',
    request,
    metadata || {},
    this.methodDescriptorAddOIDCIDP);
  }

  methodDescriptorAddJWTIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddJWTIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddJWTIDPRequest,
    zitadel_admin_pb.AddJWTIDPResponse,
    (request: zitadel_admin_pb.AddJWTIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddJWTIDPResponse.deserializeBinary
  );

  addJWTIDP(
    request: zitadel_admin_pb.AddJWTIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddJWTIDPResponse>;

  addJWTIDP(
    request: zitadel_admin_pb.AddJWTIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddJWTIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddJWTIDPResponse>;

  addJWTIDP(
    request: zitadel_admin_pb.AddJWTIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddJWTIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddJWTIDP',
        request,
        metadata || {},
        this.methodDescriptorAddJWTIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddJWTIDP',
    request,
    metadata || {},
    this.methodDescriptorAddJWTIDP);
  }

  methodDescriptorUpdateIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateIDPRequest,
    zitadel_admin_pb.UpdateIDPResponse,
    (request: zitadel_admin_pb.UpdateIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateIDPResponse.deserializeBinary
  );

  updateIDP(
    request: zitadel_admin_pb.UpdateIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateIDPResponse>;

  updateIDP(
    request: zitadel_admin_pb.UpdateIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateIDPResponse>;

  updateIDP(
    request: zitadel_admin_pb.UpdateIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateIDP',
        request,
        metadata || {},
        this.methodDescriptorUpdateIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateIDP',
    request,
    metadata || {},
    this.methodDescriptorUpdateIDP);
  }

  methodDescriptorDeactivateIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/DeactivateIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.DeactivateIDPRequest,
    zitadel_admin_pb.DeactivateIDPResponse,
    (request: zitadel_admin_pb.DeactivateIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.DeactivateIDPResponse.deserializeBinary
  );

  deactivateIDP(
    request: zitadel_admin_pb.DeactivateIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.DeactivateIDPResponse>;

  deactivateIDP(
    request: zitadel_admin_pb.DeactivateIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.DeactivateIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.DeactivateIDPResponse>;

  deactivateIDP(
    request: zitadel_admin_pb.DeactivateIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.DeactivateIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/DeactivateIDP',
        request,
        metadata || {},
        this.methodDescriptorDeactivateIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/DeactivateIDP',
    request,
    metadata || {},
    this.methodDescriptorDeactivateIDP);
  }

  methodDescriptorReactivateIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ReactivateIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ReactivateIDPRequest,
    zitadel_admin_pb.ReactivateIDPResponse,
    (request: zitadel_admin_pb.ReactivateIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ReactivateIDPResponse.deserializeBinary
  );

  reactivateIDP(
    request: zitadel_admin_pb.ReactivateIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ReactivateIDPResponse>;

  reactivateIDP(
    request: zitadel_admin_pb.ReactivateIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ReactivateIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ReactivateIDPResponse>;

  reactivateIDP(
    request: zitadel_admin_pb.ReactivateIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ReactivateIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ReactivateIDP',
        request,
        metadata || {},
        this.methodDescriptorReactivateIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ReactivateIDP',
    request,
    metadata || {},
    this.methodDescriptorReactivateIDP);
  }

  methodDescriptorRemoveIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveIDPRequest,
    zitadel_admin_pb.RemoveIDPResponse,
    (request: zitadel_admin_pb.RemoveIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveIDPResponse.deserializeBinary
  );

  removeIDP(
    request: zitadel_admin_pb.RemoveIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveIDPResponse>;

  removeIDP(
    request: zitadel_admin_pb.RemoveIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveIDPResponse>;

  removeIDP(
    request: zitadel_admin_pb.RemoveIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveIDP',
        request,
        metadata || {},
        this.methodDescriptorRemoveIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveIDP',
    request,
    metadata || {},
    this.methodDescriptorRemoveIDP);
  }

  methodDescriptorUpdateIDPOIDCConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateIDPOIDCConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateIDPOIDCConfigRequest,
    zitadel_admin_pb.UpdateIDPOIDCConfigResponse,
    (request: zitadel_admin_pb.UpdateIDPOIDCConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateIDPOIDCConfigResponse.deserializeBinary
  );

  updateIDPOIDCConfig(
    request: zitadel_admin_pb.UpdateIDPOIDCConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateIDPOIDCConfigResponse>;

  updateIDPOIDCConfig(
    request: zitadel_admin_pb.UpdateIDPOIDCConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateIDPOIDCConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateIDPOIDCConfigResponse>;

  updateIDPOIDCConfig(
    request: zitadel_admin_pb.UpdateIDPOIDCConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateIDPOIDCConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateIDPOIDCConfig',
        request,
        metadata || {},
        this.methodDescriptorUpdateIDPOIDCConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateIDPOIDCConfig',
    request,
    metadata || {},
    this.methodDescriptorUpdateIDPOIDCConfig);
  }

  methodDescriptorUpdateIDPJWTConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateIDPJWTConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateIDPJWTConfigRequest,
    zitadel_admin_pb.UpdateIDPJWTConfigResponse,
    (request: zitadel_admin_pb.UpdateIDPJWTConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateIDPJWTConfigResponse.deserializeBinary
  );

  updateIDPJWTConfig(
    request: zitadel_admin_pb.UpdateIDPJWTConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateIDPJWTConfigResponse>;

  updateIDPJWTConfig(
    request: zitadel_admin_pb.UpdateIDPJWTConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateIDPJWTConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateIDPJWTConfigResponse>;

  updateIDPJWTConfig(
    request: zitadel_admin_pb.UpdateIDPJWTConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateIDPJWTConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateIDPJWTConfig',
        request,
        metadata || {},
        this.methodDescriptorUpdateIDPJWTConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateIDPJWTConfig',
    request,
    metadata || {},
    this.methodDescriptorUpdateIDPJWTConfig);
  }

  methodDescriptorListProviders = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListProviders',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListProvidersRequest,
    zitadel_admin_pb.ListProvidersResponse,
    (request: zitadel_admin_pb.ListProvidersRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListProvidersResponse.deserializeBinary
  );

  listProviders(
    request: zitadel_admin_pb.ListProvidersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListProvidersResponse>;

  listProviders(
    request: zitadel_admin_pb.ListProvidersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListProvidersResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListProvidersResponse>;

  listProviders(
    request: zitadel_admin_pb.ListProvidersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListProvidersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListProviders',
        request,
        metadata || {},
        this.methodDescriptorListProviders,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListProviders',
    request,
    metadata || {},
    this.methodDescriptorListProviders);
  }

  methodDescriptorGetProviderByID = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetProviderByID',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetProviderByIDRequest,
    zitadel_admin_pb.GetProviderByIDResponse,
    (request: zitadel_admin_pb.GetProviderByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetProviderByIDResponse.deserializeBinary
  );

  getProviderByID(
    request: zitadel_admin_pb.GetProviderByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetProviderByIDResponse>;

  getProviderByID(
    request: zitadel_admin_pb.GetProviderByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetProviderByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetProviderByIDResponse>;

  getProviderByID(
    request: zitadel_admin_pb.GetProviderByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetProviderByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetProviderByID',
        request,
        metadata || {},
        this.methodDescriptorGetProviderByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetProviderByID',
    request,
    metadata || {},
    this.methodDescriptorGetProviderByID);
  }

  methodDescriptorAddGenericOAuthProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddGenericOAuthProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddGenericOAuthProviderRequest,
    zitadel_admin_pb.AddGenericOAuthProviderResponse,
    (request: zitadel_admin_pb.AddGenericOAuthProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddGenericOAuthProviderResponse.deserializeBinary
  );

  addGenericOAuthProvider(
    request: zitadel_admin_pb.AddGenericOAuthProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddGenericOAuthProviderResponse>;

  addGenericOAuthProvider(
    request: zitadel_admin_pb.AddGenericOAuthProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGenericOAuthProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddGenericOAuthProviderResponse>;

  addGenericOAuthProvider(
    request: zitadel_admin_pb.AddGenericOAuthProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGenericOAuthProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddGenericOAuthProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGenericOAuthProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddGenericOAuthProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGenericOAuthProvider);
  }

  methodDescriptorUpdateGenericOAuthProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateGenericOAuthProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateGenericOAuthProviderRequest,
    zitadel_admin_pb.UpdateGenericOAuthProviderResponse,
    (request: zitadel_admin_pb.UpdateGenericOAuthProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateGenericOAuthProviderResponse.deserializeBinary
  );

  updateGenericOAuthProvider(
    request: zitadel_admin_pb.UpdateGenericOAuthProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateGenericOAuthProviderResponse>;

  updateGenericOAuthProvider(
    request: zitadel_admin_pb.UpdateGenericOAuthProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGenericOAuthProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateGenericOAuthProviderResponse>;

  updateGenericOAuthProvider(
    request: zitadel_admin_pb.UpdateGenericOAuthProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGenericOAuthProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateGenericOAuthProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGenericOAuthProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateGenericOAuthProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGenericOAuthProvider);
  }

  methodDescriptorAddGenericOIDCProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddGenericOIDCProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddGenericOIDCProviderRequest,
    zitadel_admin_pb.AddGenericOIDCProviderResponse,
    (request: zitadel_admin_pb.AddGenericOIDCProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddGenericOIDCProviderResponse.deserializeBinary
  );

  addGenericOIDCProvider(
    request: zitadel_admin_pb.AddGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddGenericOIDCProviderResponse>;

  addGenericOIDCProvider(
    request: zitadel_admin_pb.AddGenericOIDCProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGenericOIDCProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddGenericOIDCProviderResponse>;

  addGenericOIDCProvider(
    request: zitadel_admin_pb.AddGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGenericOIDCProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddGenericOIDCProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGenericOIDCProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddGenericOIDCProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGenericOIDCProvider);
  }

  methodDescriptorUpdateGenericOIDCProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateGenericOIDCProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateGenericOIDCProviderRequest,
    zitadel_admin_pb.UpdateGenericOIDCProviderResponse,
    (request: zitadel_admin_pb.UpdateGenericOIDCProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateGenericOIDCProviderResponse.deserializeBinary
  );

  updateGenericOIDCProvider(
    request: zitadel_admin_pb.UpdateGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateGenericOIDCProviderResponse>;

  updateGenericOIDCProvider(
    request: zitadel_admin_pb.UpdateGenericOIDCProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGenericOIDCProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateGenericOIDCProviderResponse>;

  updateGenericOIDCProvider(
    request: zitadel_admin_pb.UpdateGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGenericOIDCProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateGenericOIDCProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGenericOIDCProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateGenericOIDCProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGenericOIDCProvider);
  }

  methodDescriptorMigrateGenericOIDCProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/MigrateGenericOIDCProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.MigrateGenericOIDCProviderRequest,
    zitadel_admin_pb.MigrateGenericOIDCProviderResponse,
    (request: zitadel_admin_pb.MigrateGenericOIDCProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.MigrateGenericOIDCProviderResponse.deserializeBinary
  );

  migrateGenericOIDCProvider(
    request: zitadel_admin_pb.MigrateGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.MigrateGenericOIDCProviderResponse>;

  migrateGenericOIDCProvider(
    request: zitadel_admin_pb.MigrateGenericOIDCProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.MigrateGenericOIDCProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.MigrateGenericOIDCProviderResponse>;

  migrateGenericOIDCProvider(
    request: zitadel_admin_pb.MigrateGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.MigrateGenericOIDCProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/MigrateGenericOIDCProvider',
        request,
        metadata || {},
        this.methodDescriptorMigrateGenericOIDCProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/MigrateGenericOIDCProvider',
    request,
    metadata || {},
    this.methodDescriptorMigrateGenericOIDCProvider);
  }

  methodDescriptorAddJWTProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddJWTProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddJWTProviderRequest,
    zitadel_admin_pb.AddJWTProviderResponse,
    (request: zitadel_admin_pb.AddJWTProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddJWTProviderResponse.deserializeBinary
  );

  addJWTProvider(
    request: zitadel_admin_pb.AddJWTProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddJWTProviderResponse>;

  addJWTProvider(
    request: zitadel_admin_pb.AddJWTProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddJWTProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddJWTProviderResponse>;

  addJWTProvider(
    request: zitadel_admin_pb.AddJWTProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddJWTProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddJWTProvider',
        request,
        metadata || {},
        this.methodDescriptorAddJWTProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddJWTProvider',
    request,
    metadata || {},
    this.methodDescriptorAddJWTProvider);
  }

  methodDescriptorUpdateJWTProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateJWTProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateJWTProviderRequest,
    zitadel_admin_pb.UpdateJWTProviderResponse,
    (request: zitadel_admin_pb.UpdateJWTProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateJWTProviderResponse.deserializeBinary
  );

  updateJWTProvider(
    request: zitadel_admin_pb.UpdateJWTProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateJWTProviderResponse>;

  updateJWTProvider(
    request: zitadel_admin_pb.UpdateJWTProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateJWTProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateJWTProviderResponse>;

  updateJWTProvider(
    request: zitadel_admin_pb.UpdateJWTProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateJWTProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateJWTProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateJWTProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateJWTProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateJWTProvider);
  }

  methodDescriptorAddAzureADProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddAzureADProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddAzureADProviderRequest,
    zitadel_admin_pb.AddAzureADProviderResponse,
    (request: zitadel_admin_pb.AddAzureADProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddAzureADProviderResponse.deserializeBinary
  );

  addAzureADProvider(
    request: zitadel_admin_pb.AddAzureADProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddAzureADProviderResponse>;

  addAzureADProvider(
    request: zitadel_admin_pb.AddAzureADProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddAzureADProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddAzureADProviderResponse>;

  addAzureADProvider(
    request: zitadel_admin_pb.AddAzureADProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddAzureADProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddAzureADProvider',
        request,
        metadata || {},
        this.methodDescriptorAddAzureADProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddAzureADProvider',
    request,
    metadata || {},
    this.methodDescriptorAddAzureADProvider);
  }

  methodDescriptorUpdateAzureADProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateAzureADProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateAzureADProviderRequest,
    zitadel_admin_pb.UpdateAzureADProviderResponse,
    (request: zitadel_admin_pb.UpdateAzureADProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateAzureADProviderResponse.deserializeBinary
  );

  updateAzureADProvider(
    request: zitadel_admin_pb.UpdateAzureADProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateAzureADProviderResponse>;

  updateAzureADProvider(
    request: zitadel_admin_pb.UpdateAzureADProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateAzureADProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateAzureADProviderResponse>;

  updateAzureADProvider(
    request: zitadel_admin_pb.UpdateAzureADProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateAzureADProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateAzureADProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateAzureADProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateAzureADProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateAzureADProvider);
  }

  methodDescriptorAddGitHubProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddGitHubProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddGitHubProviderRequest,
    zitadel_admin_pb.AddGitHubProviderResponse,
    (request: zitadel_admin_pb.AddGitHubProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddGitHubProviderResponse.deserializeBinary
  );

  addGitHubProvider(
    request: zitadel_admin_pb.AddGitHubProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddGitHubProviderResponse>;

  addGitHubProvider(
    request: zitadel_admin_pb.AddGitHubProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGitHubProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddGitHubProviderResponse>;

  addGitHubProvider(
    request: zitadel_admin_pb.AddGitHubProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGitHubProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddGitHubProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGitHubProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddGitHubProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGitHubProvider);
  }

  methodDescriptorUpdateGitHubProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateGitHubProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateGitHubProviderRequest,
    zitadel_admin_pb.UpdateGitHubProviderResponse,
    (request: zitadel_admin_pb.UpdateGitHubProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateGitHubProviderResponse.deserializeBinary
  );

  updateGitHubProvider(
    request: zitadel_admin_pb.UpdateGitHubProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateGitHubProviderResponse>;

  updateGitHubProvider(
    request: zitadel_admin_pb.UpdateGitHubProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGitHubProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateGitHubProviderResponse>;

  updateGitHubProvider(
    request: zitadel_admin_pb.UpdateGitHubProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGitHubProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateGitHubProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGitHubProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateGitHubProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGitHubProvider);
  }

  methodDescriptorAddGitHubEnterpriseServerProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddGitHubEnterpriseServerProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddGitHubEnterpriseServerProviderRequest,
    zitadel_admin_pb.AddGitHubEnterpriseServerProviderResponse,
    (request: zitadel_admin_pb.AddGitHubEnterpriseServerProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddGitHubEnterpriseServerProviderResponse.deserializeBinary
  );

  addGitHubEnterpriseServerProvider(
    request: zitadel_admin_pb.AddGitHubEnterpriseServerProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddGitHubEnterpriseServerProviderResponse>;

  addGitHubEnterpriseServerProvider(
    request: zitadel_admin_pb.AddGitHubEnterpriseServerProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGitHubEnterpriseServerProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddGitHubEnterpriseServerProviderResponse>;

  addGitHubEnterpriseServerProvider(
    request: zitadel_admin_pb.AddGitHubEnterpriseServerProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGitHubEnterpriseServerProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddGitHubEnterpriseServerProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGitHubEnterpriseServerProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddGitHubEnterpriseServerProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGitHubEnterpriseServerProvider);
  }

  methodDescriptorUpdateGitHubEnterpriseServerProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateGitHubEnterpriseServerProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderRequest,
    zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderResponse,
    (request: zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderResponse.deserializeBinary
  );

  updateGitHubEnterpriseServerProvider(
    request: zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderResponse>;

  updateGitHubEnterpriseServerProvider(
    request: zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderResponse>;

  updateGitHubEnterpriseServerProvider(
    request: zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGitHubEnterpriseServerProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateGitHubEnterpriseServerProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGitHubEnterpriseServerProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateGitHubEnterpriseServerProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGitHubEnterpriseServerProvider);
  }

  methodDescriptorAddGitLabProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddGitLabProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddGitLabProviderRequest,
    zitadel_admin_pb.AddGitLabProviderResponse,
    (request: zitadel_admin_pb.AddGitLabProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddGitLabProviderResponse.deserializeBinary
  );

  addGitLabProvider(
    request: zitadel_admin_pb.AddGitLabProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddGitLabProviderResponse>;

  addGitLabProvider(
    request: zitadel_admin_pb.AddGitLabProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGitLabProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddGitLabProviderResponse>;

  addGitLabProvider(
    request: zitadel_admin_pb.AddGitLabProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGitLabProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddGitLabProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGitLabProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddGitLabProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGitLabProvider);
  }

  methodDescriptorUpdateGitLabProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateGitLabProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateGitLabProviderRequest,
    zitadel_admin_pb.UpdateGitLabProviderResponse,
    (request: zitadel_admin_pb.UpdateGitLabProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateGitLabProviderResponse.deserializeBinary
  );

  updateGitLabProvider(
    request: zitadel_admin_pb.UpdateGitLabProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateGitLabProviderResponse>;

  updateGitLabProvider(
    request: zitadel_admin_pb.UpdateGitLabProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGitLabProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateGitLabProviderResponse>;

  updateGitLabProvider(
    request: zitadel_admin_pb.UpdateGitLabProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGitLabProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateGitLabProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGitLabProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateGitLabProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGitLabProvider);
  }

  methodDescriptorAddGitLabSelfHostedProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddGitLabSelfHostedProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddGitLabSelfHostedProviderRequest,
    zitadel_admin_pb.AddGitLabSelfHostedProviderResponse,
    (request: zitadel_admin_pb.AddGitLabSelfHostedProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddGitLabSelfHostedProviderResponse.deserializeBinary
  );

  addGitLabSelfHostedProvider(
    request: zitadel_admin_pb.AddGitLabSelfHostedProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddGitLabSelfHostedProviderResponse>;

  addGitLabSelfHostedProvider(
    request: zitadel_admin_pb.AddGitLabSelfHostedProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGitLabSelfHostedProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddGitLabSelfHostedProviderResponse>;

  addGitLabSelfHostedProvider(
    request: zitadel_admin_pb.AddGitLabSelfHostedProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGitLabSelfHostedProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddGitLabSelfHostedProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGitLabSelfHostedProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddGitLabSelfHostedProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGitLabSelfHostedProvider);
  }

  methodDescriptorUpdateGitLabSelfHostedProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateGitLabSelfHostedProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateGitLabSelfHostedProviderRequest,
    zitadel_admin_pb.UpdateGitLabSelfHostedProviderResponse,
    (request: zitadel_admin_pb.UpdateGitLabSelfHostedProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateGitLabSelfHostedProviderResponse.deserializeBinary
  );

  updateGitLabSelfHostedProvider(
    request: zitadel_admin_pb.UpdateGitLabSelfHostedProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateGitLabSelfHostedProviderResponse>;

  updateGitLabSelfHostedProvider(
    request: zitadel_admin_pb.UpdateGitLabSelfHostedProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGitLabSelfHostedProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateGitLabSelfHostedProviderResponse>;

  updateGitLabSelfHostedProvider(
    request: zitadel_admin_pb.UpdateGitLabSelfHostedProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGitLabSelfHostedProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateGitLabSelfHostedProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGitLabSelfHostedProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateGitLabSelfHostedProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGitLabSelfHostedProvider);
  }

  methodDescriptorAddGoogleProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddGoogleProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddGoogleProviderRequest,
    zitadel_admin_pb.AddGoogleProviderResponse,
    (request: zitadel_admin_pb.AddGoogleProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddGoogleProviderResponse.deserializeBinary
  );

  addGoogleProvider(
    request: zitadel_admin_pb.AddGoogleProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddGoogleProviderResponse>;

  addGoogleProvider(
    request: zitadel_admin_pb.AddGoogleProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGoogleProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddGoogleProviderResponse>;

  addGoogleProvider(
    request: zitadel_admin_pb.AddGoogleProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddGoogleProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddGoogleProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGoogleProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddGoogleProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGoogleProvider);
  }

  methodDescriptorUpdateGoogleProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateGoogleProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateGoogleProviderRequest,
    zitadel_admin_pb.UpdateGoogleProviderResponse,
    (request: zitadel_admin_pb.UpdateGoogleProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateGoogleProviderResponse.deserializeBinary
  );

  updateGoogleProvider(
    request: zitadel_admin_pb.UpdateGoogleProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateGoogleProviderResponse>;

  updateGoogleProvider(
    request: zitadel_admin_pb.UpdateGoogleProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGoogleProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateGoogleProviderResponse>;

  updateGoogleProvider(
    request: zitadel_admin_pb.UpdateGoogleProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateGoogleProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateGoogleProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGoogleProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateGoogleProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGoogleProvider);
  }

  methodDescriptorAddLDAPProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddLDAPProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddLDAPProviderRequest,
    zitadel_admin_pb.AddLDAPProviderResponse,
    (request: zitadel_admin_pb.AddLDAPProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddLDAPProviderResponse.deserializeBinary
  );

  addLDAPProvider(
    request: zitadel_admin_pb.AddLDAPProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddLDAPProviderResponse>;

  addLDAPProvider(
    request: zitadel_admin_pb.AddLDAPProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddLDAPProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddLDAPProviderResponse>;

  addLDAPProvider(
    request: zitadel_admin_pb.AddLDAPProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddLDAPProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddLDAPProvider',
        request,
        metadata || {},
        this.methodDescriptorAddLDAPProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddLDAPProvider',
    request,
    metadata || {},
    this.methodDescriptorAddLDAPProvider);
  }

  methodDescriptorUpdateLDAPProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateLDAPProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateLDAPProviderRequest,
    zitadel_admin_pb.UpdateLDAPProviderResponse,
    (request: zitadel_admin_pb.UpdateLDAPProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateLDAPProviderResponse.deserializeBinary
  );

  updateLDAPProvider(
    request: zitadel_admin_pb.UpdateLDAPProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateLDAPProviderResponse>;

  updateLDAPProvider(
    request: zitadel_admin_pb.UpdateLDAPProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateLDAPProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateLDAPProviderResponse>;

  updateLDAPProvider(
    request: zitadel_admin_pb.UpdateLDAPProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateLDAPProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateLDAPProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateLDAPProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateLDAPProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateLDAPProvider);
  }

  methodDescriptorAddAppleProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddAppleProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddAppleProviderRequest,
    zitadel_admin_pb.AddAppleProviderResponse,
    (request: zitadel_admin_pb.AddAppleProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddAppleProviderResponse.deserializeBinary
  );

  addAppleProvider(
    request: zitadel_admin_pb.AddAppleProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddAppleProviderResponse>;

  addAppleProvider(
    request: zitadel_admin_pb.AddAppleProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddAppleProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddAppleProviderResponse>;

  addAppleProvider(
    request: zitadel_admin_pb.AddAppleProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddAppleProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddAppleProvider',
        request,
        metadata || {},
        this.methodDescriptorAddAppleProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddAppleProvider',
    request,
    metadata || {},
    this.methodDescriptorAddAppleProvider);
  }

  methodDescriptorUpdateAppleProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateAppleProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateAppleProviderRequest,
    zitadel_admin_pb.UpdateAppleProviderResponse,
    (request: zitadel_admin_pb.UpdateAppleProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateAppleProviderResponse.deserializeBinary
  );

  updateAppleProvider(
    request: zitadel_admin_pb.UpdateAppleProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateAppleProviderResponse>;

  updateAppleProvider(
    request: zitadel_admin_pb.UpdateAppleProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateAppleProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateAppleProviderResponse>;

  updateAppleProvider(
    request: zitadel_admin_pb.UpdateAppleProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateAppleProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateAppleProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateAppleProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateAppleProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateAppleProvider);
  }

  methodDescriptorAddSAMLProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddSAMLProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddSAMLProviderRequest,
    zitadel_admin_pb.AddSAMLProviderResponse,
    (request: zitadel_admin_pb.AddSAMLProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddSAMLProviderResponse.deserializeBinary
  );

  addSAMLProvider(
    request: zitadel_admin_pb.AddSAMLProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddSAMLProviderResponse>;

  addSAMLProvider(
    request: zitadel_admin_pb.AddSAMLProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddSAMLProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddSAMLProviderResponse>;

  addSAMLProvider(
    request: zitadel_admin_pb.AddSAMLProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddSAMLProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddSAMLProvider',
        request,
        metadata || {},
        this.methodDescriptorAddSAMLProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddSAMLProvider',
    request,
    metadata || {},
    this.methodDescriptorAddSAMLProvider);
  }

  methodDescriptorUpdateSAMLProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateSAMLProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateSAMLProviderRequest,
    zitadel_admin_pb.UpdateSAMLProviderResponse,
    (request: zitadel_admin_pb.UpdateSAMLProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateSAMLProviderResponse.deserializeBinary
  );

  updateSAMLProvider(
    request: zitadel_admin_pb.UpdateSAMLProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateSAMLProviderResponse>;

  updateSAMLProvider(
    request: zitadel_admin_pb.UpdateSAMLProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSAMLProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateSAMLProviderResponse>;

  updateSAMLProvider(
    request: zitadel_admin_pb.UpdateSAMLProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateSAMLProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateSAMLProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateSAMLProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateSAMLProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateSAMLProvider);
  }

  methodDescriptorRegenerateSAMLProviderCertificate = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RegenerateSAMLProviderCertificate',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RegenerateSAMLProviderCertificateRequest,
    zitadel_admin_pb.RegenerateSAMLProviderCertificateResponse,
    (request: zitadel_admin_pb.RegenerateSAMLProviderCertificateRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RegenerateSAMLProviderCertificateResponse.deserializeBinary
  );

  regenerateSAMLProviderCertificate(
    request: zitadel_admin_pb.RegenerateSAMLProviderCertificateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RegenerateSAMLProviderCertificateResponse>;

  regenerateSAMLProviderCertificate(
    request: zitadel_admin_pb.RegenerateSAMLProviderCertificateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RegenerateSAMLProviderCertificateResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RegenerateSAMLProviderCertificateResponse>;

  regenerateSAMLProviderCertificate(
    request: zitadel_admin_pb.RegenerateSAMLProviderCertificateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RegenerateSAMLProviderCertificateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RegenerateSAMLProviderCertificate',
        request,
        metadata || {},
        this.methodDescriptorRegenerateSAMLProviderCertificate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RegenerateSAMLProviderCertificate',
    request,
    metadata || {},
    this.methodDescriptorRegenerateSAMLProviderCertificate);
  }

  methodDescriptorDeleteProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/DeleteProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.DeleteProviderRequest,
    zitadel_admin_pb.DeleteProviderResponse,
    (request: zitadel_admin_pb.DeleteProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.DeleteProviderResponse.deserializeBinary
  );

  deleteProvider(
    request: zitadel_admin_pb.DeleteProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.DeleteProviderResponse>;

  deleteProvider(
    request: zitadel_admin_pb.DeleteProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.DeleteProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.DeleteProviderResponse>;

  deleteProvider(
    request: zitadel_admin_pb.DeleteProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.DeleteProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/DeleteProvider',
        request,
        metadata || {},
        this.methodDescriptorDeleteProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/DeleteProvider',
    request,
    metadata || {},
    this.methodDescriptorDeleteProvider);
  }

  methodDescriptorGetOrgIAMPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetOrgIAMPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetOrgIAMPolicyRequest,
    zitadel_admin_pb.GetOrgIAMPolicyResponse,
    (request: zitadel_admin_pb.GetOrgIAMPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetOrgIAMPolicyResponse.deserializeBinary
  );

  getOrgIAMPolicy(
    request: zitadel_admin_pb.GetOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetOrgIAMPolicyResponse>;

  getOrgIAMPolicy(
    request: zitadel_admin_pb.GetOrgIAMPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetOrgIAMPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetOrgIAMPolicyResponse>;

  getOrgIAMPolicy(
    request: zitadel_admin_pb.GetOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetOrgIAMPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetOrgIAMPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetOrgIAMPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetOrgIAMPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetOrgIAMPolicy);
  }

  methodDescriptorUpdateOrgIAMPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateOrgIAMPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateOrgIAMPolicyRequest,
    zitadel_admin_pb.UpdateOrgIAMPolicyResponse,
    (request: zitadel_admin_pb.UpdateOrgIAMPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateOrgIAMPolicyResponse.deserializeBinary
  );

  updateOrgIAMPolicy(
    request: zitadel_admin_pb.UpdateOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateOrgIAMPolicyResponse>;

  updateOrgIAMPolicy(
    request: zitadel_admin_pb.UpdateOrgIAMPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateOrgIAMPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateOrgIAMPolicyResponse>;

  updateOrgIAMPolicy(
    request: zitadel_admin_pb.UpdateOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateOrgIAMPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateOrgIAMPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateOrgIAMPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateOrgIAMPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateOrgIAMPolicy);
  }

  methodDescriptorGetCustomOrgIAMPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomOrgIAMPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomOrgIAMPolicyRequest,
    zitadel_admin_pb.GetCustomOrgIAMPolicyResponse,
    (request: zitadel_admin_pb.GetCustomOrgIAMPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomOrgIAMPolicyResponse.deserializeBinary
  );

  getCustomOrgIAMPolicy(
    request: zitadel_admin_pb.GetCustomOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomOrgIAMPolicyResponse>;

  getCustomOrgIAMPolicy(
    request: zitadel_admin_pb.GetCustomOrgIAMPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomOrgIAMPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomOrgIAMPolicyResponse>;

  getCustomOrgIAMPolicy(
    request: zitadel_admin_pb.GetCustomOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomOrgIAMPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomOrgIAMPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetCustomOrgIAMPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomOrgIAMPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetCustomOrgIAMPolicy);
  }

  methodDescriptorAddCustomOrgIAMPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddCustomOrgIAMPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddCustomOrgIAMPolicyRequest,
    zitadel_admin_pb.AddCustomOrgIAMPolicyResponse,
    (request: zitadel_admin_pb.AddCustomOrgIAMPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddCustomOrgIAMPolicyResponse.deserializeBinary
  );

  addCustomOrgIAMPolicy(
    request: zitadel_admin_pb.AddCustomOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddCustomOrgIAMPolicyResponse>;

  addCustomOrgIAMPolicy(
    request: zitadel_admin_pb.AddCustomOrgIAMPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddCustomOrgIAMPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddCustomOrgIAMPolicyResponse>;

  addCustomOrgIAMPolicy(
    request: zitadel_admin_pb.AddCustomOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddCustomOrgIAMPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddCustomOrgIAMPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomOrgIAMPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddCustomOrgIAMPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomOrgIAMPolicy);
  }

  methodDescriptorUpdateCustomOrgIAMPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateCustomOrgIAMPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateCustomOrgIAMPolicyRequest,
    zitadel_admin_pb.UpdateCustomOrgIAMPolicyResponse,
    (request: zitadel_admin_pb.UpdateCustomOrgIAMPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateCustomOrgIAMPolicyResponse.deserializeBinary
  );

  updateCustomOrgIAMPolicy(
    request: zitadel_admin_pb.UpdateCustomOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateCustomOrgIAMPolicyResponse>;

  updateCustomOrgIAMPolicy(
    request: zitadel_admin_pb.UpdateCustomOrgIAMPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateCustomOrgIAMPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateCustomOrgIAMPolicyResponse>;

  updateCustomOrgIAMPolicy(
    request: zitadel_admin_pb.UpdateCustomOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateCustomOrgIAMPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateCustomOrgIAMPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomOrgIAMPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateCustomOrgIAMPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomOrgIAMPolicy);
  }

  methodDescriptorResetCustomOrgIAMPolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomOrgIAMPolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultRequest,
    zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultResponse.deserializeBinary
  );

  resetCustomOrgIAMPolicyToDefault(
    request: zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultResponse>;

  resetCustomOrgIAMPolicyToDefault(
    request: zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultResponse>;

  resetCustomOrgIAMPolicyToDefault(
    request: zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomOrgIAMPolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomOrgIAMPolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomOrgIAMPolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomOrgIAMPolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomOrgIAMPolicyToDefault);
  }

  methodDescriptorGetDomainPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDomainPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDomainPolicyRequest,
    zitadel_admin_pb.GetDomainPolicyResponse,
    (request: zitadel_admin_pb.GetDomainPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDomainPolicyResponse.deserializeBinary
  );

  getDomainPolicy(
    request: zitadel_admin_pb.GetDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDomainPolicyResponse>;

  getDomainPolicy(
    request: zitadel_admin_pb.GetDomainPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDomainPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDomainPolicyResponse>;

  getDomainPolicy(
    request: zitadel_admin_pb.GetDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDomainPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDomainPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDomainPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDomainPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDomainPolicy);
  }

  methodDescriptorUpdateDomainPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateDomainPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateDomainPolicyRequest,
    zitadel_admin_pb.UpdateDomainPolicyResponse,
    (request: zitadel_admin_pb.UpdateDomainPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateDomainPolicyResponse.deserializeBinary
  );

  updateDomainPolicy(
    request: zitadel_admin_pb.UpdateDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateDomainPolicyResponse>;

  updateDomainPolicy(
    request: zitadel_admin_pb.UpdateDomainPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateDomainPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateDomainPolicyResponse>;

  updateDomainPolicy(
    request: zitadel_admin_pb.UpdateDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateDomainPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateDomainPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateDomainPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateDomainPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateDomainPolicy);
  }

  methodDescriptorGetCustomDomainPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomDomainPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomDomainPolicyRequest,
    zitadel_admin_pb.GetCustomDomainPolicyResponse,
    (request: zitadel_admin_pb.GetCustomDomainPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomDomainPolicyResponse.deserializeBinary
  );

  getCustomDomainPolicy(
    request: zitadel_admin_pb.GetCustomDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomDomainPolicyResponse>;

  getCustomDomainPolicy(
    request: zitadel_admin_pb.GetCustomDomainPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomDomainPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomDomainPolicyResponse>;

  getCustomDomainPolicy(
    request: zitadel_admin_pb.GetCustomDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomDomainPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomDomainPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetCustomDomainPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomDomainPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetCustomDomainPolicy);
  }

  methodDescriptorAddCustomDomainPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddCustomDomainPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddCustomDomainPolicyRequest,
    zitadel_admin_pb.AddCustomDomainPolicyResponse,
    (request: zitadel_admin_pb.AddCustomDomainPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddCustomDomainPolicyResponse.deserializeBinary
  );

  addCustomDomainPolicy(
    request: zitadel_admin_pb.AddCustomDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddCustomDomainPolicyResponse>;

  addCustomDomainPolicy(
    request: zitadel_admin_pb.AddCustomDomainPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddCustomDomainPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddCustomDomainPolicyResponse>;

  addCustomDomainPolicy(
    request: zitadel_admin_pb.AddCustomDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddCustomDomainPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddCustomDomainPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomDomainPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddCustomDomainPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomDomainPolicy);
  }

  methodDescriptorUpdateCustomDomainPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateCustomDomainPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateCustomDomainPolicyRequest,
    zitadel_admin_pb.UpdateCustomDomainPolicyResponse,
    (request: zitadel_admin_pb.UpdateCustomDomainPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateCustomDomainPolicyResponse.deserializeBinary
  );

  updateCustomDomainPolicy(
    request: zitadel_admin_pb.UpdateCustomDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateCustomDomainPolicyResponse>;

  updateCustomDomainPolicy(
    request: zitadel_admin_pb.UpdateCustomDomainPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateCustomDomainPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateCustomDomainPolicyResponse>;

  updateCustomDomainPolicy(
    request: zitadel_admin_pb.UpdateCustomDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateCustomDomainPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateCustomDomainPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomDomainPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateCustomDomainPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomDomainPolicy);
  }

  methodDescriptorResetCustomDomainPolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomDomainPolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomDomainPolicyToDefaultRequest,
    zitadel_admin_pb.ResetCustomDomainPolicyToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomDomainPolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomDomainPolicyToDefaultResponse.deserializeBinary
  );

  resetCustomDomainPolicyToDefault(
    request: zitadel_admin_pb.ResetCustomDomainPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomDomainPolicyToDefaultResponse>;

  resetCustomDomainPolicyToDefault(
    request: zitadel_admin_pb.ResetCustomDomainPolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomDomainPolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomDomainPolicyToDefaultResponse>;

  resetCustomDomainPolicyToDefault(
    request: zitadel_admin_pb.ResetCustomDomainPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomDomainPolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomDomainPolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomDomainPolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomDomainPolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomDomainPolicyToDefault);
  }

  methodDescriptorGetLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetLabelPolicyRequest,
    zitadel_admin_pb.GetLabelPolicyResponse,
    (request: zitadel_admin_pb.GetLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetLabelPolicyResponse.deserializeBinary
  );

  getLabelPolicy(
    request: zitadel_admin_pb.GetLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetLabelPolicyResponse>;

  getLabelPolicy(
    request: zitadel_admin_pb.GetLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetLabelPolicyResponse>;

  getLabelPolicy(
    request: zitadel_admin_pb.GetLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetLabelPolicy);
  }

  methodDescriptorGetPreviewLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetPreviewLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetPreviewLabelPolicyRequest,
    zitadel_admin_pb.GetPreviewLabelPolicyResponse,
    (request: zitadel_admin_pb.GetPreviewLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetPreviewLabelPolicyResponse.deserializeBinary
  );

  getPreviewLabelPolicy(
    request: zitadel_admin_pb.GetPreviewLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetPreviewLabelPolicyResponse>;

  getPreviewLabelPolicy(
    request: zitadel_admin_pb.GetPreviewLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetPreviewLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetPreviewLabelPolicyResponse>;

  getPreviewLabelPolicy(
    request: zitadel_admin_pb.GetPreviewLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetPreviewLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetPreviewLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetPreviewLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetPreviewLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetPreviewLabelPolicy);
  }

  methodDescriptorUpdateLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateLabelPolicyRequest,
    zitadel_admin_pb.UpdateLabelPolicyResponse,
    (request: zitadel_admin_pb.UpdateLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateLabelPolicyResponse.deserializeBinary
  );

  updateLabelPolicy(
    request: zitadel_admin_pb.UpdateLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateLabelPolicyResponse>;

  updateLabelPolicy(
    request: zitadel_admin_pb.UpdateLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateLabelPolicyResponse>;

  updateLabelPolicy(
    request: zitadel_admin_pb.UpdateLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateLabelPolicy);
  }

  methodDescriptorActivateLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ActivateLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ActivateLabelPolicyRequest,
    zitadel_admin_pb.ActivateLabelPolicyResponse,
    (request: zitadel_admin_pb.ActivateLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ActivateLabelPolicyResponse.deserializeBinary
  );

  activateLabelPolicy(
    request: zitadel_admin_pb.ActivateLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ActivateLabelPolicyResponse>;

  activateLabelPolicy(
    request: zitadel_admin_pb.ActivateLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ActivateLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ActivateLabelPolicyResponse>;

  activateLabelPolicy(
    request: zitadel_admin_pb.ActivateLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ActivateLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ActivateLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorActivateLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ActivateLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorActivateLabelPolicy);
  }

  methodDescriptorRemoveLabelPolicyLogo = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveLabelPolicyLogo',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveLabelPolicyLogoRequest,
    zitadel_admin_pb.RemoveLabelPolicyLogoResponse,
    (request: zitadel_admin_pb.RemoveLabelPolicyLogoRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveLabelPolicyLogoResponse.deserializeBinary
  );

  removeLabelPolicyLogo(
    request: zitadel_admin_pb.RemoveLabelPolicyLogoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveLabelPolicyLogoResponse>;

  removeLabelPolicyLogo(
    request: zitadel_admin_pb.RemoveLabelPolicyLogoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyLogoResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveLabelPolicyLogoResponse>;

  removeLabelPolicyLogo(
    request: zitadel_admin_pb.RemoveLabelPolicyLogoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyLogoResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveLabelPolicyLogo',
        request,
        metadata || {},
        this.methodDescriptorRemoveLabelPolicyLogo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveLabelPolicyLogo',
    request,
    metadata || {},
    this.methodDescriptorRemoveLabelPolicyLogo);
  }

  methodDescriptorRemoveLabelPolicyLogoDark = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveLabelPolicyLogoDark',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveLabelPolicyLogoDarkRequest,
    zitadel_admin_pb.RemoveLabelPolicyLogoDarkResponse,
    (request: zitadel_admin_pb.RemoveLabelPolicyLogoDarkRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveLabelPolicyLogoDarkResponse.deserializeBinary
  );

  removeLabelPolicyLogoDark(
    request: zitadel_admin_pb.RemoveLabelPolicyLogoDarkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveLabelPolicyLogoDarkResponse>;

  removeLabelPolicyLogoDark(
    request: zitadel_admin_pb.RemoveLabelPolicyLogoDarkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyLogoDarkResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveLabelPolicyLogoDarkResponse>;

  removeLabelPolicyLogoDark(
    request: zitadel_admin_pb.RemoveLabelPolicyLogoDarkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyLogoDarkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveLabelPolicyLogoDark',
        request,
        metadata || {},
        this.methodDescriptorRemoveLabelPolicyLogoDark,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveLabelPolicyLogoDark',
    request,
    metadata || {},
    this.methodDescriptorRemoveLabelPolicyLogoDark);
  }

  methodDescriptorRemoveLabelPolicyIcon = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveLabelPolicyIcon',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveLabelPolicyIconRequest,
    zitadel_admin_pb.RemoveLabelPolicyIconResponse,
    (request: zitadel_admin_pb.RemoveLabelPolicyIconRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveLabelPolicyIconResponse.deserializeBinary
  );

  removeLabelPolicyIcon(
    request: zitadel_admin_pb.RemoveLabelPolicyIconRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveLabelPolicyIconResponse>;

  removeLabelPolicyIcon(
    request: zitadel_admin_pb.RemoveLabelPolicyIconRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyIconResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveLabelPolicyIconResponse>;

  removeLabelPolicyIcon(
    request: zitadel_admin_pb.RemoveLabelPolicyIconRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyIconResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveLabelPolicyIcon',
        request,
        metadata || {},
        this.methodDescriptorRemoveLabelPolicyIcon,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveLabelPolicyIcon',
    request,
    metadata || {},
    this.methodDescriptorRemoveLabelPolicyIcon);
  }

  methodDescriptorRemoveLabelPolicyIconDark = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveLabelPolicyIconDark',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveLabelPolicyIconDarkRequest,
    zitadel_admin_pb.RemoveLabelPolicyIconDarkResponse,
    (request: zitadel_admin_pb.RemoveLabelPolicyIconDarkRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveLabelPolicyIconDarkResponse.deserializeBinary
  );

  removeLabelPolicyIconDark(
    request: zitadel_admin_pb.RemoveLabelPolicyIconDarkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveLabelPolicyIconDarkResponse>;

  removeLabelPolicyIconDark(
    request: zitadel_admin_pb.RemoveLabelPolicyIconDarkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyIconDarkResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveLabelPolicyIconDarkResponse>;

  removeLabelPolicyIconDark(
    request: zitadel_admin_pb.RemoveLabelPolicyIconDarkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyIconDarkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveLabelPolicyIconDark',
        request,
        metadata || {},
        this.methodDescriptorRemoveLabelPolicyIconDark,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveLabelPolicyIconDark',
    request,
    metadata || {},
    this.methodDescriptorRemoveLabelPolicyIconDark);
  }

  methodDescriptorRemoveLabelPolicyFont = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveLabelPolicyFont',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveLabelPolicyFontRequest,
    zitadel_admin_pb.RemoveLabelPolicyFontResponse,
    (request: zitadel_admin_pb.RemoveLabelPolicyFontRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveLabelPolicyFontResponse.deserializeBinary
  );

  removeLabelPolicyFont(
    request: zitadel_admin_pb.RemoveLabelPolicyFontRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveLabelPolicyFontResponse>;

  removeLabelPolicyFont(
    request: zitadel_admin_pb.RemoveLabelPolicyFontRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyFontResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveLabelPolicyFontResponse>;

  removeLabelPolicyFont(
    request: zitadel_admin_pb.RemoveLabelPolicyFontRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveLabelPolicyFontResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveLabelPolicyFont',
        request,
        metadata || {},
        this.methodDescriptorRemoveLabelPolicyFont,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveLabelPolicyFont',
    request,
    metadata || {},
    this.methodDescriptorRemoveLabelPolicyFont);
  }

  methodDescriptorGetLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetLoginPolicyRequest,
    zitadel_admin_pb.GetLoginPolicyResponse,
    (request: zitadel_admin_pb.GetLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetLoginPolicyResponse.deserializeBinary
  );

  getLoginPolicy(
    request: zitadel_admin_pb.GetLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetLoginPolicyResponse>;

  getLoginPolicy(
    request: zitadel_admin_pb.GetLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetLoginPolicyResponse>;

  getLoginPolicy(
    request: zitadel_admin_pb.GetLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetLoginPolicy);
  }

  methodDescriptorUpdateLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateLoginPolicyRequest,
    zitadel_admin_pb.UpdateLoginPolicyResponse,
    (request: zitadel_admin_pb.UpdateLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateLoginPolicyResponse.deserializeBinary
  );

  updateLoginPolicy(
    request: zitadel_admin_pb.UpdateLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateLoginPolicyResponse>;

  updateLoginPolicy(
    request: zitadel_admin_pb.UpdateLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateLoginPolicyResponse>;

  updateLoginPolicy(
    request: zitadel_admin_pb.UpdateLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateLoginPolicy);
  }

  methodDescriptorListLoginPolicyIDPs = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListLoginPolicyIDPs',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListLoginPolicyIDPsRequest,
    zitadel_admin_pb.ListLoginPolicyIDPsResponse,
    (request: zitadel_admin_pb.ListLoginPolicyIDPsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListLoginPolicyIDPsResponse.deserializeBinary
  );

  listLoginPolicyIDPs(
    request: zitadel_admin_pb.ListLoginPolicyIDPsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListLoginPolicyIDPsResponse>;

  listLoginPolicyIDPs(
    request: zitadel_admin_pb.ListLoginPolicyIDPsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListLoginPolicyIDPsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListLoginPolicyIDPsResponse>;

  listLoginPolicyIDPs(
    request: zitadel_admin_pb.ListLoginPolicyIDPsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListLoginPolicyIDPsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListLoginPolicyIDPs',
        request,
        metadata || {},
        this.methodDescriptorListLoginPolicyIDPs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListLoginPolicyIDPs',
    request,
    metadata || {},
    this.methodDescriptorListLoginPolicyIDPs);
  }

  methodDescriptorAddIDPToLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddIDPToLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddIDPToLoginPolicyRequest,
    zitadel_admin_pb.AddIDPToLoginPolicyResponse,
    (request: zitadel_admin_pb.AddIDPToLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddIDPToLoginPolicyResponse.deserializeBinary
  );

  addIDPToLoginPolicy(
    request: zitadel_admin_pb.AddIDPToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddIDPToLoginPolicyResponse>;

  addIDPToLoginPolicy(
    request: zitadel_admin_pb.AddIDPToLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddIDPToLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddIDPToLoginPolicyResponse>;

  addIDPToLoginPolicy(
    request: zitadel_admin_pb.AddIDPToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddIDPToLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddIDPToLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddIDPToLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddIDPToLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddIDPToLoginPolicy);
  }

  methodDescriptorRemoveIDPFromLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveIDPFromLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveIDPFromLoginPolicyRequest,
    zitadel_admin_pb.RemoveIDPFromLoginPolicyResponse,
    (request: zitadel_admin_pb.RemoveIDPFromLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveIDPFromLoginPolicyResponse.deserializeBinary
  );

  removeIDPFromLoginPolicy(
    request: zitadel_admin_pb.RemoveIDPFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveIDPFromLoginPolicyResponse>;

  removeIDPFromLoginPolicy(
    request: zitadel_admin_pb.RemoveIDPFromLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveIDPFromLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveIDPFromLoginPolicyResponse>;

  removeIDPFromLoginPolicy(
    request: zitadel_admin_pb.RemoveIDPFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveIDPFromLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveIDPFromLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorRemoveIDPFromLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveIDPFromLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorRemoveIDPFromLoginPolicy);
  }

  methodDescriptorListLoginPolicySecondFactors = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListLoginPolicySecondFactors',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListLoginPolicySecondFactorsRequest,
    zitadel_admin_pb.ListLoginPolicySecondFactorsResponse,
    (request: zitadel_admin_pb.ListLoginPolicySecondFactorsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListLoginPolicySecondFactorsResponse.deserializeBinary
  );

  listLoginPolicySecondFactors(
    request: zitadel_admin_pb.ListLoginPolicySecondFactorsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListLoginPolicySecondFactorsResponse>;

  listLoginPolicySecondFactors(
    request: zitadel_admin_pb.ListLoginPolicySecondFactorsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListLoginPolicySecondFactorsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListLoginPolicySecondFactorsResponse>;

  listLoginPolicySecondFactors(
    request: zitadel_admin_pb.ListLoginPolicySecondFactorsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListLoginPolicySecondFactorsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListLoginPolicySecondFactors',
        request,
        metadata || {},
        this.methodDescriptorListLoginPolicySecondFactors,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListLoginPolicySecondFactors',
    request,
    metadata || {},
    this.methodDescriptorListLoginPolicySecondFactors);
  }

  methodDescriptorAddSecondFactorToLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddSecondFactorToLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddSecondFactorToLoginPolicyRequest,
    zitadel_admin_pb.AddSecondFactorToLoginPolicyResponse,
    (request: zitadel_admin_pb.AddSecondFactorToLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddSecondFactorToLoginPolicyResponse.deserializeBinary
  );

  addSecondFactorToLoginPolicy(
    request: zitadel_admin_pb.AddSecondFactorToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddSecondFactorToLoginPolicyResponse>;

  addSecondFactorToLoginPolicy(
    request: zitadel_admin_pb.AddSecondFactorToLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddSecondFactorToLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddSecondFactorToLoginPolicyResponse>;

  addSecondFactorToLoginPolicy(
    request: zitadel_admin_pb.AddSecondFactorToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddSecondFactorToLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddSecondFactorToLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddSecondFactorToLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddSecondFactorToLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddSecondFactorToLoginPolicy);
  }

  methodDescriptorRemoveSecondFactorFromLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveSecondFactorFromLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyRequest,
    zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyResponse,
    (request: zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyResponse.deserializeBinary
  );

  removeSecondFactorFromLoginPolicy(
    request: zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyResponse>;

  removeSecondFactorFromLoginPolicy(
    request: zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyResponse>;

  removeSecondFactorFromLoginPolicy(
    request: zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveSecondFactorFromLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveSecondFactorFromLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorRemoveSecondFactorFromLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveSecondFactorFromLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorRemoveSecondFactorFromLoginPolicy);
  }

  methodDescriptorListLoginPolicyMultiFactors = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListLoginPolicyMultiFactors',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListLoginPolicyMultiFactorsRequest,
    zitadel_admin_pb.ListLoginPolicyMultiFactorsResponse,
    (request: zitadel_admin_pb.ListLoginPolicyMultiFactorsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListLoginPolicyMultiFactorsResponse.deserializeBinary
  );

  listLoginPolicyMultiFactors(
    request: zitadel_admin_pb.ListLoginPolicyMultiFactorsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListLoginPolicyMultiFactorsResponse>;

  listLoginPolicyMultiFactors(
    request: zitadel_admin_pb.ListLoginPolicyMultiFactorsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListLoginPolicyMultiFactorsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListLoginPolicyMultiFactorsResponse>;

  listLoginPolicyMultiFactors(
    request: zitadel_admin_pb.ListLoginPolicyMultiFactorsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListLoginPolicyMultiFactorsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListLoginPolicyMultiFactors',
        request,
        metadata || {},
        this.methodDescriptorListLoginPolicyMultiFactors,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListLoginPolicyMultiFactors',
    request,
    metadata || {},
    this.methodDescriptorListLoginPolicyMultiFactors);
  }

  methodDescriptorAddMultiFactorToLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddMultiFactorToLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddMultiFactorToLoginPolicyRequest,
    zitadel_admin_pb.AddMultiFactorToLoginPolicyResponse,
    (request: zitadel_admin_pb.AddMultiFactorToLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddMultiFactorToLoginPolicyResponse.deserializeBinary
  );

  addMultiFactorToLoginPolicy(
    request: zitadel_admin_pb.AddMultiFactorToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddMultiFactorToLoginPolicyResponse>;

  addMultiFactorToLoginPolicy(
    request: zitadel_admin_pb.AddMultiFactorToLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddMultiFactorToLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddMultiFactorToLoginPolicyResponse>;

  addMultiFactorToLoginPolicy(
    request: zitadel_admin_pb.AddMultiFactorToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddMultiFactorToLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddMultiFactorToLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddMultiFactorToLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddMultiFactorToLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddMultiFactorToLoginPolicy);
  }

  methodDescriptorRemoveMultiFactorFromLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveMultiFactorFromLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyRequest,
    zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyResponse,
    (request: zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyResponse.deserializeBinary
  );

  removeMultiFactorFromLoginPolicy(
    request: zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyResponse>;

  removeMultiFactorFromLoginPolicy(
    request: zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyResponse>;

  removeMultiFactorFromLoginPolicy(
    request: zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveMultiFactorFromLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveMultiFactorFromLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorRemoveMultiFactorFromLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveMultiFactorFromLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorRemoveMultiFactorFromLoginPolicy);
  }

  methodDescriptorGetPasswordComplexityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetPasswordComplexityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetPasswordComplexityPolicyRequest,
    zitadel_admin_pb.GetPasswordComplexityPolicyResponse,
    (request: zitadel_admin_pb.GetPasswordComplexityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetPasswordComplexityPolicyResponse.deserializeBinary
  );

  getPasswordComplexityPolicy(
    request: zitadel_admin_pb.GetPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetPasswordComplexityPolicyResponse>;

  getPasswordComplexityPolicy(
    request: zitadel_admin_pb.GetPasswordComplexityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetPasswordComplexityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetPasswordComplexityPolicyResponse>;

  getPasswordComplexityPolicy(
    request: zitadel_admin_pb.GetPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetPasswordComplexityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetPasswordComplexityPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetPasswordComplexityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetPasswordComplexityPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetPasswordComplexityPolicy);
  }

  methodDescriptorUpdatePasswordComplexityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdatePasswordComplexityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdatePasswordComplexityPolicyRequest,
    zitadel_admin_pb.UpdatePasswordComplexityPolicyResponse,
    (request: zitadel_admin_pb.UpdatePasswordComplexityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdatePasswordComplexityPolicyResponse.deserializeBinary
  );

  updatePasswordComplexityPolicy(
    request: zitadel_admin_pb.UpdatePasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdatePasswordComplexityPolicyResponse>;

  updatePasswordComplexityPolicy(
    request: zitadel_admin_pb.UpdatePasswordComplexityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdatePasswordComplexityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdatePasswordComplexityPolicyResponse>;

  updatePasswordComplexityPolicy(
    request: zitadel_admin_pb.UpdatePasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdatePasswordComplexityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdatePasswordComplexityPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdatePasswordComplexityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdatePasswordComplexityPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdatePasswordComplexityPolicy);
  }

  methodDescriptorGetPasswordAgePolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetPasswordAgePolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetPasswordAgePolicyRequest,
    zitadel_admin_pb.GetPasswordAgePolicyResponse,
    (request: zitadel_admin_pb.GetPasswordAgePolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetPasswordAgePolicyResponse.deserializeBinary
  );

  getPasswordAgePolicy(
    request: zitadel_admin_pb.GetPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetPasswordAgePolicyResponse>;

  getPasswordAgePolicy(
    request: zitadel_admin_pb.GetPasswordAgePolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetPasswordAgePolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetPasswordAgePolicyResponse>;

  getPasswordAgePolicy(
    request: zitadel_admin_pb.GetPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetPasswordAgePolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetPasswordAgePolicy',
        request,
        metadata || {},
        this.methodDescriptorGetPasswordAgePolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetPasswordAgePolicy',
    request,
    metadata || {},
    this.methodDescriptorGetPasswordAgePolicy);
  }

  methodDescriptorUpdatePasswordAgePolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdatePasswordAgePolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdatePasswordAgePolicyRequest,
    zitadel_admin_pb.UpdatePasswordAgePolicyResponse,
    (request: zitadel_admin_pb.UpdatePasswordAgePolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdatePasswordAgePolicyResponse.deserializeBinary
  );

  updatePasswordAgePolicy(
    request: zitadel_admin_pb.UpdatePasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdatePasswordAgePolicyResponse>;

  updatePasswordAgePolicy(
    request: zitadel_admin_pb.UpdatePasswordAgePolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdatePasswordAgePolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdatePasswordAgePolicyResponse>;

  updatePasswordAgePolicy(
    request: zitadel_admin_pb.UpdatePasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdatePasswordAgePolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdatePasswordAgePolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdatePasswordAgePolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdatePasswordAgePolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdatePasswordAgePolicy);
  }

  methodDescriptorGetLockoutPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetLockoutPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetLockoutPolicyRequest,
    zitadel_admin_pb.GetLockoutPolicyResponse,
    (request: zitadel_admin_pb.GetLockoutPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetLockoutPolicyResponse.deserializeBinary
  );

  getLockoutPolicy(
    request: zitadel_admin_pb.GetLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetLockoutPolicyResponse>;

  getLockoutPolicy(
    request: zitadel_admin_pb.GetLockoutPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetLockoutPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetLockoutPolicyResponse>;

  getLockoutPolicy(
    request: zitadel_admin_pb.GetLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetLockoutPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetLockoutPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetLockoutPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetLockoutPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetLockoutPolicy);
  }

  methodDescriptorUpdateLockoutPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateLockoutPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateLockoutPolicyRequest,
    zitadel_admin_pb.UpdateLockoutPolicyResponse,
    (request: zitadel_admin_pb.UpdateLockoutPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateLockoutPolicyResponse.deserializeBinary
  );

  updateLockoutPolicy(
    request: zitadel_admin_pb.UpdateLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateLockoutPolicyResponse>;

  updateLockoutPolicy(
    request: zitadel_admin_pb.UpdateLockoutPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateLockoutPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateLockoutPolicyResponse>;

  updateLockoutPolicy(
    request: zitadel_admin_pb.UpdateLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateLockoutPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateLockoutPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateLockoutPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateLockoutPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateLockoutPolicy);
  }

  methodDescriptorGetPrivacyPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetPrivacyPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetPrivacyPolicyRequest,
    zitadel_admin_pb.GetPrivacyPolicyResponse,
    (request: zitadel_admin_pb.GetPrivacyPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetPrivacyPolicyResponse.deserializeBinary
  );

  getPrivacyPolicy(
    request: zitadel_admin_pb.GetPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetPrivacyPolicyResponse>;

  getPrivacyPolicy(
    request: zitadel_admin_pb.GetPrivacyPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetPrivacyPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetPrivacyPolicyResponse>;

  getPrivacyPolicy(
    request: zitadel_admin_pb.GetPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetPrivacyPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetPrivacyPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetPrivacyPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetPrivacyPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetPrivacyPolicy);
  }

  methodDescriptorUpdatePrivacyPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdatePrivacyPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdatePrivacyPolicyRequest,
    zitadel_admin_pb.UpdatePrivacyPolicyResponse,
    (request: zitadel_admin_pb.UpdatePrivacyPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdatePrivacyPolicyResponse.deserializeBinary
  );

  updatePrivacyPolicy(
    request: zitadel_admin_pb.UpdatePrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdatePrivacyPolicyResponse>;

  updatePrivacyPolicy(
    request: zitadel_admin_pb.UpdatePrivacyPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdatePrivacyPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdatePrivacyPolicyResponse>;

  updatePrivacyPolicy(
    request: zitadel_admin_pb.UpdatePrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdatePrivacyPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdatePrivacyPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdatePrivacyPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdatePrivacyPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdatePrivacyPolicy);
  }

  methodDescriptorAddNotificationPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddNotificationPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddNotificationPolicyRequest,
    zitadel_admin_pb.AddNotificationPolicyResponse,
    (request: zitadel_admin_pb.AddNotificationPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddNotificationPolicyResponse.deserializeBinary
  );

  addNotificationPolicy(
    request: zitadel_admin_pb.AddNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddNotificationPolicyResponse>;

  addNotificationPolicy(
    request: zitadel_admin_pb.AddNotificationPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddNotificationPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddNotificationPolicyResponse>;

  addNotificationPolicy(
    request: zitadel_admin_pb.AddNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddNotificationPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddNotificationPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddNotificationPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddNotificationPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddNotificationPolicy);
  }

  methodDescriptorGetNotificationPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetNotificationPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetNotificationPolicyRequest,
    zitadel_admin_pb.GetNotificationPolicyResponse,
    (request: zitadel_admin_pb.GetNotificationPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetNotificationPolicyResponse.deserializeBinary
  );

  getNotificationPolicy(
    request: zitadel_admin_pb.GetNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetNotificationPolicyResponse>;

  getNotificationPolicy(
    request: zitadel_admin_pb.GetNotificationPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetNotificationPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetNotificationPolicyResponse>;

  getNotificationPolicy(
    request: zitadel_admin_pb.GetNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetNotificationPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetNotificationPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetNotificationPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetNotificationPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetNotificationPolicy);
  }

  methodDescriptorUpdateNotificationPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateNotificationPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateNotificationPolicyRequest,
    zitadel_admin_pb.UpdateNotificationPolicyResponse,
    (request: zitadel_admin_pb.UpdateNotificationPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateNotificationPolicyResponse.deserializeBinary
  );

  updateNotificationPolicy(
    request: zitadel_admin_pb.UpdateNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateNotificationPolicyResponse>;

  updateNotificationPolicy(
    request: zitadel_admin_pb.UpdateNotificationPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateNotificationPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateNotificationPolicyResponse>;

  updateNotificationPolicy(
    request: zitadel_admin_pb.UpdateNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateNotificationPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateNotificationPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateNotificationPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateNotificationPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateNotificationPolicy);
  }

  methodDescriptorGetDefaultInitMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultInitMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultInitMessageTextRequest,
    zitadel_admin_pb.GetDefaultInitMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultInitMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultInitMessageTextResponse.deserializeBinary
  );

  getDefaultInitMessageText(
    request: zitadel_admin_pb.GetDefaultInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultInitMessageTextResponse>;

  getDefaultInitMessageText(
    request: zitadel_admin_pb.GetDefaultInitMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultInitMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultInitMessageTextResponse>;

  getDefaultInitMessageText(
    request: zitadel_admin_pb.GetDefaultInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultInitMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultInitMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultInitMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultInitMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultInitMessageText);
  }

  methodDescriptorGetCustomInitMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomInitMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomInitMessageTextRequest,
    zitadel_admin_pb.GetCustomInitMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomInitMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomInitMessageTextResponse.deserializeBinary
  );

  getCustomInitMessageText(
    request: zitadel_admin_pb.GetCustomInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomInitMessageTextResponse>;

  getCustomInitMessageText(
    request: zitadel_admin_pb.GetCustomInitMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomInitMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomInitMessageTextResponse>;

  getCustomInitMessageText(
    request: zitadel_admin_pb.GetCustomInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomInitMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomInitMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomInitMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomInitMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomInitMessageText);
  }

  methodDescriptorSetDefaultInitMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultInitMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultInitMessageTextRequest,
    zitadel_admin_pb.SetDefaultInitMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultInitMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultInitMessageTextResponse.deserializeBinary
  );

  setDefaultInitMessageText(
    request: zitadel_admin_pb.SetDefaultInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultInitMessageTextResponse>;

  setDefaultInitMessageText(
    request: zitadel_admin_pb.SetDefaultInitMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultInitMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultInitMessageTextResponse>;

  setDefaultInitMessageText(
    request: zitadel_admin_pb.SetDefaultInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultInitMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultInitMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultInitMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultInitMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultInitMessageText);
  }

  methodDescriptorResetCustomInitMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomInitMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomInitMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomInitMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomInitMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomInitMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomInitMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomInitMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomInitMessageTextToDefaultResponse>;

  resetCustomInitMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomInitMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomInitMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomInitMessageTextToDefaultResponse>;

  resetCustomInitMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomInitMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomInitMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomInitMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomInitMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomInitMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomInitMessageTextToDefault);
  }

  methodDescriptorGetDefaultPasswordResetMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultPasswordResetMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultPasswordResetMessageTextRequest,
    zitadel_admin_pb.GetDefaultPasswordResetMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultPasswordResetMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultPasswordResetMessageTextResponse.deserializeBinary
  );

  getDefaultPasswordResetMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultPasswordResetMessageTextResponse>;

  getDefaultPasswordResetMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordResetMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultPasswordResetMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultPasswordResetMessageTextResponse>;

  getDefaultPasswordResetMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultPasswordResetMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultPasswordResetMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPasswordResetMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultPasswordResetMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPasswordResetMessageText);
  }

  methodDescriptorGetCustomPasswordResetMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomPasswordResetMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomPasswordResetMessageTextRequest,
    zitadel_admin_pb.GetCustomPasswordResetMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomPasswordResetMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomPasswordResetMessageTextResponse.deserializeBinary
  );

  getCustomPasswordResetMessageText(
    request: zitadel_admin_pb.GetCustomPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomPasswordResetMessageTextResponse>;

  getCustomPasswordResetMessageText(
    request: zitadel_admin_pb.GetCustomPasswordResetMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomPasswordResetMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomPasswordResetMessageTextResponse>;

  getCustomPasswordResetMessageText(
    request: zitadel_admin_pb.GetCustomPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomPasswordResetMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomPasswordResetMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomPasswordResetMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomPasswordResetMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomPasswordResetMessageText);
  }

  methodDescriptorSetDefaultPasswordResetMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultPasswordResetMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultPasswordResetMessageTextRequest,
    zitadel_admin_pb.SetDefaultPasswordResetMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultPasswordResetMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultPasswordResetMessageTextResponse.deserializeBinary
  );

  setDefaultPasswordResetMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultPasswordResetMessageTextResponse>;

  setDefaultPasswordResetMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordResetMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultPasswordResetMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultPasswordResetMessageTextResponse>;

  setDefaultPasswordResetMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultPasswordResetMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultPasswordResetMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultPasswordResetMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultPasswordResetMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultPasswordResetMessageText);
  }

  methodDescriptorResetCustomPasswordResetMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomPasswordResetMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomPasswordResetMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultResponse>;

  resetCustomPasswordResetMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultResponse>;

  resetCustomPasswordResetMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomPasswordResetMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomPasswordResetMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomPasswordResetMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomPasswordResetMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomPasswordResetMessageTextToDefault);
  }

  methodDescriptorGetDefaultVerifyEmailMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultVerifyEmailMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultVerifyEmailMessageTextRequest,
    zitadel_admin_pb.GetDefaultVerifyEmailMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultVerifyEmailMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultVerifyEmailMessageTextResponse.deserializeBinary
  );

  getDefaultVerifyEmailMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultVerifyEmailMessageTextResponse>;

  getDefaultVerifyEmailMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyEmailMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultVerifyEmailMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultVerifyEmailMessageTextResponse>;

  getDefaultVerifyEmailMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultVerifyEmailMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultVerifyEmailMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultVerifyEmailMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultVerifyEmailMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultVerifyEmailMessageText);
  }

  methodDescriptorGetCustomVerifyEmailMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomVerifyEmailMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomVerifyEmailMessageTextRequest,
    zitadel_admin_pb.GetCustomVerifyEmailMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomVerifyEmailMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomVerifyEmailMessageTextResponse.deserializeBinary
  );

  getCustomVerifyEmailMessageText(
    request: zitadel_admin_pb.GetCustomVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomVerifyEmailMessageTextResponse>;

  getCustomVerifyEmailMessageText(
    request: zitadel_admin_pb.GetCustomVerifyEmailMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomVerifyEmailMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomVerifyEmailMessageTextResponse>;

  getCustomVerifyEmailMessageText(
    request: zitadel_admin_pb.GetCustomVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomVerifyEmailMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomVerifyEmailMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomVerifyEmailMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomVerifyEmailMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomVerifyEmailMessageText);
  }

  methodDescriptorSetDefaultVerifyEmailMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultVerifyEmailMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultVerifyEmailMessageTextRequest,
    zitadel_admin_pb.SetDefaultVerifyEmailMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultVerifyEmailMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultVerifyEmailMessageTextResponse.deserializeBinary
  );

  setDefaultVerifyEmailMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultVerifyEmailMessageTextResponse>;

  setDefaultVerifyEmailMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyEmailMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultVerifyEmailMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultVerifyEmailMessageTextResponse>;

  setDefaultVerifyEmailMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultVerifyEmailMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultVerifyEmailMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultVerifyEmailMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultVerifyEmailMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultVerifyEmailMessageText);
  }

  methodDescriptorResetCustomVerifyEmailMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomVerifyEmailMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomVerifyEmailMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse>;

  resetCustomVerifyEmailMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse>;

  resetCustomVerifyEmailMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomVerifyEmailMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomVerifyEmailMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomVerifyEmailMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomVerifyEmailMessageTextToDefault);
  }

  methodDescriptorGetDefaultVerifyPhoneMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultVerifyPhoneMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextRequest,
    zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextResponse.deserializeBinary
  );

  getDefaultVerifyPhoneMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextResponse>;

  getDefaultVerifyPhoneMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextResponse>;

  getDefaultVerifyPhoneMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultVerifyPhoneMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultVerifyPhoneMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultVerifyPhoneMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultVerifyPhoneMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultVerifyPhoneMessageText);
  }

  methodDescriptorGetCustomVerifyPhoneMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomVerifyPhoneMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomVerifyPhoneMessageTextRequest,
    zitadel_admin_pb.GetCustomVerifyPhoneMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomVerifyPhoneMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomVerifyPhoneMessageTextResponse.deserializeBinary
  );

  getCustomVerifyPhoneMessageText(
    request: zitadel_admin_pb.GetCustomVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomVerifyPhoneMessageTextResponse>;

  getCustomVerifyPhoneMessageText(
    request: zitadel_admin_pb.GetCustomVerifyPhoneMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomVerifyPhoneMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomVerifyPhoneMessageTextResponse>;

  getCustomVerifyPhoneMessageText(
    request: zitadel_admin_pb.GetCustomVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomVerifyPhoneMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomVerifyPhoneMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomVerifyPhoneMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomVerifyPhoneMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomVerifyPhoneMessageText);
  }

  methodDescriptorSetDefaultVerifyPhoneMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultVerifyPhoneMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextRequest,
    zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextResponse.deserializeBinary
  );

  setDefaultVerifyPhoneMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextResponse>;

  setDefaultVerifyPhoneMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextResponse>;

  setDefaultVerifyPhoneMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultVerifyPhoneMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultVerifyPhoneMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultVerifyPhoneMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultVerifyPhoneMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultVerifyPhoneMessageText);
  }

  methodDescriptorResetCustomVerifyPhoneMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomVerifyPhoneMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomVerifyPhoneMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse>;

  resetCustomVerifyPhoneMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse>;

  resetCustomVerifyPhoneMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomVerifyPhoneMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomVerifyPhoneMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomVerifyPhoneMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomVerifyPhoneMessageTextToDefault);
  }

  methodDescriptorGetDefaultVerifySMSOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultVerifySMSOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextRequest,
    zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextResponse.deserializeBinary
  );

  getDefaultVerifySMSOTPMessageText(
    request: zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextResponse>;

  getDefaultVerifySMSOTPMessageText(
    request: zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextResponse>;

  getDefaultVerifySMSOTPMessageText(
    request: zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultVerifySMSOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultVerifySMSOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultVerifySMSOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultVerifySMSOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultVerifySMSOTPMessageText);
  }

  methodDescriptorGetCustomVerifySMSOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomVerifySMSOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextRequest,
    zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextResponse.deserializeBinary
  );

  getCustomVerifySMSOTPMessageText(
    request: zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextResponse>;

  getCustomVerifySMSOTPMessageText(
    request: zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextResponse>;

  getCustomVerifySMSOTPMessageText(
    request: zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomVerifySMSOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomVerifySMSOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomVerifySMSOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomVerifySMSOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomVerifySMSOTPMessageText);
  }

  methodDescriptorSetDefaultVerifySMSOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultVerifySMSOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextRequest,
    zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextResponse.deserializeBinary
  );

  setDefaultVerifySMSOTPMessageText(
    request: zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextResponse>;

  setDefaultVerifySMSOTPMessageText(
    request: zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextResponse>;

  setDefaultVerifySMSOTPMessageText(
    request: zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultVerifySMSOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultVerifySMSOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultVerifySMSOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultVerifySMSOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultVerifySMSOTPMessageText);
  }

  methodDescriptorResetCustomVerifySMSOTPMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomVerifySMSOTPMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomVerifySMSOTPMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse>;

  resetCustomVerifySMSOTPMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse>;

  resetCustomVerifySMSOTPMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomVerifySMSOTPMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomVerifySMSOTPMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomVerifySMSOTPMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomVerifySMSOTPMessageTextToDefault);
  }

  methodDescriptorGetDefaultVerifyEmailOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultVerifyEmailOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextRequest,
    zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextResponse.deserializeBinary
  );

  getDefaultVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextResponse>;

  getDefaultVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextResponse>;

  getDefaultVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultVerifyEmailOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultVerifyEmailOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultVerifyEmailOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultVerifyEmailOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultVerifyEmailOTPMessageText);
  }

  methodDescriptorGetCustomVerifyEmailOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomVerifyEmailOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextRequest,
    zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextResponse.deserializeBinary
  );

  getCustomVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextResponse>;

  getCustomVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextResponse>;

  getCustomVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomVerifyEmailOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomVerifyEmailOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomVerifyEmailOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomVerifyEmailOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomVerifyEmailOTPMessageText);
  }

  methodDescriptorSetDefaultVerifyEmailOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultVerifyEmailOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextRequest,
    zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextResponse.deserializeBinary
  );

  setDefaultVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextResponse>;

  setDefaultVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextResponse>;

  setDefaultVerifyEmailOTPMessageText(
    request: zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultVerifyEmailOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultVerifyEmailOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultVerifyEmailOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultVerifyEmailOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultVerifyEmailOTPMessageText);
  }

  methodDescriptorResetCustomVerifyEmailOTPMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomVerifyEmailOTPMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomVerifyEmailOTPMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse>;

  resetCustomVerifyEmailOTPMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse>;

  resetCustomVerifyEmailOTPMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomVerifyEmailOTPMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomVerifyEmailOTPMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomVerifyEmailOTPMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomVerifyEmailOTPMessageTextToDefault);
  }

  methodDescriptorGetDefaultDomainClaimedMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultDomainClaimedMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultDomainClaimedMessageTextRequest,
    zitadel_admin_pb.GetDefaultDomainClaimedMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultDomainClaimedMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultDomainClaimedMessageTextResponse.deserializeBinary
  );

  getDefaultDomainClaimedMessageText(
    request: zitadel_admin_pb.GetDefaultDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultDomainClaimedMessageTextResponse>;

  getDefaultDomainClaimedMessageText(
    request: zitadel_admin_pb.GetDefaultDomainClaimedMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultDomainClaimedMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultDomainClaimedMessageTextResponse>;

  getDefaultDomainClaimedMessageText(
    request: zitadel_admin_pb.GetDefaultDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultDomainClaimedMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultDomainClaimedMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultDomainClaimedMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultDomainClaimedMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultDomainClaimedMessageText);
  }

  methodDescriptorGetCustomDomainClaimedMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomDomainClaimedMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomDomainClaimedMessageTextRequest,
    zitadel_admin_pb.GetCustomDomainClaimedMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomDomainClaimedMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomDomainClaimedMessageTextResponse.deserializeBinary
  );

  getCustomDomainClaimedMessageText(
    request: zitadel_admin_pb.GetCustomDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomDomainClaimedMessageTextResponse>;

  getCustomDomainClaimedMessageText(
    request: zitadel_admin_pb.GetCustomDomainClaimedMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomDomainClaimedMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomDomainClaimedMessageTextResponse>;

  getCustomDomainClaimedMessageText(
    request: zitadel_admin_pb.GetCustomDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomDomainClaimedMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomDomainClaimedMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomDomainClaimedMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomDomainClaimedMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomDomainClaimedMessageText);
  }

  methodDescriptorSetDefaultDomainClaimedMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultDomainClaimedMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultDomainClaimedMessageTextRequest,
    zitadel_admin_pb.SetDefaultDomainClaimedMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultDomainClaimedMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultDomainClaimedMessageTextResponse.deserializeBinary
  );

  setDefaultDomainClaimedMessageText(
    request: zitadel_admin_pb.SetDefaultDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultDomainClaimedMessageTextResponse>;

  setDefaultDomainClaimedMessageText(
    request: zitadel_admin_pb.SetDefaultDomainClaimedMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultDomainClaimedMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultDomainClaimedMessageTextResponse>;

  setDefaultDomainClaimedMessageText(
    request: zitadel_admin_pb.SetDefaultDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultDomainClaimedMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultDomainClaimedMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultDomainClaimedMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultDomainClaimedMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultDomainClaimedMessageText);
  }

  methodDescriptorResetCustomDomainClaimedMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomDomainClaimedMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomDomainClaimedMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse>;

  resetCustomDomainClaimedMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse>;

  resetCustomDomainClaimedMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomDomainClaimedMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomDomainClaimedMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomDomainClaimedMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomDomainClaimedMessageTextToDefault);
  }

  methodDescriptorGetDefaultPasswordlessRegistrationMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultPasswordlessRegistrationMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextRequest,
    zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextResponse.deserializeBinary
  );

  getDefaultPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextResponse>;

  getDefaultPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextResponse>;

  getDefaultPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultPasswordlessRegistrationMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultPasswordlessRegistrationMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPasswordlessRegistrationMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultPasswordlessRegistrationMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPasswordlessRegistrationMessageText);
  }

  methodDescriptorGetCustomPasswordlessRegistrationMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomPasswordlessRegistrationMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextRequest,
    zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextResponse.deserializeBinary
  );

  getCustomPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextResponse>;

  getCustomPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextResponse>;

  getCustomPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomPasswordlessRegistrationMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomPasswordlessRegistrationMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomPasswordlessRegistrationMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomPasswordlessRegistrationMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomPasswordlessRegistrationMessageText);
  }

  methodDescriptorSetDefaultPasswordlessRegistrationMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultPasswordlessRegistrationMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextRequest,
    zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextResponse.deserializeBinary
  );

  setDefaultPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextResponse>;

  setDefaultPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextResponse>;

  setDefaultPasswordlessRegistrationMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultPasswordlessRegistrationMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultPasswordlessRegistrationMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultPasswordlessRegistrationMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultPasswordlessRegistrationMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultPasswordlessRegistrationMessageText);
  }

  methodDescriptorResetCustomPasswordlessRegistrationMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomPasswordlessRegistrationMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomPasswordlessRegistrationMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse>;

  resetCustomPasswordlessRegistrationMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse>;

  resetCustomPasswordlessRegistrationMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomPasswordlessRegistrationMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomPasswordlessRegistrationMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomPasswordlessRegistrationMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomPasswordlessRegistrationMessageTextToDefault);
  }

  methodDescriptorGetDefaultPasswordChangeMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultPasswordChangeMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultPasswordChangeMessageTextRequest,
    zitadel_admin_pb.GetDefaultPasswordChangeMessageTextResponse,
    (request: zitadel_admin_pb.GetDefaultPasswordChangeMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultPasswordChangeMessageTextResponse.deserializeBinary
  );

  getDefaultPasswordChangeMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultPasswordChangeMessageTextResponse>;

  getDefaultPasswordChangeMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordChangeMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultPasswordChangeMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultPasswordChangeMessageTextResponse>;

  getDefaultPasswordChangeMessageText(
    request: zitadel_admin_pb.GetDefaultPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultPasswordChangeMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultPasswordChangeMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPasswordChangeMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultPasswordChangeMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPasswordChangeMessageText);
  }

  methodDescriptorGetCustomPasswordChangeMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomPasswordChangeMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomPasswordChangeMessageTextRequest,
    zitadel_admin_pb.GetCustomPasswordChangeMessageTextResponse,
    (request: zitadel_admin_pb.GetCustomPasswordChangeMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomPasswordChangeMessageTextResponse.deserializeBinary
  );

  getCustomPasswordChangeMessageText(
    request: zitadel_admin_pb.GetCustomPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomPasswordChangeMessageTextResponse>;

  getCustomPasswordChangeMessageText(
    request: zitadel_admin_pb.GetCustomPasswordChangeMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomPasswordChangeMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomPasswordChangeMessageTextResponse>;

  getCustomPasswordChangeMessageText(
    request: zitadel_admin_pb.GetCustomPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomPasswordChangeMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomPasswordChangeMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomPasswordChangeMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomPasswordChangeMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomPasswordChangeMessageText);
  }

  methodDescriptorSetDefaultPasswordChangeMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetDefaultPasswordChangeMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetDefaultPasswordChangeMessageTextRequest,
    zitadel_admin_pb.SetDefaultPasswordChangeMessageTextResponse,
    (request: zitadel_admin_pb.SetDefaultPasswordChangeMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetDefaultPasswordChangeMessageTextResponse.deserializeBinary
  );

  setDefaultPasswordChangeMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetDefaultPasswordChangeMessageTextResponse>;

  setDefaultPasswordChangeMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordChangeMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultPasswordChangeMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetDefaultPasswordChangeMessageTextResponse>;

  setDefaultPasswordChangeMessageText(
    request: zitadel_admin_pb.SetDefaultPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetDefaultPasswordChangeMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetDefaultPasswordChangeMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetDefaultPasswordChangeMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetDefaultPasswordChangeMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetDefaultPasswordChangeMessageText);
  }

  methodDescriptorResetCustomPasswordChangeMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomPasswordChangeMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest,
    zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomPasswordChangeMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse>;

  resetCustomPasswordChangeMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse>;

  resetCustomPasswordChangeMessageTextToDefault(
    request: zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomPasswordChangeMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomPasswordChangeMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomPasswordChangeMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomPasswordChangeMessageTextToDefault);
  }

  methodDescriptorGetDefaultLoginTexts = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetDefaultLoginTexts',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetDefaultLoginTextsRequest,
    zitadel_admin_pb.GetDefaultLoginTextsResponse,
    (request: zitadel_admin_pb.GetDefaultLoginTextsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetDefaultLoginTextsResponse.deserializeBinary
  );

  getDefaultLoginTexts(
    request: zitadel_admin_pb.GetDefaultLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetDefaultLoginTextsResponse>;

  getDefaultLoginTexts(
    request: zitadel_admin_pb.GetDefaultLoginTextsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultLoginTextsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetDefaultLoginTextsResponse>;

  getDefaultLoginTexts(
    request: zitadel_admin_pb.GetDefaultLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetDefaultLoginTextsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetDefaultLoginTexts',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultLoginTexts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetDefaultLoginTexts',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultLoginTexts);
  }

  methodDescriptorGetCustomLoginTexts = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetCustomLoginTexts',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetCustomLoginTextsRequest,
    zitadel_admin_pb.GetCustomLoginTextsResponse,
    (request: zitadel_admin_pb.GetCustomLoginTextsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetCustomLoginTextsResponse.deserializeBinary
  );

  getCustomLoginTexts(
    request: zitadel_admin_pb.GetCustomLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetCustomLoginTextsResponse>;

  getCustomLoginTexts(
    request: zitadel_admin_pb.GetCustomLoginTextsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomLoginTextsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetCustomLoginTextsResponse>;

  getCustomLoginTexts(
    request: zitadel_admin_pb.GetCustomLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetCustomLoginTextsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetCustomLoginTexts',
        request,
        metadata || {},
        this.methodDescriptorGetCustomLoginTexts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetCustomLoginTexts',
    request,
    metadata || {},
    this.methodDescriptorGetCustomLoginTexts);
  }

  methodDescriptorSetCustomLoginText = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetCustomLoginText',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetCustomLoginTextsRequest,
    zitadel_admin_pb.SetCustomLoginTextsResponse,
    (request: zitadel_admin_pb.SetCustomLoginTextsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetCustomLoginTextsResponse.deserializeBinary
  );

  setCustomLoginText(
    request: zitadel_admin_pb.SetCustomLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetCustomLoginTextsResponse>;

  setCustomLoginText(
    request: zitadel_admin_pb.SetCustomLoginTextsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetCustomLoginTextsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetCustomLoginTextsResponse>;

  setCustomLoginText(
    request: zitadel_admin_pb.SetCustomLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetCustomLoginTextsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetCustomLoginText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomLoginText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetCustomLoginText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomLoginText);
  }

  methodDescriptorResetCustomLoginTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ResetCustomLoginTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ResetCustomLoginTextsToDefaultRequest,
    zitadel_admin_pb.ResetCustomLoginTextsToDefaultResponse,
    (request: zitadel_admin_pb.ResetCustomLoginTextsToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ResetCustomLoginTextsToDefaultResponse.deserializeBinary
  );

  resetCustomLoginTextToDefault(
    request: zitadel_admin_pb.ResetCustomLoginTextsToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ResetCustomLoginTextsToDefaultResponse>;

  resetCustomLoginTextToDefault(
    request: zitadel_admin_pb.ResetCustomLoginTextsToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomLoginTextsToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ResetCustomLoginTextsToDefaultResponse>;

  resetCustomLoginTextToDefault(
    request: zitadel_admin_pb.ResetCustomLoginTextsToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ResetCustomLoginTextsToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ResetCustomLoginTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomLoginTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ResetCustomLoginTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomLoginTextToDefault);
  }

  methodDescriptorListIAMMemberRoles = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListIAMMemberRoles',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListIAMMemberRolesRequest,
    zitadel_admin_pb.ListIAMMemberRolesResponse,
    (request: zitadel_admin_pb.ListIAMMemberRolesRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListIAMMemberRolesResponse.deserializeBinary
  );

  listIAMMemberRoles(
    request: zitadel_admin_pb.ListIAMMemberRolesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListIAMMemberRolesResponse>;

  listIAMMemberRoles(
    request: zitadel_admin_pb.ListIAMMemberRolesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListIAMMemberRolesResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListIAMMemberRolesResponse>;

  listIAMMemberRoles(
    request: zitadel_admin_pb.ListIAMMemberRolesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListIAMMemberRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListIAMMemberRoles',
        request,
        metadata || {},
        this.methodDescriptorListIAMMemberRoles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListIAMMemberRoles',
    request,
    metadata || {},
    this.methodDescriptorListIAMMemberRoles);
  }

  methodDescriptorListIAMMembers = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListIAMMembers',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListIAMMembersRequest,
    zitadel_admin_pb.ListIAMMembersResponse,
    (request: zitadel_admin_pb.ListIAMMembersRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListIAMMembersResponse.deserializeBinary
  );

  listIAMMembers(
    request: zitadel_admin_pb.ListIAMMembersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListIAMMembersResponse>;

  listIAMMembers(
    request: zitadel_admin_pb.ListIAMMembersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListIAMMembersResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListIAMMembersResponse>;

  listIAMMembers(
    request: zitadel_admin_pb.ListIAMMembersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListIAMMembersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListIAMMembers',
        request,
        metadata || {},
        this.methodDescriptorListIAMMembers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListIAMMembers',
    request,
    metadata || {},
    this.methodDescriptorListIAMMembers);
  }

  methodDescriptorAddIAMMember = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/AddIAMMember',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.AddIAMMemberRequest,
    zitadel_admin_pb.AddIAMMemberResponse,
    (request: zitadel_admin_pb.AddIAMMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.AddIAMMemberResponse.deserializeBinary
  );

  addIAMMember(
    request: zitadel_admin_pb.AddIAMMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.AddIAMMemberResponse>;

  addIAMMember(
    request: zitadel_admin_pb.AddIAMMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddIAMMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.AddIAMMemberResponse>;

  addIAMMember(
    request: zitadel_admin_pb.AddIAMMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.AddIAMMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/AddIAMMember',
        request,
        metadata || {},
        this.methodDescriptorAddIAMMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/AddIAMMember',
    request,
    metadata || {},
    this.methodDescriptorAddIAMMember);
  }

  methodDescriptorUpdateIAMMember = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/UpdateIAMMember',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.UpdateIAMMemberRequest,
    zitadel_admin_pb.UpdateIAMMemberResponse,
    (request: zitadel_admin_pb.UpdateIAMMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.UpdateIAMMemberResponse.deserializeBinary
  );

  updateIAMMember(
    request: zitadel_admin_pb.UpdateIAMMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.UpdateIAMMemberResponse>;

  updateIAMMember(
    request: zitadel_admin_pb.UpdateIAMMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateIAMMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.UpdateIAMMemberResponse>;

  updateIAMMember(
    request: zitadel_admin_pb.UpdateIAMMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.UpdateIAMMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/UpdateIAMMember',
        request,
        metadata || {},
        this.methodDescriptorUpdateIAMMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/UpdateIAMMember',
    request,
    metadata || {},
    this.methodDescriptorUpdateIAMMember);
  }

  methodDescriptorRemoveIAMMember = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveIAMMember',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveIAMMemberRequest,
    zitadel_admin_pb.RemoveIAMMemberResponse,
    (request: zitadel_admin_pb.RemoveIAMMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveIAMMemberResponse.deserializeBinary
  );

  removeIAMMember(
    request: zitadel_admin_pb.RemoveIAMMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveIAMMemberResponse>;

  removeIAMMember(
    request: zitadel_admin_pb.RemoveIAMMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveIAMMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveIAMMemberResponse>;

  removeIAMMember(
    request: zitadel_admin_pb.RemoveIAMMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveIAMMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveIAMMember',
        request,
        metadata || {},
        this.methodDescriptorRemoveIAMMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveIAMMember',
    request,
    metadata || {},
    this.methodDescriptorRemoveIAMMember);
  }

  methodDescriptorListViews = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListViews',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListViewsRequest,
    zitadel_admin_pb.ListViewsResponse,
    (request: zitadel_admin_pb.ListViewsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListViewsResponse.deserializeBinary
  );

  listViews(
    request: zitadel_admin_pb.ListViewsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListViewsResponse>;

  listViews(
    request: zitadel_admin_pb.ListViewsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListViewsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListViewsResponse>;

  listViews(
    request: zitadel_admin_pb.ListViewsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListViewsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListViews',
        request,
        metadata || {},
        this.methodDescriptorListViews,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListViews',
    request,
    metadata || {},
    this.methodDescriptorListViews);
  }

  methodDescriptorListFailedEvents = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListFailedEvents',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListFailedEventsRequest,
    zitadel_admin_pb.ListFailedEventsResponse,
    (request: zitadel_admin_pb.ListFailedEventsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListFailedEventsResponse.deserializeBinary
  );

  listFailedEvents(
    request: zitadel_admin_pb.ListFailedEventsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListFailedEventsResponse>;

  listFailedEvents(
    request: zitadel_admin_pb.ListFailedEventsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListFailedEventsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListFailedEventsResponse>;

  listFailedEvents(
    request: zitadel_admin_pb.ListFailedEventsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListFailedEventsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListFailedEvents',
        request,
        metadata || {},
        this.methodDescriptorListFailedEvents,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListFailedEvents',
    request,
    metadata || {},
    this.methodDescriptorListFailedEvents);
  }

  methodDescriptorRemoveFailedEvent = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/RemoveFailedEvent',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.RemoveFailedEventRequest,
    zitadel_admin_pb.RemoveFailedEventResponse,
    (request: zitadel_admin_pb.RemoveFailedEventRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.RemoveFailedEventResponse.deserializeBinary
  );

  removeFailedEvent(
    request: zitadel_admin_pb.RemoveFailedEventRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.RemoveFailedEventResponse>;

  removeFailedEvent(
    request: zitadel_admin_pb.RemoveFailedEventRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveFailedEventResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.RemoveFailedEventResponse>;

  removeFailedEvent(
    request: zitadel_admin_pb.RemoveFailedEventRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.RemoveFailedEventResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/RemoveFailedEvent',
        request,
        metadata || {},
        this.methodDescriptorRemoveFailedEvent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/RemoveFailedEvent',
    request,
    metadata || {},
    this.methodDescriptorRemoveFailedEvent);
  }

  methodDescriptorImportData = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ImportData',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ImportDataRequest,
    zitadel_admin_pb.ImportDataResponse,
    (request: zitadel_admin_pb.ImportDataRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ImportDataResponse.deserializeBinary
  );

  importData(
    request: zitadel_admin_pb.ImportDataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ImportDataResponse>;

  importData(
    request: zitadel_admin_pb.ImportDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ImportDataResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ImportDataResponse>;

  importData(
    request: zitadel_admin_pb.ImportDataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ImportDataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ImportData',
        request,
        metadata || {},
        this.methodDescriptorImportData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ImportData',
    request,
    metadata || {},
    this.methodDescriptorImportData);
  }

  methodDescriptorExportData = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ExportData',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ExportDataRequest,
    zitadel_admin_pb.ExportDataResponse,
    (request: zitadel_admin_pb.ExportDataRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ExportDataResponse.deserializeBinary
  );

  exportData(
    request: zitadel_admin_pb.ExportDataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ExportDataResponse>;

  exportData(
    request: zitadel_admin_pb.ExportDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ExportDataResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ExportDataResponse>;

  exportData(
    request: zitadel_admin_pb.ExportDataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ExportDataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ExportData',
        request,
        metadata || {},
        this.methodDescriptorExportData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ExportData',
    request,
    metadata || {},
    this.methodDescriptorExportData);
  }

  methodDescriptorListEventTypes = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListEventTypes',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListEventTypesRequest,
    zitadel_admin_pb.ListEventTypesResponse,
    (request: zitadel_admin_pb.ListEventTypesRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListEventTypesResponse.deserializeBinary
  );

  listEventTypes(
    request: zitadel_admin_pb.ListEventTypesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListEventTypesResponse>;

  listEventTypes(
    request: zitadel_admin_pb.ListEventTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListEventTypesResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListEventTypesResponse>;

  listEventTypes(
    request: zitadel_admin_pb.ListEventTypesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListEventTypesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListEventTypes',
        request,
        metadata || {},
        this.methodDescriptorListEventTypes,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListEventTypes',
    request,
    metadata || {},
    this.methodDescriptorListEventTypes);
  }

  methodDescriptorListEvents = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListEvents',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListEventsRequest,
    zitadel_admin_pb.ListEventsResponse,
    (request: zitadel_admin_pb.ListEventsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListEventsResponse.deserializeBinary
  );

  listEvents(
    request: zitadel_admin_pb.ListEventsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListEventsResponse>;

  listEvents(
    request: zitadel_admin_pb.ListEventsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListEventsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListEventsResponse>;

  listEvents(
    request: zitadel_admin_pb.ListEventsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListEventsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListEvents',
        request,
        metadata || {},
        this.methodDescriptorListEvents,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListEvents',
    request,
    metadata || {},
    this.methodDescriptorListEvents);
  }

  methodDescriptorListAggregateTypes = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListAggregateTypes',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListAggregateTypesRequest,
    zitadel_admin_pb.ListAggregateTypesResponse,
    (request: zitadel_admin_pb.ListAggregateTypesRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListAggregateTypesResponse.deserializeBinary
  );

  listAggregateTypes(
    request: zitadel_admin_pb.ListAggregateTypesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListAggregateTypesResponse>;

  listAggregateTypes(
    request: zitadel_admin_pb.ListAggregateTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListAggregateTypesResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListAggregateTypesResponse>;

  listAggregateTypes(
    request: zitadel_admin_pb.ListAggregateTypesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListAggregateTypesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListAggregateTypes',
        request,
        metadata || {},
        this.methodDescriptorListAggregateTypes,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListAggregateTypes',
    request,
    metadata || {},
    this.methodDescriptorListAggregateTypes);
  }

  methodDescriptorActivateFeatureLoginDefaultOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ActivateFeatureLoginDefaultOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ActivateFeatureLoginDefaultOrgRequest,
    zitadel_admin_pb.ActivateFeatureLoginDefaultOrgResponse,
    (request: zitadel_admin_pb.ActivateFeatureLoginDefaultOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ActivateFeatureLoginDefaultOrgResponse.deserializeBinary
  );

  activateFeatureLoginDefaultOrg(
    request: zitadel_admin_pb.ActivateFeatureLoginDefaultOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ActivateFeatureLoginDefaultOrgResponse>;

  activateFeatureLoginDefaultOrg(
    request: zitadel_admin_pb.ActivateFeatureLoginDefaultOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ActivateFeatureLoginDefaultOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ActivateFeatureLoginDefaultOrgResponse>;

  activateFeatureLoginDefaultOrg(
    request: zitadel_admin_pb.ActivateFeatureLoginDefaultOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ActivateFeatureLoginDefaultOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ActivateFeatureLoginDefaultOrg',
        request,
        metadata || {},
        this.methodDescriptorActivateFeatureLoginDefaultOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ActivateFeatureLoginDefaultOrg',
    request,
    metadata || {},
    this.methodDescriptorActivateFeatureLoginDefaultOrg);
  }

  methodDescriptorListMilestones = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/ListMilestones',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.ListMilestonesRequest,
    zitadel_admin_pb.ListMilestonesResponse,
    (request: zitadel_admin_pb.ListMilestonesRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.ListMilestonesResponse.deserializeBinary
  );

  listMilestones(
    request: zitadel_admin_pb.ListMilestonesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.ListMilestonesResponse>;

  listMilestones(
    request: zitadel_admin_pb.ListMilestonesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListMilestonesResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.ListMilestonesResponse>;

  listMilestones(
    request: zitadel_admin_pb.ListMilestonesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.ListMilestonesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/ListMilestones',
        request,
        metadata || {},
        this.methodDescriptorListMilestones,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/ListMilestones',
    request,
    metadata || {},
    this.methodDescriptorListMilestones);
  }

  methodDescriptorSetRestrictions = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/SetRestrictions',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.SetRestrictionsRequest,
    zitadel_admin_pb.SetRestrictionsResponse,
    (request: zitadel_admin_pb.SetRestrictionsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.SetRestrictionsResponse.deserializeBinary
  );

  setRestrictions(
    request: zitadel_admin_pb.SetRestrictionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.SetRestrictionsResponse>;

  setRestrictions(
    request: zitadel_admin_pb.SetRestrictionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetRestrictionsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.SetRestrictionsResponse>;

  setRestrictions(
    request: zitadel_admin_pb.SetRestrictionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.SetRestrictionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/SetRestrictions',
        request,
        metadata || {},
        this.methodDescriptorSetRestrictions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/SetRestrictions',
    request,
    metadata || {},
    this.methodDescriptorSetRestrictions);
  }

  methodDescriptorGetRestrictions = new grpcWeb.MethodDescriptor(
    '/zitadel.admin.v1.AdminService/GetRestrictions',
    grpcWeb.MethodType.UNARY,
    zitadel_admin_pb.GetRestrictionsRequest,
    zitadel_admin_pb.GetRestrictionsResponse,
    (request: zitadel_admin_pb.GetRestrictionsRequest) => {
      return request.serializeBinary();
    },
    zitadel_admin_pb.GetRestrictionsResponse.deserializeBinary
  );

  getRestrictions(
    request: zitadel_admin_pb.GetRestrictionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_admin_pb.GetRestrictionsResponse>;

  getRestrictions(
    request: zitadel_admin_pb.GetRestrictionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetRestrictionsResponse) => void): grpcWeb.ClientReadableStream<zitadel_admin_pb.GetRestrictionsResponse>;

  getRestrictions(
    request: zitadel_admin_pb.GetRestrictionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_admin_pb.GetRestrictionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.admin.v1.AdminService/GetRestrictions',
        request,
        metadata || {},
        this.methodDescriptorGetRestrictions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.admin.v1.AdminService/GetRestrictions',
    request,
    metadata || {},
    this.methodDescriptorGetRestrictions);
  }

}

