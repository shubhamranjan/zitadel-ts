/**
 * @fileoverview gRPC-Web generated client stub for zitadel.auth.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: zitadel/auth.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as zitadel_auth_pb from '../zitadel/auth_pb'; // proto import: "zitadel/auth.proto"


export class AuthServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorHealthz = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/Healthz',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.HealthzRequest,
    zitadel_auth_pb.HealthzResponse,
    (request: zitadel_auth_pb.HealthzRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.HealthzResponse.deserializeBinary
  );

  healthz(
    request: zitadel_auth_pb.HealthzRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.HealthzResponse>;

  healthz(
    request: zitadel_auth_pb.HealthzRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.HealthzResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.HealthzResponse>;

  healthz(
    request: zitadel_auth_pb.HealthzRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.HealthzResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/Healthz',
        request,
        metadata || {},
        this.methodDescriptorHealthz,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/Healthz',
    request,
    metadata || {},
    this.methodDescriptorHealthz);
  }

  methodDescriptorGetSupportedLanguages = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetSupportedLanguages',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetSupportedLanguagesRequest,
    zitadel_auth_pb.GetSupportedLanguagesResponse,
    (request: zitadel_auth_pb.GetSupportedLanguagesRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetSupportedLanguagesResponse.deserializeBinary
  );

  getSupportedLanguages(
    request: zitadel_auth_pb.GetSupportedLanguagesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetSupportedLanguagesResponse>;

  getSupportedLanguages(
    request: zitadel_auth_pb.GetSupportedLanguagesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetSupportedLanguagesResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetSupportedLanguagesResponse>;

  getSupportedLanguages(
    request: zitadel_auth_pb.GetSupportedLanguagesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetSupportedLanguagesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetSupportedLanguages',
        request,
        metadata || {},
        this.methodDescriptorGetSupportedLanguages,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetSupportedLanguages',
    request,
    metadata || {},
    this.methodDescriptorGetSupportedLanguages);
  }

  methodDescriptorGetMyUser = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyUser',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyUserRequest,
    zitadel_auth_pb.GetMyUserResponse,
    (request: zitadel_auth_pb.GetMyUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyUserResponse.deserializeBinary
  );

  getMyUser(
    request: zitadel_auth_pb.GetMyUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyUserResponse>;

  getMyUser(
    request: zitadel_auth_pb.GetMyUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyUserResponse>;

  getMyUser(
    request: zitadel_auth_pb.GetMyUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyUser',
        request,
        metadata || {},
        this.methodDescriptorGetMyUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyUser',
    request,
    metadata || {},
    this.methodDescriptorGetMyUser);
  }

  methodDescriptorRemoveMyUser = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyUser',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyUserRequest,
    zitadel_auth_pb.RemoveMyUserResponse,
    (request: zitadel_auth_pb.RemoveMyUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyUserResponse.deserializeBinary
  );

  removeMyUser(
    request: zitadel_auth_pb.RemoveMyUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyUserResponse>;

  removeMyUser(
    request: zitadel_auth_pb.RemoveMyUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyUserResponse>;

  removeMyUser(
    request: zitadel_auth_pb.RemoveMyUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyUser',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyUser',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyUser);
  }

  methodDescriptorListMyUserChanges = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyUserChanges',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyUserChangesRequest,
    zitadel_auth_pb.ListMyUserChangesResponse,
    (request: zitadel_auth_pb.ListMyUserChangesRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyUserChangesResponse.deserializeBinary
  );

  listMyUserChanges(
    request: zitadel_auth_pb.ListMyUserChangesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyUserChangesResponse>;

  listMyUserChanges(
    request: zitadel_auth_pb.ListMyUserChangesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyUserChangesResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyUserChangesResponse>;

  listMyUserChanges(
    request: zitadel_auth_pb.ListMyUserChangesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyUserChangesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyUserChanges',
        request,
        metadata || {},
        this.methodDescriptorListMyUserChanges,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyUserChanges',
    request,
    metadata || {},
    this.methodDescriptorListMyUserChanges);
  }

  methodDescriptorListMyUserSessions = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyUserSessions',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyUserSessionsRequest,
    zitadel_auth_pb.ListMyUserSessionsResponse,
    (request: zitadel_auth_pb.ListMyUserSessionsRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyUserSessionsResponse.deserializeBinary
  );

  listMyUserSessions(
    request: zitadel_auth_pb.ListMyUserSessionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyUserSessionsResponse>;

  listMyUserSessions(
    request: zitadel_auth_pb.ListMyUserSessionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyUserSessionsResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyUserSessionsResponse>;

  listMyUserSessions(
    request: zitadel_auth_pb.ListMyUserSessionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyUserSessionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyUserSessions',
        request,
        metadata || {},
        this.methodDescriptorListMyUserSessions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyUserSessions',
    request,
    metadata || {},
    this.methodDescriptorListMyUserSessions);
  }

  methodDescriptorListMyMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyMetadataRequest,
    zitadel_auth_pb.ListMyMetadataResponse,
    (request: zitadel_auth_pb.ListMyMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyMetadataResponse.deserializeBinary
  );

  listMyMetadata(
    request: zitadel_auth_pb.ListMyMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyMetadataResponse>;

  listMyMetadata(
    request: zitadel_auth_pb.ListMyMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyMetadataResponse>;

  listMyMetadata(
    request: zitadel_auth_pb.ListMyMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyMetadata',
        request,
        metadata || {},
        this.methodDescriptorListMyMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyMetadata',
    request,
    metadata || {},
    this.methodDescriptorListMyMetadata);
  }

  methodDescriptorGetMyMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyMetadataRequest,
    zitadel_auth_pb.GetMyMetadataResponse,
    (request: zitadel_auth_pb.GetMyMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyMetadataResponse.deserializeBinary
  );

  getMyMetadata(
    request: zitadel_auth_pb.GetMyMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyMetadataResponse>;

  getMyMetadata(
    request: zitadel_auth_pb.GetMyMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyMetadataResponse>;

  getMyMetadata(
    request: zitadel_auth_pb.GetMyMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyMetadata',
        request,
        metadata || {},
        this.methodDescriptorGetMyMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyMetadata',
    request,
    metadata || {},
    this.methodDescriptorGetMyMetadata);
  }

  methodDescriptorListMyRefreshTokens = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyRefreshTokens',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyRefreshTokensRequest,
    zitadel_auth_pb.ListMyRefreshTokensResponse,
    (request: zitadel_auth_pb.ListMyRefreshTokensRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyRefreshTokensResponse.deserializeBinary
  );

  listMyRefreshTokens(
    request: zitadel_auth_pb.ListMyRefreshTokensRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyRefreshTokensResponse>;

  listMyRefreshTokens(
    request: zitadel_auth_pb.ListMyRefreshTokensRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyRefreshTokensResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyRefreshTokensResponse>;

  listMyRefreshTokens(
    request: zitadel_auth_pb.ListMyRefreshTokensRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyRefreshTokensResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyRefreshTokens',
        request,
        metadata || {},
        this.methodDescriptorListMyRefreshTokens,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyRefreshTokens',
    request,
    metadata || {},
    this.methodDescriptorListMyRefreshTokens);
  }

  methodDescriptorRevokeMyRefreshToken = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RevokeMyRefreshToken',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RevokeMyRefreshTokenRequest,
    zitadel_auth_pb.RevokeMyRefreshTokenResponse,
    (request: zitadel_auth_pb.RevokeMyRefreshTokenRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RevokeMyRefreshTokenResponse.deserializeBinary
  );

  revokeMyRefreshToken(
    request: zitadel_auth_pb.RevokeMyRefreshTokenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RevokeMyRefreshTokenResponse>;

  revokeMyRefreshToken(
    request: zitadel_auth_pb.RevokeMyRefreshTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RevokeMyRefreshTokenResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RevokeMyRefreshTokenResponse>;

  revokeMyRefreshToken(
    request: zitadel_auth_pb.RevokeMyRefreshTokenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RevokeMyRefreshTokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RevokeMyRefreshToken',
        request,
        metadata || {},
        this.methodDescriptorRevokeMyRefreshToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RevokeMyRefreshToken',
    request,
    metadata || {},
    this.methodDescriptorRevokeMyRefreshToken);
  }

  methodDescriptorRevokeAllMyRefreshTokens = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RevokeAllMyRefreshTokens',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RevokeAllMyRefreshTokensRequest,
    zitadel_auth_pb.RevokeAllMyRefreshTokensResponse,
    (request: zitadel_auth_pb.RevokeAllMyRefreshTokensRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RevokeAllMyRefreshTokensResponse.deserializeBinary
  );

  revokeAllMyRefreshTokens(
    request: zitadel_auth_pb.RevokeAllMyRefreshTokensRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RevokeAllMyRefreshTokensResponse>;

  revokeAllMyRefreshTokens(
    request: zitadel_auth_pb.RevokeAllMyRefreshTokensRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RevokeAllMyRefreshTokensResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RevokeAllMyRefreshTokensResponse>;

  revokeAllMyRefreshTokens(
    request: zitadel_auth_pb.RevokeAllMyRefreshTokensRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RevokeAllMyRefreshTokensResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RevokeAllMyRefreshTokens',
        request,
        metadata || {},
        this.methodDescriptorRevokeAllMyRefreshTokens,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RevokeAllMyRefreshTokens',
    request,
    metadata || {},
    this.methodDescriptorRevokeAllMyRefreshTokens);
  }

  methodDescriptorUpdateMyUserName = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/UpdateMyUserName',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.UpdateMyUserNameRequest,
    zitadel_auth_pb.UpdateMyUserNameResponse,
    (request: zitadel_auth_pb.UpdateMyUserNameRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.UpdateMyUserNameResponse.deserializeBinary
  );

  updateMyUserName(
    request: zitadel_auth_pb.UpdateMyUserNameRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.UpdateMyUserNameResponse>;

  updateMyUserName(
    request: zitadel_auth_pb.UpdateMyUserNameRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.UpdateMyUserNameResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.UpdateMyUserNameResponse>;

  updateMyUserName(
    request: zitadel_auth_pb.UpdateMyUserNameRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.UpdateMyUserNameResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/UpdateMyUserName',
        request,
        metadata || {},
        this.methodDescriptorUpdateMyUserName,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/UpdateMyUserName',
    request,
    metadata || {},
    this.methodDescriptorUpdateMyUserName);
  }

  methodDescriptorGetMyPasswordComplexityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyPasswordComplexityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyPasswordComplexityPolicyRequest,
    zitadel_auth_pb.GetMyPasswordComplexityPolicyResponse,
    (request: zitadel_auth_pb.GetMyPasswordComplexityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyPasswordComplexityPolicyResponse.deserializeBinary
  );

  getMyPasswordComplexityPolicy(
    request: zitadel_auth_pb.GetMyPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyPasswordComplexityPolicyResponse>;

  getMyPasswordComplexityPolicy(
    request: zitadel_auth_pb.GetMyPasswordComplexityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyPasswordComplexityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyPasswordComplexityPolicyResponse>;

  getMyPasswordComplexityPolicy(
    request: zitadel_auth_pb.GetMyPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyPasswordComplexityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyPasswordComplexityPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetMyPasswordComplexityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyPasswordComplexityPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetMyPasswordComplexityPolicy);
  }

  methodDescriptorUpdateMyPassword = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/UpdateMyPassword',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.UpdateMyPasswordRequest,
    zitadel_auth_pb.UpdateMyPasswordResponse,
    (request: zitadel_auth_pb.UpdateMyPasswordRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.UpdateMyPasswordResponse.deserializeBinary
  );

  updateMyPassword(
    request: zitadel_auth_pb.UpdateMyPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.UpdateMyPasswordResponse>;

  updateMyPassword(
    request: zitadel_auth_pb.UpdateMyPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.UpdateMyPasswordResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.UpdateMyPasswordResponse>;

  updateMyPassword(
    request: zitadel_auth_pb.UpdateMyPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.UpdateMyPasswordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/UpdateMyPassword',
        request,
        metadata || {},
        this.methodDescriptorUpdateMyPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/UpdateMyPassword',
    request,
    metadata || {},
    this.methodDescriptorUpdateMyPassword);
  }

  methodDescriptorGetMyProfile = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyProfile',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyProfileRequest,
    zitadel_auth_pb.GetMyProfileResponse,
    (request: zitadel_auth_pb.GetMyProfileRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyProfileResponse.deserializeBinary
  );

  getMyProfile(
    request: zitadel_auth_pb.GetMyProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyProfileResponse>;

  getMyProfile(
    request: zitadel_auth_pb.GetMyProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyProfileResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyProfileResponse>;

  getMyProfile(
    request: zitadel_auth_pb.GetMyProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyProfile',
        request,
        metadata || {},
        this.methodDescriptorGetMyProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyProfile',
    request,
    metadata || {},
    this.methodDescriptorGetMyProfile);
  }

  methodDescriptorUpdateMyProfile = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/UpdateMyProfile',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.UpdateMyProfileRequest,
    zitadel_auth_pb.UpdateMyProfileResponse,
    (request: zitadel_auth_pb.UpdateMyProfileRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.UpdateMyProfileResponse.deserializeBinary
  );

  updateMyProfile(
    request: zitadel_auth_pb.UpdateMyProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.UpdateMyProfileResponse>;

  updateMyProfile(
    request: zitadel_auth_pb.UpdateMyProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.UpdateMyProfileResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.UpdateMyProfileResponse>;

  updateMyProfile(
    request: zitadel_auth_pb.UpdateMyProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.UpdateMyProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/UpdateMyProfile',
        request,
        metadata || {},
        this.methodDescriptorUpdateMyProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/UpdateMyProfile',
    request,
    metadata || {},
    this.methodDescriptorUpdateMyProfile);
  }

  methodDescriptorGetMyEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyEmailRequest,
    zitadel_auth_pb.GetMyEmailResponse,
    (request: zitadel_auth_pb.GetMyEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyEmailResponse.deserializeBinary
  );

  getMyEmail(
    request: zitadel_auth_pb.GetMyEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyEmailResponse>;

  getMyEmail(
    request: zitadel_auth_pb.GetMyEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyEmailResponse>;

  getMyEmail(
    request: zitadel_auth_pb.GetMyEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyEmail',
        request,
        metadata || {},
        this.methodDescriptorGetMyEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyEmail',
    request,
    metadata || {},
    this.methodDescriptorGetMyEmail);
  }

  methodDescriptorSetMyEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/SetMyEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.SetMyEmailRequest,
    zitadel_auth_pb.SetMyEmailResponse,
    (request: zitadel_auth_pb.SetMyEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.SetMyEmailResponse.deserializeBinary
  );

  setMyEmail(
    request: zitadel_auth_pb.SetMyEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.SetMyEmailResponse>;

  setMyEmail(
    request: zitadel_auth_pb.SetMyEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.SetMyEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.SetMyEmailResponse>;

  setMyEmail(
    request: zitadel_auth_pb.SetMyEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.SetMyEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/SetMyEmail',
        request,
        metadata || {},
        this.methodDescriptorSetMyEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/SetMyEmail',
    request,
    metadata || {},
    this.methodDescriptorSetMyEmail);
  }

  methodDescriptorVerifyMyEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/VerifyMyEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.VerifyMyEmailRequest,
    zitadel_auth_pb.VerifyMyEmailResponse,
    (request: zitadel_auth_pb.VerifyMyEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.VerifyMyEmailResponse.deserializeBinary
  );

  verifyMyEmail(
    request: zitadel_auth_pb.VerifyMyEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.VerifyMyEmailResponse>;

  verifyMyEmail(
    request: zitadel_auth_pb.VerifyMyEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.VerifyMyEmailResponse>;

  verifyMyEmail(
    request: zitadel_auth_pb.VerifyMyEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/VerifyMyEmail',
        request,
        metadata || {},
        this.methodDescriptorVerifyMyEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/VerifyMyEmail',
    request,
    metadata || {},
    this.methodDescriptorVerifyMyEmail);
  }

  methodDescriptorResendMyEmailVerification = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ResendMyEmailVerification',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ResendMyEmailVerificationRequest,
    zitadel_auth_pb.ResendMyEmailVerificationResponse,
    (request: zitadel_auth_pb.ResendMyEmailVerificationRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ResendMyEmailVerificationResponse.deserializeBinary
  );

  resendMyEmailVerification(
    request: zitadel_auth_pb.ResendMyEmailVerificationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ResendMyEmailVerificationResponse>;

  resendMyEmailVerification(
    request: zitadel_auth_pb.ResendMyEmailVerificationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ResendMyEmailVerificationResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ResendMyEmailVerificationResponse>;

  resendMyEmailVerification(
    request: zitadel_auth_pb.ResendMyEmailVerificationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ResendMyEmailVerificationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ResendMyEmailVerification',
        request,
        metadata || {},
        this.methodDescriptorResendMyEmailVerification,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ResendMyEmailVerification',
    request,
    metadata || {},
    this.methodDescriptorResendMyEmailVerification);
  }

  methodDescriptorGetMyPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyPhoneRequest,
    zitadel_auth_pb.GetMyPhoneResponse,
    (request: zitadel_auth_pb.GetMyPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyPhoneResponse.deserializeBinary
  );

  getMyPhone(
    request: zitadel_auth_pb.GetMyPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyPhoneResponse>;

  getMyPhone(
    request: zitadel_auth_pb.GetMyPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyPhoneResponse>;

  getMyPhone(
    request: zitadel_auth_pb.GetMyPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyPhone',
        request,
        metadata || {},
        this.methodDescriptorGetMyPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyPhone',
    request,
    metadata || {},
    this.methodDescriptorGetMyPhone);
  }

  methodDescriptorSetMyPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/SetMyPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.SetMyPhoneRequest,
    zitadel_auth_pb.SetMyPhoneResponse,
    (request: zitadel_auth_pb.SetMyPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.SetMyPhoneResponse.deserializeBinary
  );

  setMyPhone(
    request: zitadel_auth_pb.SetMyPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.SetMyPhoneResponse>;

  setMyPhone(
    request: zitadel_auth_pb.SetMyPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.SetMyPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.SetMyPhoneResponse>;

  setMyPhone(
    request: zitadel_auth_pb.SetMyPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.SetMyPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/SetMyPhone',
        request,
        metadata || {},
        this.methodDescriptorSetMyPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/SetMyPhone',
    request,
    metadata || {},
    this.methodDescriptorSetMyPhone);
  }

  methodDescriptorVerifyMyPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/VerifyMyPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.VerifyMyPhoneRequest,
    zitadel_auth_pb.VerifyMyPhoneResponse,
    (request: zitadel_auth_pb.VerifyMyPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.VerifyMyPhoneResponse.deserializeBinary
  );

  verifyMyPhone(
    request: zitadel_auth_pb.VerifyMyPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.VerifyMyPhoneResponse>;

  verifyMyPhone(
    request: zitadel_auth_pb.VerifyMyPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.VerifyMyPhoneResponse>;

  verifyMyPhone(
    request: zitadel_auth_pb.VerifyMyPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/VerifyMyPhone',
        request,
        metadata || {},
        this.methodDescriptorVerifyMyPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/VerifyMyPhone',
    request,
    metadata || {},
    this.methodDescriptorVerifyMyPhone);
  }

  methodDescriptorResendMyPhoneVerification = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ResendMyPhoneVerification',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ResendMyPhoneVerificationRequest,
    zitadel_auth_pb.ResendMyPhoneVerificationResponse,
    (request: zitadel_auth_pb.ResendMyPhoneVerificationRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ResendMyPhoneVerificationResponse.deserializeBinary
  );

  resendMyPhoneVerification(
    request: zitadel_auth_pb.ResendMyPhoneVerificationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ResendMyPhoneVerificationResponse>;

  resendMyPhoneVerification(
    request: zitadel_auth_pb.ResendMyPhoneVerificationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ResendMyPhoneVerificationResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ResendMyPhoneVerificationResponse>;

  resendMyPhoneVerification(
    request: zitadel_auth_pb.ResendMyPhoneVerificationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ResendMyPhoneVerificationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ResendMyPhoneVerification',
        request,
        metadata || {},
        this.methodDescriptorResendMyPhoneVerification,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ResendMyPhoneVerification',
    request,
    metadata || {},
    this.methodDescriptorResendMyPhoneVerification);
  }

  methodDescriptorRemoveMyPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyPhoneRequest,
    zitadel_auth_pb.RemoveMyPhoneResponse,
    (request: zitadel_auth_pb.RemoveMyPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyPhoneResponse.deserializeBinary
  );

  removeMyPhone(
    request: zitadel_auth_pb.RemoveMyPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyPhoneResponse>;

  removeMyPhone(
    request: zitadel_auth_pb.RemoveMyPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyPhoneResponse>;

  removeMyPhone(
    request: zitadel_auth_pb.RemoveMyPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyPhone',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyPhone',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyPhone);
  }

  methodDescriptorRemoveMyAvatar = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyAvatar',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyAvatarRequest,
    zitadel_auth_pb.RemoveMyAvatarResponse,
    (request: zitadel_auth_pb.RemoveMyAvatarRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyAvatarResponse.deserializeBinary
  );

  removeMyAvatar(
    request: zitadel_auth_pb.RemoveMyAvatarRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyAvatarResponse>;

  removeMyAvatar(
    request: zitadel_auth_pb.RemoveMyAvatarRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAvatarResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyAvatarResponse>;

  removeMyAvatar(
    request: zitadel_auth_pb.RemoveMyAvatarRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAvatarResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyAvatar',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyAvatar,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyAvatar',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyAvatar);
  }

  methodDescriptorListMyLinkedIDPs = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyLinkedIDPs',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyLinkedIDPsRequest,
    zitadel_auth_pb.ListMyLinkedIDPsResponse,
    (request: zitadel_auth_pb.ListMyLinkedIDPsRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyLinkedIDPsResponse.deserializeBinary
  );

  listMyLinkedIDPs(
    request: zitadel_auth_pb.ListMyLinkedIDPsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyLinkedIDPsResponse>;

  listMyLinkedIDPs(
    request: zitadel_auth_pb.ListMyLinkedIDPsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyLinkedIDPsResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyLinkedIDPsResponse>;

  listMyLinkedIDPs(
    request: zitadel_auth_pb.ListMyLinkedIDPsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyLinkedIDPsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyLinkedIDPs',
        request,
        metadata || {},
        this.methodDescriptorListMyLinkedIDPs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyLinkedIDPs',
    request,
    metadata || {},
    this.methodDescriptorListMyLinkedIDPs);
  }

  methodDescriptorRemoveMyLinkedIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyLinkedIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyLinkedIDPRequest,
    zitadel_auth_pb.RemoveMyLinkedIDPResponse,
    (request: zitadel_auth_pb.RemoveMyLinkedIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyLinkedIDPResponse.deserializeBinary
  );

  removeMyLinkedIDP(
    request: zitadel_auth_pb.RemoveMyLinkedIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyLinkedIDPResponse>;

  removeMyLinkedIDP(
    request: zitadel_auth_pb.RemoveMyLinkedIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyLinkedIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyLinkedIDPResponse>;

  removeMyLinkedIDP(
    request: zitadel_auth_pb.RemoveMyLinkedIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyLinkedIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyLinkedIDP',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyLinkedIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyLinkedIDP',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyLinkedIDP);
  }

  methodDescriptorListMyAuthFactors = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyAuthFactors',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyAuthFactorsRequest,
    zitadel_auth_pb.ListMyAuthFactorsResponse,
    (request: zitadel_auth_pb.ListMyAuthFactorsRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyAuthFactorsResponse.deserializeBinary
  );

  listMyAuthFactors(
    request: zitadel_auth_pb.ListMyAuthFactorsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyAuthFactorsResponse>;

  listMyAuthFactors(
    request: zitadel_auth_pb.ListMyAuthFactorsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyAuthFactorsResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyAuthFactorsResponse>;

  listMyAuthFactors(
    request: zitadel_auth_pb.ListMyAuthFactorsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyAuthFactorsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyAuthFactors',
        request,
        metadata || {},
        this.methodDescriptorListMyAuthFactors,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyAuthFactors',
    request,
    metadata || {},
    this.methodDescriptorListMyAuthFactors);
  }

  methodDescriptorAddMyAuthFactorOTP = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTP',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.AddMyAuthFactorOTPRequest,
    zitadel_auth_pb.AddMyAuthFactorOTPResponse,
    (request: zitadel_auth_pb.AddMyAuthFactorOTPRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.AddMyAuthFactorOTPResponse.deserializeBinary
  );

  addMyAuthFactorOTP(
    request: zitadel_auth_pb.AddMyAuthFactorOTPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.AddMyAuthFactorOTPResponse>;

  addMyAuthFactorOTP(
    request: zitadel_auth_pb.AddMyAuthFactorOTPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyAuthFactorOTPResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.AddMyAuthFactorOTPResponse>;

  addMyAuthFactorOTP(
    request: zitadel_auth_pb.AddMyAuthFactorOTPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyAuthFactorOTPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTP',
        request,
        metadata || {},
        this.methodDescriptorAddMyAuthFactorOTP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTP',
    request,
    metadata || {},
    this.methodDescriptorAddMyAuthFactorOTP);
  }

  methodDescriptorVerifyMyAuthFactorOTP = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/VerifyMyAuthFactorOTP',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.VerifyMyAuthFactorOTPRequest,
    zitadel_auth_pb.VerifyMyAuthFactorOTPResponse,
    (request: zitadel_auth_pb.VerifyMyAuthFactorOTPRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.VerifyMyAuthFactorOTPResponse.deserializeBinary
  );

  verifyMyAuthFactorOTP(
    request: zitadel_auth_pb.VerifyMyAuthFactorOTPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.VerifyMyAuthFactorOTPResponse>;

  verifyMyAuthFactorOTP(
    request: zitadel_auth_pb.VerifyMyAuthFactorOTPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyAuthFactorOTPResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.VerifyMyAuthFactorOTPResponse>;

  verifyMyAuthFactorOTP(
    request: zitadel_auth_pb.VerifyMyAuthFactorOTPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyAuthFactorOTPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/VerifyMyAuthFactorOTP',
        request,
        metadata || {},
        this.methodDescriptorVerifyMyAuthFactorOTP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/VerifyMyAuthFactorOTP',
    request,
    metadata || {},
    this.methodDescriptorVerifyMyAuthFactorOTP);
  }

  methodDescriptorRemoveMyAuthFactorOTP = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTP',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyAuthFactorOTPRequest,
    zitadel_auth_pb.RemoveMyAuthFactorOTPResponse,
    (request: zitadel_auth_pb.RemoveMyAuthFactorOTPRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyAuthFactorOTPResponse.deserializeBinary
  );

  removeMyAuthFactorOTP(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyAuthFactorOTPResponse>;

  removeMyAuthFactorOTP(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAuthFactorOTPResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyAuthFactorOTPResponse>;

  removeMyAuthFactorOTP(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAuthFactorOTPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTP',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyAuthFactorOTP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTP',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyAuthFactorOTP);
  }

  methodDescriptorAddMyAuthFactorOTPSMS = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTPSMS',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.AddMyAuthFactorOTPSMSRequest,
    zitadel_auth_pb.AddMyAuthFactorOTPSMSResponse,
    (request: zitadel_auth_pb.AddMyAuthFactorOTPSMSRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.AddMyAuthFactorOTPSMSResponse.deserializeBinary
  );

  addMyAuthFactorOTPSMS(
    request: zitadel_auth_pb.AddMyAuthFactorOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.AddMyAuthFactorOTPSMSResponse>;

  addMyAuthFactorOTPSMS(
    request: zitadel_auth_pb.AddMyAuthFactorOTPSMSRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyAuthFactorOTPSMSResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.AddMyAuthFactorOTPSMSResponse>;

  addMyAuthFactorOTPSMS(
    request: zitadel_auth_pb.AddMyAuthFactorOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyAuthFactorOTPSMSResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTPSMS',
        request,
        metadata || {},
        this.methodDescriptorAddMyAuthFactorOTPSMS,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTPSMS',
    request,
    metadata || {},
    this.methodDescriptorAddMyAuthFactorOTPSMS);
  }

  methodDescriptorRemoveMyAuthFactorOTPSMS = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTPSMS',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyAuthFactorOTPSMSRequest,
    zitadel_auth_pb.RemoveMyAuthFactorOTPSMSResponse,
    (request: zitadel_auth_pb.RemoveMyAuthFactorOTPSMSRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyAuthFactorOTPSMSResponse.deserializeBinary
  );

  removeMyAuthFactorOTPSMS(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyAuthFactorOTPSMSResponse>;

  removeMyAuthFactorOTPSMS(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPSMSRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAuthFactorOTPSMSResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyAuthFactorOTPSMSResponse>;

  removeMyAuthFactorOTPSMS(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAuthFactorOTPSMSResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTPSMS',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyAuthFactorOTPSMS,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTPSMS',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyAuthFactorOTPSMS);
  }

  methodDescriptorAddMyAuthFactorOTPEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTPEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.AddMyAuthFactorOTPEmailRequest,
    zitadel_auth_pb.AddMyAuthFactorOTPEmailResponse,
    (request: zitadel_auth_pb.AddMyAuthFactorOTPEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.AddMyAuthFactorOTPEmailResponse.deserializeBinary
  );

  addMyAuthFactorOTPEmail(
    request: zitadel_auth_pb.AddMyAuthFactorOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.AddMyAuthFactorOTPEmailResponse>;

  addMyAuthFactorOTPEmail(
    request: zitadel_auth_pb.AddMyAuthFactorOTPEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyAuthFactorOTPEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.AddMyAuthFactorOTPEmailResponse>;

  addMyAuthFactorOTPEmail(
    request: zitadel_auth_pb.AddMyAuthFactorOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyAuthFactorOTPEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTPEmail',
        request,
        metadata || {},
        this.methodDescriptorAddMyAuthFactorOTPEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/AddMyAuthFactorOTPEmail',
    request,
    metadata || {},
    this.methodDescriptorAddMyAuthFactorOTPEmail);
  }

  methodDescriptorRemoveMyAuthFactorOTPEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTPEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyAuthFactorOTPEmailRequest,
    zitadel_auth_pb.RemoveMyAuthFactorOTPEmailResponse,
    (request: zitadel_auth_pb.RemoveMyAuthFactorOTPEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyAuthFactorOTPEmailResponse.deserializeBinary
  );

  removeMyAuthFactorOTPEmail(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyAuthFactorOTPEmailResponse>;

  removeMyAuthFactorOTPEmail(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAuthFactorOTPEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyAuthFactorOTPEmailResponse>;

  removeMyAuthFactorOTPEmail(
    request: zitadel_auth_pb.RemoveMyAuthFactorOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAuthFactorOTPEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTPEmail',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyAuthFactorOTPEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorOTPEmail',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyAuthFactorOTPEmail);
  }

  methodDescriptorAddMyAuthFactorU2F = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/AddMyAuthFactorU2F',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.AddMyAuthFactorU2FRequest,
    zitadel_auth_pb.AddMyAuthFactorU2FResponse,
    (request: zitadel_auth_pb.AddMyAuthFactorU2FRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.AddMyAuthFactorU2FResponse.deserializeBinary
  );

  addMyAuthFactorU2F(
    request: zitadel_auth_pb.AddMyAuthFactorU2FRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.AddMyAuthFactorU2FResponse>;

  addMyAuthFactorU2F(
    request: zitadel_auth_pb.AddMyAuthFactorU2FRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyAuthFactorU2FResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.AddMyAuthFactorU2FResponse>;

  addMyAuthFactorU2F(
    request: zitadel_auth_pb.AddMyAuthFactorU2FRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyAuthFactorU2FResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/AddMyAuthFactorU2F',
        request,
        metadata || {},
        this.methodDescriptorAddMyAuthFactorU2F,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/AddMyAuthFactorU2F',
    request,
    metadata || {},
    this.methodDescriptorAddMyAuthFactorU2F);
  }

  methodDescriptorVerifyMyAuthFactorU2F = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/VerifyMyAuthFactorU2F',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.VerifyMyAuthFactorU2FRequest,
    zitadel_auth_pb.VerifyMyAuthFactorU2FResponse,
    (request: zitadel_auth_pb.VerifyMyAuthFactorU2FRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.VerifyMyAuthFactorU2FResponse.deserializeBinary
  );

  verifyMyAuthFactorU2F(
    request: zitadel_auth_pb.VerifyMyAuthFactorU2FRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.VerifyMyAuthFactorU2FResponse>;

  verifyMyAuthFactorU2F(
    request: zitadel_auth_pb.VerifyMyAuthFactorU2FRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyAuthFactorU2FResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.VerifyMyAuthFactorU2FResponse>;

  verifyMyAuthFactorU2F(
    request: zitadel_auth_pb.VerifyMyAuthFactorU2FRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyAuthFactorU2FResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/VerifyMyAuthFactorU2F',
        request,
        metadata || {},
        this.methodDescriptorVerifyMyAuthFactorU2F,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/VerifyMyAuthFactorU2F',
    request,
    metadata || {},
    this.methodDescriptorVerifyMyAuthFactorU2F);
  }

  methodDescriptorRemoveMyAuthFactorU2F = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorU2F',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyAuthFactorU2FRequest,
    zitadel_auth_pb.RemoveMyAuthFactorU2FResponse,
    (request: zitadel_auth_pb.RemoveMyAuthFactorU2FRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyAuthFactorU2FResponse.deserializeBinary
  );

  removeMyAuthFactorU2F(
    request: zitadel_auth_pb.RemoveMyAuthFactorU2FRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyAuthFactorU2FResponse>;

  removeMyAuthFactorU2F(
    request: zitadel_auth_pb.RemoveMyAuthFactorU2FRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAuthFactorU2FResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyAuthFactorU2FResponse>;

  removeMyAuthFactorU2F(
    request: zitadel_auth_pb.RemoveMyAuthFactorU2FRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyAuthFactorU2FResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorU2F',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyAuthFactorU2F,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyAuthFactorU2F',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyAuthFactorU2F);
  }

  methodDescriptorListMyPasswordless = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyPasswordless',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyPasswordlessRequest,
    zitadel_auth_pb.ListMyPasswordlessResponse,
    (request: zitadel_auth_pb.ListMyPasswordlessRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyPasswordlessResponse.deserializeBinary
  );

  listMyPasswordless(
    request: zitadel_auth_pb.ListMyPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyPasswordlessResponse>;

  listMyPasswordless(
    request: zitadel_auth_pb.ListMyPasswordlessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyPasswordlessResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyPasswordlessResponse>;

  listMyPasswordless(
    request: zitadel_auth_pb.ListMyPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyPasswordlessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyPasswordless',
        request,
        metadata || {},
        this.methodDescriptorListMyPasswordless,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyPasswordless',
    request,
    metadata || {},
    this.methodDescriptorListMyPasswordless);
  }

  methodDescriptorAddMyPasswordless = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/AddMyPasswordless',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.AddMyPasswordlessRequest,
    zitadel_auth_pb.AddMyPasswordlessResponse,
    (request: zitadel_auth_pb.AddMyPasswordlessRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.AddMyPasswordlessResponse.deserializeBinary
  );

  addMyPasswordless(
    request: zitadel_auth_pb.AddMyPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.AddMyPasswordlessResponse>;

  addMyPasswordless(
    request: zitadel_auth_pb.AddMyPasswordlessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyPasswordlessResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.AddMyPasswordlessResponse>;

  addMyPasswordless(
    request: zitadel_auth_pb.AddMyPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyPasswordlessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/AddMyPasswordless',
        request,
        metadata || {},
        this.methodDescriptorAddMyPasswordless,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/AddMyPasswordless',
    request,
    metadata || {},
    this.methodDescriptorAddMyPasswordless);
  }

  methodDescriptorAddMyPasswordlessLink = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/AddMyPasswordlessLink',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.AddMyPasswordlessLinkRequest,
    zitadel_auth_pb.AddMyPasswordlessLinkResponse,
    (request: zitadel_auth_pb.AddMyPasswordlessLinkRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.AddMyPasswordlessLinkResponse.deserializeBinary
  );

  addMyPasswordlessLink(
    request: zitadel_auth_pb.AddMyPasswordlessLinkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.AddMyPasswordlessLinkResponse>;

  addMyPasswordlessLink(
    request: zitadel_auth_pb.AddMyPasswordlessLinkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyPasswordlessLinkResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.AddMyPasswordlessLinkResponse>;

  addMyPasswordlessLink(
    request: zitadel_auth_pb.AddMyPasswordlessLinkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.AddMyPasswordlessLinkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/AddMyPasswordlessLink',
        request,
        metadata || {},
        this.methodDescriptorAddMyPasswordlessLink,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/AddMyPasswordlessLink',
    request,
    metadata || {},
    this.methodDescriptorAddMyPasswordlessLink);
  }

  methodDescriptorSendMyPasswordlessLink = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/SendMyPasswordlessLink',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.SendMyPasswordlessLinkRequest,
    zitadel_auth_pb.SendMyPasswordlessLinkResponse,
    (request: zitadel_auth_pb.SendMyPasswordlessLinkRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.SendMyPasswordlessLinkResponse.deserializeBinary
  );

  sendMyPasswordlessLink(
    request: zitadel_auth_pb.SendMyPasswordlessLinkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.SendMyPasswordlessLinkResponse>;

  sendMyPasswordlessLink(
    request: zitadel_auth_pb.SendMyPasswordlessLinkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.SendMyPasswordlessLinkResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.SendMyPasswordlessLinkResponse>;

  sendMyPasswordlessLink(
    request: zitadel_auth_pb.SendMyPasswordlessLinkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.SendMyPasswordlessLinkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/SendMyPasswordlessLink',
        request,
        metadata || {},
        this.methodDescriptorSendMyPasswordlessLink,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/SendMyPasswordlessLink',
    request,
    metadata || {},
    this.methodDescriptorSendMyPasswordlessLink);
  }

  methodDescriptorVerifyMyPasswordless = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/VerifyMyPasswordless',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.VerifyMyPasswordlessRequest,
    zitadel_auth_pb.VerifyMyPasswordlessResponse,
    (request: zitadel_auth_pb.VerifyMyPasswordlessRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.VerifyMyPasswordlessResponse.deserializeBinary
  );

  verifyMyPasswordless(
    request: zitadel_auth_pb.VerifyMyPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.VerifyMyPasswordlessResponse>;

  verifyMyPasswordless(
    request: zitadel_auth_pb.VerifyMyPasswordlessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyPasswordlessResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.VerifyMyPasswordlessResponse>;

  verifyMyPasswordless(
    request: zitadel_auth_pb.VerifyMyPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.VerifyMyPasswordlessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/VerifyMyPasswordless',
        request,
        metadata || {},
        this.methodDescriptorVerifyMyPasswordless,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/VerifyMyPasswordless',
    request,
    metadata || {},
    this.methodDescriptorVerifyMyPasswordless);
  }

  methodDescriptorRemoveMyPasswordless = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/RemoveMyPasswordless',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.RemoveMyPasswordlessRequest,
    zitadel_auth_pb.RemoveMyPasswordlessResponse,
    (request: zitadel_auth_pb.RemoveMyPasswordlessRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.RemoveMyPasswordlessResponse.deserializeBinary
  );

  removeMyPasswordless(
    request: zitadel_auth_pb.RemoveMyPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.RemoveMyPasswordlessResponse>;

  removeMyPasswordless(
    request: zitadel_auth_pb.RemoveMyPasswordlessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyPasswordlessResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.RemoveMyPasswordlessResponse>;

  removeMyPasswordless(
    request: zitadel_auth_pb.RemoveMyPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.RemoveMyPasswordlessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/RemoveMyPasswordless',
        request,
        metadata || {},
        this.methodDescriptorRemoveMyPasswordless,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/RemoveMyPasswordless',
    request,
    metadata || {},
    this.methodDescriptorRemoveMyPasswordless);
  }

  methodDescriptorListMyUserGrants = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyUserGrants',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyUserGrantsRequest,
    zitadel_auth_pb.ListMyUserGrantsResponse,
    (request: zitadel_auth_pb.ListMyUserGrantsRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyUserGrantsResponse.deserializeBinary
  );

  listMyUserGrants(
    request: zitadel_auth_pb.ListMyUserGrantsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyUserGrantsResponse>;

  listMyUserGrants(
    request: zitadel_auth_pb.ListMyUserGrantsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyUserGrantsResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyUserGrantsResponse>;

  listMyUserGrants(
    request: zitadel_auth_pb.ListMyUserGrantsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyUserGrantsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyUserGrants',
        request,
        metadata || {},
        this.methodDescriptorListMyUserGrants,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyUserGrants',
    request,
    metadata || {},
    this.methodDescriptorListMyUserGrants);
  }

  methodDescriptorListMyProjectOrgs = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyProjectOrgs',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyProjectOrgsRequest,
    zitadel_auth_pb.ListMyProjectOrgsResponse,
    (request: zitadel_auth_pb.ListMyProjectOrgsRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyProjectOrgsResponse.deserializeBinary
  );

  listMyProjectOrgs(
    request: zitadel_auth_pb.ListMyProjectOrgsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyProjectOrgsResponse>;

  listMyProjectOrgs(
    request: zitadel_auth_pb.ListMyProjectOrgsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyProjectOrgsResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyProjectOrgsResponse>;

  listMyProjectOrgs(
    request: zitadel_auth_pb.ListMyProjectOrgsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyProjectOrgsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyProjectOrgs',
        request,
        metadata || {},
        this.methodDescriptorListMyProjectOrgs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyProjectOrgs',
    request,
    metadata || {},
    this.methodDescriptorListMyProjectOrgs);
  }

  methodDescriptorListMyZitadelPermissions = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyZitadelPermissions',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyZitadelPermissionsRequest,
    zitadel_auth_pb.ListMyZitadelPermissionsResponse,
    (request: zitadel_auth_pb.ListMyZitadelPermissionsRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyZitadelPermissionsResponse.deserializeBinary
  );

  listMyZitadelPermissions(
    request: zitadel_auth_pb.ListMyZitadelPermissionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyZitadelPermissionsResponse>;

  listMyZitadelPermissions(
    request: zitadel_auth_pb.ListMyZitadelPermissionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyZitadelPermissionsResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyZitadelPermissionsResponse>;

  listMyZitadelPermissions(
    request: zitadel_auth_pb.ListMyZitadelPermissionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyZitadelPermissionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyZitadelPermissions',
        request,
        metadata || {},
        this.methodDescriptorListMyZitadelPermissions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyZitadelPermissions',
    request,
    metadata || {},
    this.methodDescriptorListMyZitadelPermissions);
  }

  methodDescriptorListMyProjectPermissions = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyProjectPermissions',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyProjectPermissionsRequest,
    zitadel_auth_pb.ListMyProjectPermissionsResponse,
    (request: zitadel_auth_pb.ListMyProjectPermissionsRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyProjectPermissionsResponse.deserializeBinary
  );

  listMyProjectPermissions(
    request: zitadel_auth_pb.ListMyProjectPermissionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyProjectPermissionsResponse>;

  listMyProjectPermissions(
    request: zitadel_auth_pb.ListMyProjectPermissionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyProjectPermissionsResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyProjectPermissionsResponse>;

  listMyProjectPermissions(
    request: zitadel_auth_pb.ListMyProjectPermissionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyProjectPermissionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyProjectPermissions',
        request,
        metadata || {},
        this.methodDescriptorListMyProjectPermissions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyProjectPermissions',
    request,
    metadata || {},
    this.methodDescriptorListMyProjectPermissions);
  }

  methodDescriptorListMyMemberships = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/ListMyMemberships',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.ListMyMembershipsRequest,
    zitadel_auth_pb.ListMyMembershipsResponse,
    (request: zitadel_auth_pb.ListMyMembershipsRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.ListMyMembershipsResponse.deserializeBinary
  );

  listMyMemberships(
    request: zitadel_auth_pb.ListMyMembershipsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.ListMyMembershipsResponse>;

  listMyMemberships(
    request: zitadel_auth_pb.ListMyMembershipsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyMembershipsResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.ListMyMembershipsResponse>;

  listMyMemberships(
    request: zitadel_auth_pb.ListMyMembershipsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.ListMyMembershipsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/ListMyMemberships',
        request,
        metadata || {},
        this.methodDescriptorListMyMemberships,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/ListMyMemberships',
    request,
    metadata || {},
    this.methodDescriptorListMyMemberships);
  }

  methodDescriptorGetMyLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyLabelPolicyRequest,
    zitadel_auth_pb.GetMyLabelPolicyResponse,
    (request: zitadel_auth_pb.GetMyLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyLabelPolicyResponse.deserializeBinary
  );

  getMyLabelPolicy(
    request: zitadel_auth_pb.GetMyLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyLabelPolicyResponse>;

  getMyLabelPolicy(
    request: zitadel_auth_pb.GetMyLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyLabelPolicyResponse>;

  getMyLabelPolicy(
    request: zitadel_auth_pb.GetMyLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetMyLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetMyLabelPolicy);
  }

  methodDescriptorGetMyPrivacyPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyPrivacyPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyPrivacyPolicyRequest,
    zitadel_auth_pb.GetMyPrivacyPolicyResponse,
    (request: zitadel_auth_pb.GetMyPrivacyPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyPrivacyPolicyResponse.deserializeBinary
  );

  getMyPrivacyPolicy(
    request: zitadel_auth_pb.GetMyPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyPrivacyPolicyResponse>;

  getMyPrivacyPolicy(
    request: zitadel_auth_pb.GetMyPrivacyPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyPrivacyPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyPrivacyPolicyResponse>;

  getMyPrivacyPolicy(
    request: zitadel_auth_pb.GetMyPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyPrivacyPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyPrivacyPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetMyPrivacyPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyPrivacyPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetMyPrivacyPolicy);
  }

  methodDescriptorGetMyLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.auth.v1.AuthService/GetMyLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_auth_pb.GetMyLoginPolicyRequest,
    zitadel_auth_pb.GetMyLoginPolicyResponse,
    (request: zitadel_auth_pb.GetMyLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_auth_pb.GetMyLoginPolicyResponse.deserializeBinary
  );

  getMyLoginPolicy(
    request: zitadel_auth_pb.GetMyLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_auth_pb.GetMyLoginPolicyResponse>;

  getMyLoginPolicy(
    request: zitadel_auth_pb.GetMyLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_auth_pb.GetMyLoginPolicyResponse>;

  getMyLoginPolicy(
    request: zitadel_auth_pb.GetMyLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_auth_pb.GetMyLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.auth.v1.AuthService/GetMyLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetMyLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.auth.v1.AuthService/GetMyLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetMyLoginPolicy);
  }

}

