/**
 * @fileoverview gRPC-Web generated client stub for zitadel.management.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: zitadel/management.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as zitadel_management_pb from '../zitadel/management_pb'; // proto import: "zitadel/management.proto"


export class ManagementServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorHealthz = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/Healthz',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.HealthzRequest,
    zitadel_management_pb.HealthzResponse,
    (request: zitadel_management_pb.HealthzRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.HealthzResponse.deserializeBinary
  );

  healthz(
    request: zitadel_management_pb.HealthzRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.HealthzResponse>;

  healthz(
    request: zitadel_management_pb.HealthzRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.HealthzResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.HealthzResponse>;

  healthz(
    request: zitadel_management_pb.HealthzRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.HealthzResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/Healthz',
        request,
        metadata || {},
        this.methodDescriptorHealthz,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/Healthz',
    request,
    metadata || {},
    this.methodDescriptorHealthz);
  }

  methodDescriptorGetOIDCInformation = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetOIDCInformation',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetOIDCInformationRequest,
    zitadel_management_pb.GetOIDCInformationResponse,
    (request: zitadel_management_pb.GetOIDCInformationRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetOIDCInformationResponse.deserializeBinary
  );

  getOIDCInformation(
    request: zitadel_management_pb.GetOIDCInformationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetOIDCInformationResponse>;

  getOIDCInformation(
    request: zitadel_management_pb.GetOIDCInformationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOIDCInformationResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetOIDCInformationResponse>;

  getOIDCInformation(
    request: zitadel_management_pb.GetOIDCInformationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOIDCInformationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetOIDCInformation',
        request,
        metadata || {},
        this.methodDescriptorGetOIDCInformation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetOIDCInformation',
    request,
    metadata || {},
    this.methodDescriptorGetOIDCInformation);
  }

  methodDescriptorGetIAM = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetIAM',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetIAMRequest,
    zitadel_management_pb.GetIAMResponse,
    (request: zitadel_management_pb.GetIAMRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetIAMResponse.deserializeBinary
  );

  getIAM(
    request: zitadel_management_pb.GetIAMRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetIAMResponse>;

  getIAM(
    request: zitadel_management_pb.GetIAMRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetIAMResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetIAMResponse>;

  getIAM(
    request: zitadel_management_pb.GetIAMRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetIAMResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetIAM',
        request,
        metadata || {},
        this.methodDescriptorGetIAM,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetIAM',
    request,
    metadata || {},
    this.methodDescriptorGetIAM);
  }

  methodDescriptorGetSupportedLanguages = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetSupportedLanguages',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetSupportedLanguagesRequest,
    zitadel_management_pb.GetSupportedLanguagesResponse,
    (request: zitadel_management_pb.GetSupportedLanguagesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetSupportedLanguagesResponse.deserializeBinary
  );

  getSupportedLanguages(
    request: zitadel_management_pb.GetSupportedLanguagesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetSupportedLanguagesResponse>;

  getSupportedLanguages(
    request: zitadel_management_pb.GetSupportedLanguagesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetSupportedLanguagesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetSupportedLanguagesResponse>;

  getSupportedLanguages(
    request: zitadel_management_pb.GetSupportedLanguagesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetSupportedLanguagesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetSupportedLanguages',
        request,
        metadata || {},
        this.methodDescriptorGetSupportedLanguages,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetSupportedLanguages',
    request,
    metadata || {},
    this.methodDescriptorGetSupportedLanguages);
  }

  methodDescriptorGetUserByID = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetUserByID',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetUserByIDRequest,
    zitadel_management_pb.GetUserByIDResponse,
    (request: zitadel_management_pb.GetUserByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetUserByIDResponse.deserializeBinary
  );

  getUserByID(
    request: zitadel_management_pb.GetUserByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetUserByIDResponse>;

  getUserByID(
    request: zitadel_management_pb.GetUserByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetUserByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetUserByIDResponse>;

  getUserByID(
    request: zitadel_management_pb.GetUserByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetUserByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetUserByID',
        request,
        metadata || {},
        this.methodDescriptorGetUserByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetUserByID',
    request,
    metadata || {},
    this.methodDescriptorGetUserByID);
  }

  methodDescriptorGetUserByLoginNameGlobal = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetUserByLoginNameGlobal',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetUserByLoginNameGlobalRequest,
    zitadel_management_pb.GetUserByLoginNameGlobalResponse,
    (request: zitadel_management_pb.GetUserByLoginNameGlobalRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetUserByLoginNameGlobalResponse.deserializeBinary
  );

  getUserByLoginNameGlobal(
    request: zitadel_management_pb.GetUserByLoginNameGlobalRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetUserByLoginNameGlobalResponse>;

  getUserByLoginNameGlobal(
    request: zitadel_management_pb.GetUserByLoginNameGlobalRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetUserByLoginNameGlobalResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetUserByLoginNameGlobalResponse>;

  getUserByLoginNameGlobal(
    request: zitadel_management_pb.GetUserByLoginNameGlobalRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetUserByLoginNameGlobalResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetUserByLoginNameGlobal',
        request,
        metadata || {},
        this.methodDescriptorGetUserByLoginNameGlobal,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetUserByLoginNameGlobal',
    request,
    metadata || {},
    this.methodDescriptorGetUserByLoginNameGlobal);
  }

  methodDescriptorListUsers = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListUsers',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListUsersRequest,
    zitadel_management_pb.ListUsersResponse,
    (request: zitadel_management_pb.ListUsersRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListUsersResponse.deserializeBinary
  );

  listUsers(
    request: zitadel_management_pb.ListUsersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListUsersResponse>;

  listUsers(
    request: zitadel_management_pb.ListUsersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUsersResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListUsersResponse>;

  listUsers(
    request: zitadel_management_pb.ListUsersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUsersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListUsers',
        request,
        metadata || {},
        this.methodDescriptorListUsers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListUsers',
    request,
    metadata || {},
    this.methodDescriptorListUsers);
  }

  methodDescriptorListUserChanges = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListUserChanges',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListUserChangesRequest,
    zitadel_management_pb.ListUserChangesResponse,
    (request: zitadel_management_pb.ListUserChangesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListUserChangesResponse.deserializeBinary
  );

  listUserChanges(
    request: zitadel_management_pb.ListUserChangesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListUserChangesResponse>;

  listUserChanges(
    request: zitadel_management_pb.ListUserChangesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUserChangesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListUserChangesResponse>;

  listUserChanges(
    request: zitadel_management_pb.ListUserChangesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUserChangesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListUserChanges',
        request,
        metadata || {},
        this.methodDescriptorListUserChanges,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListUserChanges',
    request,
    metadata || {},
    this.methodDescriptorListUserChanges);
  }

  methodDescriptorIsUserUnique = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/IsUserUnique',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.IsUserUniqueRequest,
    zitadel_management_pb.IsUserUniqueResponse,
    (request: zitadel_management_pb.IsUserUniqueRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.IsUserUniqueResponse.deserializeBinary
  );

  isUserUnique(
    request: zitadel_management_pb.IsUserUniqueRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.IsUserUniqueResponse>;

  isUserUnique(
    request: zitadel_management_pb.IsUserUniqueRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.IsUserUniqueResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.IsUserUniqueResponse>;

  isUserUnique(
    request: zitadel_management_pb.IsUserUniqueRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.IsUserUniqueResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/IsUserUnique',
        request,
        metadata || {},
        this.methodDescriptorIsUserUnique,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/IsUserUnique',
    request,
    metadata || {},
    this.methodDescriptorIsUserUnique);
  }

  methodDescriptorAddHumanUser = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddHumanUser',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddHumanUserRequest,
    zitadel_management_pb.AddHumanUserResponse,
    (request: zitadel_management_pb.AddHumanUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddHumanUserResponse.deserializeBinary
  );

  addHumanUser(
    request: zitadel_management_pb.AddHumanUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddHumanUserResponse>;

  addHumanUser(
    request: zitadel_management_pb.AddHumanUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddHumanUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddHumanUserResponse>;

  addHumanUser(
    request: zitadel_management_pb.AddHumanUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddHumanUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddHumanUser',
        request,
        metadata || {},
        this.methodDescriptorAddHumanUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddHumanUser',
    request,
    metadata || {},
    this.methodDescriptorAddHumanUser);
  }

  methodDescriptorImportHumanUser = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ImportHumanUser',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ImportHumanUserRequest,
    zitadel_management_pb.ImportHumanUserResponse,
    (request: zitadel_management_pb.ImportHumanUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ImportHumanUserResponse.deserializeBinary
  );

  importHumanUser(
    request: zitadel_management_pb.ImportHumanUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ImportHumanUserResponse>;

  importHumanUser(
    request: zitadel_management_pb.ImportHumanUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ImportHumanUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ImportHumanUserResponse>;

  importHumanUser(
    request: zitadel_management_pb.ImportHumanUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ImportHumanUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ImportHumanUser',
        request,
        metadata || {},
        this.methodDescriptorImportHumanUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ImportHumanUser',
    request,
    metadata || {},
    this.methodDescriptorImportHumanUser);
  }

  methodDescriptorAddMachineUser = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddMachineUser',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddMachineUserRequest,
    zitadel_management_pb.AddMachineUserResponse,
    (request: zitadel_management_pb.AddMachineUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddMachineUserResponse.deserializeBinary
  );

  addMachineUser(
    request: zitadel_management_pb.AddMachineUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddMachineUserResponse>;

  addMachineUser(
    request: zitadel_management_pb.AddMachineUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddMachineUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddMachineUserResponse>;

  addMachineUser(
    request: zitadel_management_pb.AddMachineUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddMachineUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddMachineUser',
        request,
        metadata || {},
        this.methodDescriptorAddMachineUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddMachineUser',
    request,
    metadata || {},
    this.methodDescriptorAddMachineUser);
  }

  methodDescriptorDeactivateUser = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeactivateUser',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeactivateUserRequest,
    zitadel_management_pb.DeactivateUserResponse,
    (request: zitadel_management_pb.DeactivateUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeactivateUserResponse.deserializeBinary
  );

  deactivateUser(
    request: zitadel_management_pb.DeactivateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeactivateUserResponse>;

  deactivateUser(
    request: zitadel_management_pb.DeactivateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeactivateUserResponse>;

  deactivateUser(
    request: zitadel_management_pb.DeactivateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeactivateUser',
        request,
        metadata || {},
        this.methodDescriptorDeactivateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeactivateUser',
    request,
    metadata || {},
    this.methodDescriptorDeactivateUser);
  }

  methodDescriptorReactivateUser = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ReactivateUser',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ReactivateUserRequest,
    zitadel_management_pb.ReactivateUserResponse,
    (request: zitadel_management_pb.ReactivateUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ReactivateUserResponse.deserializeBinary
  );

  reactivateUser(
    request: zitadel_management_pb.ReactivateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ReactivateUserResponse>;

  reactivateUser(
    request: zitadel_management_pb.ReactivateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ReactivateUserResponse>;

  reactivateUser(
    request: zitadel_management_pb.ReactivateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ReactivateUser',
        request,
        metadata || {},
        this.methodDescriptorReactivateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ReactivateUser',
    request,
    metadata || {},
    this.methodDescriptorReactivateUser);
  }

  methodDescriptorLockUser = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/LockUser',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.LockUserRequest,
    zitadel_management_pb.LockUserResponse,
    (request: zitadel_management_pb.LockUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.LockUserResponse.deserializeBinary
  );

  lockUser(
    request: zitadel_management_pb.LockUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.LockUserResponse>;

  lockUser(
    request: zitadel_management_pb.LockUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.LockUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.LockUserResponse>;

  lockUser(
    request: zitadel_management_pb.LockUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.LockUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/LockUser',
        request,
        metadata || {},
        this.methodDescriptorLockUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/LockUser',
    request,
    metadata || {},
    this.methodDescriptorLockUser);
  }

  methodDescriptorUnlockUser = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UnlockUser',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UnlockUserRequest,
    zitadel_management_pb.UnlockUserResponse,
    (request: zitadel_management_pb.UnlockUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UnlockUserResponse.deserializeBinary
  );

  unlockUser(
    request: zitadel_management_pb.UnlockUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UnlockUserResponse>;

  unlockUser(
    request: zitadel_management_pb.UnlockUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UnlockUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UnlockUserResponse>;

  unlockUser(
    request: zitadel_management_pb.UnlockUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UnlockUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UnlockUser',
        request,
        metadata || {},
        this.methodDescriptorUnlockUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UnlockUser',
    request,
    metadata || {},
    this.methodDescriptorUnlockUser);
  }

  methodDescriptorRemoveUser = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveUser',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveUserRequest,
    zitadel_management_pb.RemoveUserResponse,
    (request: zitadel_management_pb.RemoveUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveUserResponse.deserializeBinary
  );

  removeUser(
    request: zitadel_management_pb.RemoveUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveUserResponse>;

  removeUser(
    request: zitadel_management_pb.RemoveUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveUserResponse>;

  removeUser(
    request: zitadel_management_pb.RemoveUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveUser',
        request,
        metadata || {},
        this.methodDescriptorRemoveUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveUser',
    request,
    metadata || {},
    this.methodDescriptorRemoveUser);
  }

  methodDescriptorUpdateUserName = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateUserName',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateUserNameRequest,
    zitadel_management_pb.UpdateUserNameResponse,
    (request: zitadel_management_pb.UpdateUserNameRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateUserNameResponse.deserializeBinary
  );

  updateUserName(
    request: zitadel_management_pb.UpdateUserNameRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateUserNameResponse>;

  updateUserName(
    request: zitadel_management_pb.UpdateUserNameRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateUserNameResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateUserNameResponse>;

  updateUserName(
    request: zitadel_management_pb.UpdateUserNameRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateUserNameResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateUserName',
        request,
        metadata || {},
        this.methodDescriptorUpdateUserName,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateUserName',
    request,
    metadata || {},
    this.methodDescriptorUpdateUserName);
  }

  methodDescriptorSetUserMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetUserMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetUserMetadataRequest,
    zitadel_management_pb.SetUserMetadataResponse,
    (request: zitadel_management_pb.SetUserMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetUserMetadataResponse.deserializeBinary
  );

  setUserMetadata(
    request: zitadel_management_pb.SetUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetUserMetadataResponse>;

  setUserMetadata(
    request: zitadel_management_pb.SetUserMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetUserMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetUserMetadataResponse>;

  setUserMetadata(
    request: zitadel_management_pb.SetUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetUserMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetUserMetadata',
        request,
        metadata || {},
        this.methodDescriptorSetUserMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetUserMetadata',
    request,
    metadata || {},
    this.methodDescriptorSetUserMetadata);
  }

  methodDescriptorBulkSetUserMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/BulkSetUserMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.BulkSetUserMetadataRequest,
    zitadel_management_pb.BulkSetUserMetadataResponse,
    (request: zitadel_management_pb.BulkSetUserMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.BulkSetUserMetadataResponse.deserializeBinary
  );

  bulkSetUserMetadata(
    request: zitadel_management_pb.BulkSetUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.BulkSetUserMetadataResponse>;

  bulkSetUserMetadata(
    request: zitadel_management_pb.BulkSetUserMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkSetUserMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.BulkSetUserMetadataResponse>;

  bulkSetUserMetadata(
    request: zitadel_management_pb.BulkSetUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkSetUserMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/BulkSetUserMetadata',
        request,
        metadata || {},
        this.methodDescriptorBulkSetUserMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/BulkSetUserMetadata',
    request,
    metadata || {},
    this.methodDescriptorBulkSetUserMetadata);
  }

  methodDescriptorListUserMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListUserMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListUserMetadataRequest,
    zitadel_management_pb.ListUserMetadataResponse,
    (request: zitadel_management_pb.ListUserMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListUserMetadataResponse.deserializeBinary
  );

  listUserMetadata(
    request: zitadel_management_pb.ListUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListUserMetadataResponse>;

  listUserMetadata(
    request: zitadel_management_pb.ListUserMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUserMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListUserMetadataResponse>;

  listUserMetadata(
    request: zitadel_management_pb.ListUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUserMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListUserMetadata',
        request,
        metadata || {},
        this.methodDescriptorListUserMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListUserMetadata',
    request,
    metadata || {},
    this.methodDescriptorListUserMetadata);
  }

  methodDescriptorGetUserMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetUserMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetUserMetadataRequest,
    zitadel_management_pb.GetUserMetadataResponse,
    (request: zitadel_management_pb.GetUserMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetUserMetadataResponse.deserializeBinary
  );

  getUserMetadata(
    request: zitadel_management_pb.GetUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetUserMetadataResponse>;

  getUserMetadata(
    request: zitadel_management_pb.GetUserMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetUserMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetUserMetadataResponse>;

  getUserMetadata(
    request: zitadel_management_pb.GetUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetUserMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetUserMetadata',
        request,
        metadata || {},
        this.methodDescriptorGetUserMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetUserMetadata',
    request,
    metadata || {},
    this.methodDescriptorGetUserMetadata);
  }

  methodDescriptorRemoveUserMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveUserMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveUserMetadataRequest,
    zitadel_management_pb.RemoveUserMetadataResponse,
    (request: zitadel_management_pb.RemoveUserMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveUserMetadataResponse.deserializeBinary
  );

  removeUserMetadata(
    request: zitadel_management_pb.RemoveUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveUserMetadataResponse>;

  removeUserMetadata(
    request: zitadel_management_pb.RemoveUserMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveUserMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveUserMetadataResponse>;

  removeUserMetadata(
    request: zitadel_management_pb.RemoveUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveUserMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveUserMetadata',
        request,
        metadata || {},
        this.methodDescriptorRemoveUserMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveUserMetadata',
    request,
    metadata || {},
    this.methodDescriptorRemoveUserMetadata);
  }

  methodDescriptorBulkRemoveUserMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/BulkRemoveUserMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.BulkRemoveUserMetadataRequest,
    zitadel_management_pb.BulkRemoveUserMetadataResponse,
    (request: zitadel_management_pb.BulkRemoveUserMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.BulkRemoveUserMetadataResponse.deserializeBinary
  );

  bulkRemoveUserMetadata(
    request: zitadel_management_pb.BulkRemoveUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.BulkRemoveUserMetadataResponse>;

  bulkRemoveUserMetadata(
    request: zitadel_management_pb.BulkRemoveUserMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkRemoveUserMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.BulkRemoveUserMetadataResponse>;

  bulkRemoveUserMetadata(
    request: zitadel_management_pb.BulkRemoveUserMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkRemoveUserMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/BulkRemoveUserMetadata',
        request,
        metadata || {},
        this.methodDescriptorBulkRemoveUserMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/BulkRemoveUserMetadata',
    request,
    metadata || {},
    this.methodDescriptorBulkRemoveUserMetadata);
  }

  methodDescriptorGetHumanProfile = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetHumanProfile',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetHumanProfileRequest,
    zitadel_management_pb.GetHumanProfileResponse,
    (request: zitadel_management_pb.GetHumanProfileRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetHumanProfileResponse.deserializeBinary
  );

  getHumanProfile(
    request: zitadel_management_pb.GetHumanProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetHumanProfileResponse>;

  getHumanProfile(
    request: zitadel_management_pb.GetHumanProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetHumanProfileResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetHumanProfileResponse>;

  getHumanProfile(
    request: zitadel_management_pb.GetHumanProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetHumanProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetHumanProfile',
        request,
        metadata || {},
        this.methodDescriptorGetHumanProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetHumanProfile',
    request,
    metadata || {},
    this.methodDescriptorGetHumanProfile);
  }

  methodDescriptorUpdateHumanProfile = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateHumanProfile',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateHumanProfileRequest,
    zitadel_management_pb.UpdateHumanProfileResponse,
    (request: zitadel_management_pb.UpdateHumanProfileRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateHumanProfileResponse.deserializeBinary
  );

  updateHumanProfile(
    request: zitadel_management_pb.UpdateHumanProfileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateHumanProfileResponse>;

  updateHumanProfile(
    request: zitadel_management_pb.UpdateHumanProfileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateHumanProfileResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateHumanProfileResponse>;

  updateHumanProfile(
    request: zitadel_management_pb.UpdateHumanProfileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateHumanProfileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateHumanProfile',
        request,
        metadata || {},
        this.methodDescriptorUpdateHumanProfile,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateHumanProfile',
    request,
    metadata || {},
    this.methodDescriptorUpdateHumanProfile);
  }

  methodDescriptorGetHumanEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetHumanEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetHumanEmailRequest,
    zitadel_management_pb.GetHumanEmailResponse,
    (request: zitadel_management_pb.GetHumanEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetHumanEmailResponse.deserializeBinary
  );

  getHumanEmail(
    request: zitadel_management_pb.GetHumanEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetHumanEmailResponse>;

  getHumanEmail(
    request: zitadel_management_pb.GetHumanEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetHumanEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetHumanEmailResponse>;

  getHumanEmail(
    request: zitadel_management_pb.GetHumanEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetHumanEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetHumanEmail',
        request,
        metadata || {},
        this.methodDescriptorGetHumanEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetHumanEmail',
    request,
    metadata || {},
    this.methodDescriptorGetHumanEmail);
  }

  methodDescriptorUpdateHumanEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateHumanEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateHumanEmailRequest,
    zitadel_management_pb.UpdateHumanEmailResponse,
    (request: zitadel_management_pb.UpdateHumanEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateHumanEmailResponse.deserializeBinary
  );

  updateHumanEmail(
    request: zitadel_management_pb.UpdateHumanEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateHumanEmailResponse>;

  updateHumanEmail(
    request: zitadel_management_pb.UpdateHumanEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateHumanEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateHumanEmailResponse>;

  updateHumanEmail(
    request: zitadel_management_pb.UpdateHumanEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateHumanEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateHumanEmail',
        request,
        metadata || {},
        this.methodDescriptorUpdateHumanEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateHumanEmail',
    request,
    metadata || {},
    this.methodDescriptorUpdateHumanEmail);
  }

  methodDescriptorResendHumanInitialization = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResendHumanInitialization',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResendHumanInitializationRequest,
    zitadel_management_pb.ResendHumanInitializationResponse,
    (request: zitadel_management_pb.ResendHumanInitializationRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResendHumanInitializationResponse.deserializeBinary
  );

  resendHumanInitialization(
    request: zitadel_management_pb.ResendHumanInitializationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResendHumanInitializationResponse>;

  resendHumanInitialization(
    request: zitadel_management_pb.ResendHumanInitializationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResendHumanInitializationResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResendHumanInitializationResponse>;

  resendHumanInitialization(
    request: zitadel_management_pb.ResendHumanInitializationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResendHumanInitializationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResendHumanInitialization',
        request,
        metadata || {},
        this.methodDescriptorResendHumanInitialization,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResendHumanInitialization',
    request,
    metadata || {},
    this.methodDescriptorResendHumanInitialization);
  }

  methodDescriptorResendHumanEmailVerification = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResendHumanEmailVerification',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResendHumanEmailVerificationRequest,
    zitadel_management_pb.ResendHumanEmailVerificationResponse,
    (request: zitadel_management_pb.ResendHumanEmailVerificationRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResendHumanEmailVerificationResponse.deserializeBinary
  );

  resendHumanEmailVerification(
    request: zitadel_management_pb.ResendHumanEmailVerificationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResendHumanEmailVerificationResponse>;

  resendHumanEmailVerification(
    request: zitadel_management_pb.ResendHumanEmailVerificationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResendHumanEmailVerificationResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResendHumanEmailVerificationResponse>;

  resendHumanEmailVerification(
    request: zitadel_management_pb.ResendHumanEmailVerificationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResendHumanEmailVerificationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResendHumanEmailVerification',
        request,
        metadata || {},
        this.methodDescriptorResendHumanEmailVerification,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResendHumanEmailVerification',
    request,
    metadata || {},
    this.methodDescriptorResendHumanEmailVerification);
  }

  methodDescriptorGetHumanPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetHumanPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetHumanPhoneRequest,
    zitadel_management_pb.GetHumanPhoneResponse,
    (request: zitadel_management_pb.GetHumanPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetHumanPhoneResponse.deserializeBinary
  );

  getHumanPhone(
    request: zitadel_management_pb.GetHumanPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetHumanPhoneResponse>;

  getHumanPhone(
    request: zitadel_management_pb.GetHumanPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetHumanPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetHumanPhoneResponse>;

  getHumanPhone(
    request: zitadel_management_pb.GetHumanPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetHumanPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetHumanPhone',
        request,
        metadata || {},
        this.methodDescriptorGetHumanPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetHumanPhone',
    request,
    metadata || {},
    this.methodDescriptorGetHumanPhone);
  }

  methodDescriptorUpdateHumanPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateHumanPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateHumanPhoneRequest,
    zitadel_management_pb.UpdateHumanPhoneResponse,
    (request: zitadel_management_pb.UpdateHumanPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateHumanPhoneResponse.deserializeBinary
  );

  updateHumanPhone(
    request: zitadel_management_pb.UpdateHumanPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateHumanPhoneResponse>;

  updateHumanPhone(
    request: zitadel_management_pb.UpdateHumanPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateHumanPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateHumanPhoneResponse>;

  updateHumanPhone(
    request: zitadel_management_pb.UpdateHumanPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateHumanPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateHumanPhone',
        request,
        metadata || {},
        this.methodDescriptorUpdateHumanPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateHumanPhone',
    request,
    metadata || {},
    this.methodDescriptorUpdateHumanPhone);
  }

  methodDescriptorRemoveHumanPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveHumanPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveHumanPhoneRequest,
    zitadel_management_pb.RemoveHumanPhoneResponse,
    (request: zitadel_management_pb.RemoveHumanPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveHumanPhoneResponse.deserializeBinary
  );

  removeHumanPhone(
    request: zitadel_management_pb.RemoveHumanPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveHumanPhoneResponse>;

  removeHumanPhone(
    request: zitadel_management_pb.RemoveHumanPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveHumanPhoneResponse>;

  removeHumanPhone(
    request: zitadel_management_pb.RemoveHumanPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveHumanPhone',
        request,
        metadata || {},
        this.methodDescriptorRemoveHumanPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveHumanPhone',
    request,
    metadata || {},
    this.methodDescriptorRemoveHumanPhone);
  }

  methodDescriptorResendHumanPhoneVerification = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResendHumanPhoneVerification',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResendHumanPhoneVerificationRequest,
    zitadel_management_pb.ResendHumanPhoneVerificationResponse,
    (request: zitadel_management_pb.ResendHumanPhoneVerificationRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResendHumanPhoneVerificationResponse.deserializeBinary
  );

  resendHumanPhoneVerification(
    request: zitadel_management_pb.ResendHumanPhoneVerificationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResendHumanPhoneVerificationResponse>;

  resendHumanPhoneVerification(
    request: zitadel_management_pb.ResendHumanPhoneVerificationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResendHumanPhoneVerificationResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResendHumanPhoneVerificationResponse>;

  resendHumanPhoneVerification(
    request: zitadel_management_pb.ResendHumanPhoneVerificationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResendHumanPhoneVerificationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResendHumanPhoneVerification',
        request,
        metadata || {},
        this.methodDescriptorResendHumanPhoneVerification,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResendHumanPhoneVerification',
    request,
    metadata || {},
    this.methodDescriptorResendHumanPhoneVerification);
  }

  methodDescriptorRemoveHumanAvatar = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveHumanAvatar',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveHumanAvatarRequest,
    zitadel_management_pb.RemoveHumanAvatarResponse,
    (request: zitadel_management_pb.RemoveHumanAvatarRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveHumanAvatarResponse.deserializeBinary
  );

  removeHumanAvatar(
    request: zitadel_management_pb.RemoveHumanAvatarRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveHumanAvatarResponse>;

  removeHumanAvatar(
    request: zitadel_management_pb.RemoveHumanAvatarRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAvatarResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveHumanAvatarResponse>;

  removeHumanAvatar(
    request: zitadel_management_pb.RemoveHumanAvatarRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAvatarResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveHumanAvatar',
        request,
        metadata || {},
        this.methodDescriptorRemoveHumanAvatar,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveHumanAvatar',
    request,
    metadata || {},
    this.methodDescriptorRemoveHumanAvatar);
  }

  methodDescriptorSetHumanInitialPassword = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetHumanInitialPassword',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetHumanInitialPasswordRequest,
    zitadel_management_pb.SetHumanInitialPasswordResponse,
    (request: zitadel_management_pb.SetHumanInitialPasswordRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetHumanInitialPasswordResponse.deserializeBinary
  );

  setHumanInitialPassword(
    request: zitadel_management_pb.SetHumanInitialPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetHumanInitialPasswordResponse>;

  setHumanInitialPassword(
    request: zitadel_management_pb.SetHumanInitialPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetHumanInitialPasswordResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetHumanInitialPasswordResponse>;

  setHumanInitialPassword(
    request: zitadel_management_pb.SetHumanInitialPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetHumanInitialPasswordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetHumanInitialPassword',
        request,
        metadata || {},
        this.methodDescriptorSetHumanInitialPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetHumanInitialPassword',
    request,
    metadata || {},
    this.methodDescriptorSetHumanInitialPassword);
  }

  methodDescriptorSetHumanPassword = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetHumanPassword',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetHumanPasswordRequest,
    zitadel_management_pb.SetHumanPasswordResponse,
    (request: zitadel_management_pb.SetHumanPasswordRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetHumanPasswordResponse.deserializeBinary
  );

  setHumanPassword(
    request: zitadel_management_pb.SetHumanPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetHumanPasswordResponse>;

  setHumanPassword(
    request: zitadel_management_pb.SetHumanPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetHumanPasswordResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetHumanPasswordResponse>;

  setHumanPassword(
    request: zitadel_management_pb.SetHumanPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetHumanPasswordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetHumanPassword',
        request,
        metadata || {},
        this.methodDescriptorSetHumanPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetHumanPassword',
    request,
    metadata || {},
    this.methodDescriptorSetHumanPassword);
  }

  methodDescriptorSendHumanResetPasswordNotification = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SendHumanResetPasswordNotification',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SendHumanResetPasswordNotificationRequest,
    zitadel_management_pb.SendHumanResetPasswordNotificationResponse,
    (request: zitadel_management_pb.SendHumanResetPasswordNotificationRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SendHumanResetPasswordNotificationResponse.deserializeBinary
  );

  sendHumanResetPasswordNotification(
    request: zitadel_management_pb.SendHumanResetPasswordNotificationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SendHumanResetPasswordNotificationResponse>;

  sendHumanResetPasswordNotification(
    request: zitadel_management_pb.SendHumanResetPasswordNotificationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SendHumanResetPasswordNotificationResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SendHumanResetPasswordNotificationResponse>;

  sendHumanResetPasswordNotification(
    request: zitadel_management_pb.SendHumanResetPasswordNotificationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SendHumanResetPasswordNotificationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SendHumanResetPasswordNotification',
        request,
        metadata || {},
        this.methodDescriptorSendHumanResetPasswordNotification,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SendHumanResetPasswordNotification',
    request,
    metadata || {},
    this.methodDescriptorSendHumanResetPasswordNotification);
  }

  methodDescriptorListHumanAuthFactors = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListHumanAuthFactors',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListHumanAuthFactorsRequest,
    zitadel_management_pb.ListHumanAuthFactorsResponse,
    (request: zitadel_management_pb.ListHumanAuthFactorsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListHumanAuthFactorsResponse.deserializeBinary
  );

  listHumanAuthFactors(
    request: zitadel_management_pb.ListHumanAuthFactorsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListHumanAuthFactorsResponse>;

  listHumanAuthFactors(
    request: zitadel_management_pb.ListHumanAuthFactorsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListHumanAuthFactorsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListHumanAuthFactorsResponse>;

  listHumanAuthFactors(
    request: zitadel_management_pb.ListHumanAuthFactorsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListHumanAuthFactorsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListHumanAuthFactors',
        request,
        metadata || {},
        this.methodDescriptorListHumanAuthFactors,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListHumanAuthFactors',
    request,
    metadata || {},
    this.methodDescriptorListHumanAuthFactors);
  }

  methodDescriptorRemoveHumanAuthFactorOTP = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTP',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveHumanAuthFactorOTPRequest,
    zitadel_management_pb.RemoveHumanAuthFactorOTPResponse,
    (request: zitadel_management_pb.RemoveHumanAuthFactorOTPRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveHumanAuthFactorOTPResponse.deserializeBinary
  );

  removeHumanAuthFactorOTP(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveHumanAuthFactorOTPResponse>;

  removeHumanAuthFactorOTP(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAuthFactorOTPResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveHumanAuthFactorOTPResponse>;

  removeHumanAuthFactorOTP(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAuthFactorOTPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTP',
        request,
        metadata || {},
        this.methodDescriptorRemoveHumanAuthFactorOTP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTP',
    request,
    metadata || {},
    this.methodDescriptorRemoveHumanAuthFactorOTP);
  }

  methodDescriptorRemoveHumanAuthFactorU2F = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorU2F',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveHumanAuthFactorU2FRequest,
    zitadel_management_pb.RemoveHumanAuthFactorU2FResponse,
    (request: zitadel_management_pb.RemoveHumanAuthFactorU2FRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveHumanAuthFactorU2FResponse.deserializeBinary
  );

  removeHumanAuthFactorU2F(
    request: zitadel_management_pb.RemoveHumanAuthFactorU2FRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveHumanAuthFactorU2FResponse>;

  removeHumanAuthFactorU2F(
    request: zitadel_management_pb.RemoveHumanAuthFactorU2FRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAuthFactorU2FResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveHumanAuthFactorU2FResponse>;

  removeHumanAuthFactorU2F(
    request: zitadel_management_pb.RemoveHumanAuthFactorU2FRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAuthFactorU2FResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorU2F',
        request,
        metadata || {},
        this.methodDescriptorRemoveHumanAuthFactorU2F,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorU2F',
    request,
    metadata || {},
    this.methodDescriptorRemoveHumanAuthFactorU2F);
  }

  methodDescriptorRemoveHumanAuthFactorOTPSMS = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTPSMS',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveHumanAuthFactorOTPSMSRequest,
    zitadel_management_pb.RemoveHumanAuthFactorOTPSMSResponse,
    (request: zitadel_management_pb.RemoveHumanAuthFactorOTPSMSRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveHumanAuthFactorOTPSMSResponse.deserializeBinary
  );

  removeHumanAuthFactorOTPSMS(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveHumanAuthFactorOTPSMSResponse>;

  removeHumanAuthFactorOTPSMS(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPSMSRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAuthFactorOTPSMSResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveHumanAuthFactorOTPSMSResponse>;

  removeHumanAuthFactorOTPSMS(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAuthFactorOTPSMSResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTPSMS',
        request,
        metadata || {},
        this.methodDescriptorRemoveHumanAuthFactorOTPSMS,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTPSMS',
    request,
    metadata || {},
    this.methodDescriptorRemoveHumanAuthFactorOTPSMS);
  }

  methodDescriptorRemoveHumanAuthFactorOTPEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTPEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveHumanAuthFactorOTPEmailRequest,
    zitadel_management_pb.RemoveHumanAuthFactorOTPEmailResponse,
    (request: zitadel_management_pb.RemoveHumanAuthFactorOTPEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveHumanAuthFactorOTPEmailResponse.deserializeBinary
  );

  removeHumanAuthFactorOTPEmail(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveHumanAuthFactorOTPEmailResponse>;

  removeHumanAuthFactorOTPEmail(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAuthFactorOTPEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveHumanAuthFactorOTPEmailResponse>;

  removeHumanAuthFactorOTPEmail(
    request: zitadel_management_pb.RemoveHumanAuthFactorOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanAuthFactorOTPEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTPEmail',
        request,
        metadata || {},
        this.methodDescriptorRemoveHumanAuthFactorOTPEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveHumanAuthFactorOTPEmail',
    request,
    metadata || {},
    this.methodDescriptorRemoveHumanAuthFactorOTPEmail);
  }

  methodDescriptorListHumanPasswordless = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListHumanPasswordless',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListHumanPasswordlessRequest,
    zitadel_management_pb.ListHumanPasswordlessResponse,
    (request: zitadel_management_pb.ListHumanPasswordlessRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListHumanPasswordlessResponse.deserializeBinary
  );

  listHumanPasswordless(
    request: zitadel_management_pb.ListHumanPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListHumanPasswordlessResponse>;

  listHumanPasswordless(
    request: zitadel_management_pb.ListHumanPasswordlessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListHumanPasswordlessResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListHumanPasswordlessResponse>;

  listHumanPasswordless(
    request: zitadel_management_pb.ListHumanPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListHumanPasswordlessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListHumanPasswordless',
        request,
        metadata || {},
        this.methodDescriptorListHumanPasswordless,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListHumanPasswordless',
    request,
    metadata || {},
    this.methodDescriptorListHumanPasswordless);
  }

  methodDescriptorAddPasswordlessRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddPasswordlessRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddPasswordlessRegistrationRequest,
    zitadel_management_pb.AddPasswordlessRegistrationResponse,
    (request: zitadel_management_pb.AddPasswordlessRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddPasswordlessRegistrationResponse.deserializeBinary
  );

  addPasswordlessRegistration(
    request: zitadel_management_pb.AddPasswordlessRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddPasswordlessRegistrationResponse>;

  addPasswordlessRegistration(
    request: zitadel_management_pb.AddPasswordlessRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddPasswordlessRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddPasswordlessRegistrationResponse>;

  addPasswordlessRegistration(
    request: zitadel_management_pb.AddPasswordlessRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddPasswordlessRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddPasswordlessRegistration',
        request,
        metadata || {},
        this.methodDescriptorAddPasswordlessRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddPasswordlessRegistration',
    request,
    metadata || {},
    this.methodDescriptorAddPasswordlessRegistration);
  }

  methodDescriptorSendPasswordlessRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SendPasswordlessRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SendPasswordlessRegistrationRequest,
    zitadel_management_pb.SendPasswordlessRegistrationResponse,
    (request: zitadel_management_pb.SendPasswordlessRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SendPasswordlessRegistrationResponse.deserializeBinary
  );

  sendPasswordlessRegistration(
    request: zitadel_management_pb.SendPasswordlessRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SendPasswordlessRegistrationResponse>;

  sendPasswordlessRegistration(
    request: zitadel_management_pb.SendPasswordlessRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SendPasswordlessRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SendPasswordlessRegistrationResponse>;

  sendPasswordlessRegistration(
    request: zitadel_management_pb.SendPasswordlessRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SendPasswordlessRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SendPasswordlessRegistration',
        request,
        metadata || {},
        this.methodDescriptorSendPasswordlessRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SendPasswordlessRegistration',
    request,
    metadata || {},
    this.methodDescriptorSendPasswordlessRegistration);
  }

  methodDescriptorRemoveHumanPasswordless = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveHumanPasswordless',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveHumanPasswordlessRequest,
    zitadel_management_pb.RemoveHumanPasswordlessResponse,
    (request: zitadel_management_pb.RemoveHumanPasswordlessRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveHumanPasswordlessResponse.deserializeBinary
  );

  removeHumanPasswordless(
    request: zitadel_management_pb.RemoveHumanPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveHumanPasswordlessResponse>;

  removeHumanPasswordless(
    request: zitadel_management_pb.RemoveHumanPasswordlessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanPasswordlessResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveHumanPasswordlessResponse>;

  removeHumanPasswordless(
    request: zitadel_management_pb.RemoveHumanPasswordlessRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanPasswordlessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveHumanPasswordless',
        request,
        metadata || {},
        this.methodDescriptorRemoveHumanPasswordless,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveHumanPasswordless',
    request,
    metadata || {},
    this.methodDescriptorRemoveHumanPasswordless);
  }

  methodDescriptorUpdateMachine = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateMachine',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateMachineRequest,
    zitadel_management_pb.UpdateMachineResponse,
    (request: zitadel_management_pb.UpdateMachineRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateMachineResponse.deserializeBinary
  );

  updateMachine(
    request: zitadel_management_pb.UpdateMachineRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateMachineResponse>;

  updateMachine(
    request: zitadel_management_pb.UpdateMachineRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateMachineResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateMachineResponse>;

  updateMachine(
    request: zitadel_management_pb.UpdateMachineRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateMachineResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateMachine',
        request,
        metadata || {},
        this.methodDescriptorUpdateMachine,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateMachine',
    request,
    metadata || {},
    this.methodDescriptorUpdateMachine);
  }

  methodDescriptorGenerateMachineSecret = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GenerateMachineSecret',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GenerateMachineSecretRequest,
    zitadel_management_pb.GenerateMachineSecretResponse,
    (request: zitadel_management_pb.GenerateMachineSecretRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GenerateMachineSecretResponse.deserializeBinary
  );

  generateMachineSecret(
    request: zitadel_management_pb.GenerateMachineSecretRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GenerateMachineSecretResponse>;

  generateMachineSecret(
    request: zitadel_management_pb.GenerateMachineSecretRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GenerateMachineSecretResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GenerateMachineSecretResponse>;

  generateMachineSecret(
    request: zitadel_management_pb.GenerateMachineSecretRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GenerateMachineSecretResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GenerateMachineSecret',
        request,
        metadata || {},
        this.methodDescriptorGenerateMachineSecret,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GenerateMachineSecret',
    request,
    metadata || {},
    this.methodDescriptorGenerateMachineSecret);
  }

  methodDescriptorRemoveMachineSecret = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveMachineSecret',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveMachineSecretRequest,
    zitadel_management_pb.RemoveMachineSecretResponse,
    (request: zitadel_management_pb.RemoveMachineSecretRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveMachineSecretResponse.deserializeBinary
  );

  removeMachineSecret(
    request: zitadel_management_pb.RemoveMachineSecretRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveMachineSecretResponse>;

  removeMachineSecret(
    request: zitadel_management_pb.RemoveMachineSecretRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveMachineSecretResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveMachineSecretResponse>;

  removeMachineSecret(
    request: zitadel_management_pb.RemoveMachineSecretRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveMachineSecretResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveMachineSecret',
        request,
        metadata || {},
        this.methodDescriptorRemoveMachineSecret,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveMachineSecret',
    request,
    metadata || {},
    this.methodDescriptorRemoveMachineSecret);
  }

  methodDescriptorGetMachineKeyByIDs = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetMachineKeyByIDs',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetMachineKeyByIDsRequest,
    zitadel_management_pb.GetMachineKeyByIDsResponse,
    (request: zitadel_management_pb.GetMachineKeyByIDsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetMachineKeyByIDsResponse.deserializeBinary
  );

  getMachineKeyByIDs(
    request: zitadel_management_pb.GetMachineKeyByIDsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetMachineKeyByIDsResponse>;

  getMachineKeyByIDs(
    request: zitadel_management_pb.GetMachineKeyByIDsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetMachineKeyByIDsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetMachineKeyByIDsResponse>;

  getMachineKeyByIDs(
    request: zitadel_management_pb.GetMachineKeyByIDsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetMachineKeyByIDsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetMachineKeyByIDs',
        request,
        metadata || {},
        this.methodDescriptorGetMachineKeyByIDs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetMachineKeyByIDs',
    request,
    metadata || {},
    this.methodDescriptorGetMachineKeyByIDs);
  }

  methodDescriptorListMachineKeys = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListMachineKeys',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListMachineKeysRequest,
    zitadel_management_pb.ListMachineKeysResponse,
    (request: zitadel_management_pb.ListMachineKeysRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListMachineKeysResponse.deserializeBinary
  );

  listMachineKeys(
    request: zitadel_management_pb.ListMachineKeysRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListMachineKeysResponse>;

  listMachineKeys(
    request: zitadel_management_pb.ListMachineKeysRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListMachineKeysResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListMachineKeysResponse>;

  listMachineKeys(
    request: zitadel_management_pb.ListMachineKeysRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListMachineKeysResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListMachineKeys',
        request,
        metadata || {},
        this.methodDescriptorListMachineKeys,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListMachineKeys',
    request,
    metadata || {},
    this.methodDescriptorListMachineKeys);
  }

  methodDescriptorAddMachineKey = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddMachineKey',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddMachineKeyRequest,
    zitadel_management_pb.AddMachineKeyResponse,
    (request: zitadel_management_pb.AddMachineKeyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddMachineKeyResponse.deserializeBinary
  );

  addMachineKey(
    request: zitadel_management_pb.AddMachineKeyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddMachineKeyResponse>;

  addMachineKey(
    request: zitadel_management_pb.AddMachineKeyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddMachineKeyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddMachineKeyResponse>;

  addMachineKey(
    request: zitadel_management_pb.AddMachineKeyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddMachineKeyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddMachineKey',
        request,
        metadata || {},
        this.methodDescriptorAddMachineKey,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddMachineKey',
    request,
    metadata || {},
    this.methodDescriptorAddMachineKey);
  }

  methodDescriptorRemoveMachineKey = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveMachineKey',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveMachineKeyRequest,
    zitadel_management_pb.RemoveMachineKeyResponse,
    (request: zitadel_management_pb.RemoveMachineKeyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveMachineKeyResponse.deserializeBinary
  );

  removeMachineKey(
    request: zitadel_management_pb.RemoveMachineKeyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveMachineKeyResponse>;

  removeMachineKey(
    request: zitadel_management_pb.RemoveMachineKeyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveMachineKeyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveMachineKeyResponse>;

  removeMachineKey(
    request: zitadel_management_pb.RemoveMachineKeyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveMachineKeyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveMachineKey',
        request,
        metadata || {},
        this.methodDescriptorRemoveMachineKey,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveMachineKey',
    request,
    metadata || {},
    this.methodDescriptorRemoveMachineKey);
  }

  methodDescriptorGetPersonalAccessTokenByIDs = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetPersonalAccessTokenByIDs',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetPersonalAccessTokenByIDsRequest,
    zitadel_management_pb.GetPersonalAccessTokenByIDsResponse,
    (request: zitadel_management_pb.GetPersonalAccessTokenByIDsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetPersonalAccessTokenByIDsResponse.deserializeBinary
  );

  getPersonalAccessTokenByIDs(
    request: zitadel_management_pb.GetPersonalAccessTokenByIDsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetPersonalAccessTokenByIDsResponse>;

  getPersonalAccessTokenByIDs(
    request: zitadel_management_pb.GetPersonalAccessTokenByIDsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPersonalAccessTokenByIDsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetPersonalAccessTokenByIDsResponse>;

  getPersonalAccessTokenByIDs(
    request: zitadel_management_pb.GetPersonalAccessTokenByIDsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPersonalAccessTokenByIDsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetPersonalAccessTokenByIDs',
        request,
        metadata || {},
        this.methodDescriptorGetPersonalAccessTokenByIDs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetPersonalAccessTokenByIDs',
    request,
    metadata || {},
    this.methodDescriptorGetPersonalAccessTokenByIDs);
  }

  methodDescriptorListPersonalAccessTokens = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListPersonalAccessTokens',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListPersonalAccessTokensRequest,
    zitadel_management_pb.ListPersonalAccessTokensResponse,
    (request: zitadel_management_pb.ListPersonalAccessTokensRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListPersonalAccessTokensResponse.deserializeBinary
  );

  listPersonalAccessTokens(
    request: zitadel_management_pb.ListPersonalAccessTokensRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListPersonalAccessTokensResponse>;

  listPersonalAccessTokens(
    request: zitadel_management_pb.ListPersonalAccessTokensRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListPersonalAccessTokensResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListPersonalAccessTokensResponse>;

  listPersonalAccessTokens(
    request: zitadel_management_pb.ListPersonalAccessTokensRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListPersonalAccessTokensResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListPersonalAccessTokens',
        request,
        metadata || {},
        this.methodDescriptorListPersonalAccessTokens,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListPersonalAccessTokens',
    request,
    metadata || {},
    this.methodDescriptorListPersonalAccessTokens);
  }

  methodDescriptorAddPersonalAccessToken = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddPersonalAccessToken',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddPersonalAccessTokenRequest,
    zitadel_management_pb.AddPersonalAccessTokenResponse,
    (request: zitadel_management_pb.AddPersonalAccessTokenRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddPersonalAccessTokenResponse.deserializeBinary
  );

  addPersonalAccessToken(
    request: zitadel_management_pb.AddPersonalAccessTokenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddPersonalAccessTokenResponse>;

  addPersonalAccessToken(
    request: zitadel_management_pb.AddPersonalAccessTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddPersonalAccessTokenResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddPersonalAccessTokenResponse>;

  addPersonalAccessToken(
    request: zitadel_management_pb.AddPersonalAccessTokenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddPersonalAccessTokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddPersonalAccessToken',
        request,
        metadata || {},
        this.methodDescriptorAddPersonalAccessToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddPersonalAccessToken',
    request,
    metadata || {},
    this.methodDescriptorAddPersonalAccessToken);
  }

  methodDescriptorRemovePersonalAccessToken = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemovePersonalAccessToken',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemovePersonalAccessTokenRequest,
    zitadel_management_pb.RemovePersonalAccessTokenResponse,
    (request: zitadel_management_pb.RemovePersonalAccessTokenRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemovePersonalAccessTokenResponse.deserializeBinary
  );

  removePersonalAccessToken(
    request: zitadel_management_pb.RemovePersonalAccessTokenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemovePersonalAccessTokenResponse>;

  removePersonalAccessToken(
    request: zitadel_management_pb.RemovePersonalAccessTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemovePersonalAccessTokenResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemovePersonalAccessTokenResponse>;

  removePersonalAccessToken(
    request: zitadel_management_pb.RemovePersonalAccessTokenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemovePersonalAccessTokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemovePersonalAccessToken',
        request,
        metadata || {},
        this.methodDescriptorRemovePersonalAccessToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemovePersonalAccessToken',
    request,
    metadata || {},
    this.methodDescriptorRemovePersonalAccessToken);
  }

  methodDescriptorListHumanLinkedIDPs = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListHumanLinkedIDPs',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListHumanLinkedIDPsRequest,
    zitadel_management_pb.ListHumanLinkedIDPsResponse,
    (request: zitadel_management_pb.ListHumanLinkedIDPsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListHumanLinkedIDPsResponse.deserializeBinary
  );

  listHumanLinkedIDPs(
    request: zitadel_management_pb.ListHumanLinkedIDPsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListHumanLinkedIDPsResponse>;

  listHumanLinkedIDPs(
    request: zitadel_management_pb.ListHumanLinkedIDPsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListHumanLinkedIDPsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListHumanLinkedIDPsResponse>;

  listHumanLinkedIDPs(
    request: zitadel_management_pb.ListHumanLinkedIDPsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListHumanLinkedIDPsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListHumanLinkedIDPs',
        request,
        metadata || {},
        this.methodDescriptorListHumanLinkedIDPs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListHumanLinkedIDPs',
    request,
    metadata || {},
    this.methodDescriptorListHumanLinkedIDPs);
  }

  methodDescriptorRemoveHumanLinkedIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveHumanLinkedIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveHumanLinkedIDPRequest,
    zitadel_management_pb.RemoveHumanLinkedIDPResponse,
    (request: zitadel_management_pb.RemoveHumanLinkedIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveHumanLinkedIDPResponse.deserializeBinary
  );

  removeHumanLinkedIDP(
    request: zitadel_management_pb.RemoveHumanLinkedIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveHumanLinkedIDPResponse>;

  removeHumanLinkedIDP(
    request: zitadel_management_pb.RemoveHumanLinkedIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanLinkedIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveHumanLinkedIDPResponse>;

  removeHumanLinkedIDP(
    request: zitadel_management_pb.RemoveHumanLinkedIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveHumanLinkedIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveHumanLinkedIDP',
        request,
        metadata || {},
        this.methodDescriptorRemoveHumanLinkedIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveHumanLinkedIDP',
    request,
    metadata || {},
    this.methodDescriptorRemoveHumanLinkedIDP);
  }

  methodDescriptorListUserMemberships = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListUserMemberships',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListUserMembershipsRequest,
    zitadel_management_pb.ListUserMembershipsResponse,
    (request: zitadel_management_pb.ListUserMembershipsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListUserMembershipsResponse.deserializeBinary
  );

  listUserMemberships(
    request: zitadel_management_pb.ListUserMembershipsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListUserMembershipsResponse>;

  listUserMemberships(
    request: zitadel_management_pb.ListUserMembershipsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUserMembershipsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListUserMembershipsResponse>;

  listUserMemberships(
    request: zitadel_management_pb.ListUserMembershipsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUserMembershipsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListUserMemberships',
        request,
        metadata || {},
        this.methodDescriptorListUserMemberships,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListUserMemberships',
    request,
    metadata || {},
    this.methodDescriptorListUserMemberships);
  }

  methodDescriptorGetMyOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetMyOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetMyOrgRequest,
    zitadel_management_pb.GetMyOrgResponse,
    (request: zitadel_management_pb.GetMyOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetMyOrgResponse.deserializeBinary
  );

  getMyOrg(
    request: zitadel_management_pb.GetMyOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetMyOrgResponse>;

  getMyOrg(
    request: zitadel_management_pb.GetMyOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetMyOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetMyOrgResponse>;

  getMyOrg(
    request: zitadel_management_pb.GetMyOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetMyOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetMyOrg',
        request,
        metadata || {},
        this.methodDescriptorGetMyOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetMyOrg',
    request,
    metadata || {},
    this.methodDescriptorGetMyOrg);
  }

  methodDescriptorGetOrgByDomainGlobal = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetOrgByDomainGlobal',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetOrgByDomainGlobalRequest,
    zitadel_management_pb.GetOrgByDomainGlobalResponse,
    (request: zitadel_management_pb.GetOrgByDomainGlobalRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetOrgByDomainGlobalResponse.deserializeBinary
  );

  getOrgByDomainGlobal(
    request: zitadel_management_pb.GetOrgByDomainGlobalRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetOrgByDomainGlobalResponse>;

  getOrgByDomainGlobal(
    request: zitadel_management_pb.GetOrgByDomainGlobalRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOrgByDomainGlobalResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetOrgByDomainGlobalResponse>;

  getOrgByDomainGlobal(
    request: zitadel_management_pb.GetOrgByDomainGlobalRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOrgByDomainGlobalResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetOrgByDomainGlobal',
        request,
        metadata || {},
        this.methodDescriptorGetOrgByDomainGlobal,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetOrgByDomainGlobal',
    request,
    metadata || {},
    this.methodDescriptorGetOrgByDomainGlobal);
  }

  methodDescriptorListOrgChanges = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListOrgChanges',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListOrgChangesRequest,
    zitadel_management_pb.ListOrgChangesResponse,
    (request: zitadel_management_pb.ListOrgChangesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListOrgChangesResponse.deserializeBinary
  );

  listOrgChanges(
    request: zitadel_management_pb.ListOrgChangesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListOrgChangesResponse>;

  listOrgChanges(
    request: zitadel_management_pb.ListOrgChangesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgChangesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListOrgChangesResponse>;

  listOrgChanges(
    request: zitadel_management_pb.ListOrgChangesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgChangesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListOrgChanges',
        request,
        metadata || {},
        this.methodDescriptorListOrgChanges,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListOrgChanges',
    request,
    metadata || {},
    this.methodDescriptorListOrgChanges);
  }

  methodDescriptorAddOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddOrgRequest,
    zitadel_management_pb.AddOrgResponse,
    (request: zitadel_management_pb.AddOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddOrgResponse.deserializeBinary
  );

  addOrg(
    request: zitadel_management_pb.AddOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddOrgResponse>;

  addOrg(
    request: zitadel_management_pb.AddOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddOrgResponse>;

  addOrg(
    request: zitadel_management_pb.AddOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddOrg',
        request,
        metadata || {},
        this.methodDescriptorAddOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddOrg',
    request,
    metadata || {},
    this.methodDescriptorAddOrg);
  }

  methodDescriptorUpdateOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateOrgRequest,
    zitadel_management_pb.UpdateOrgResponse,
    (request: zitadel_management_pb.UpdateOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateOrgResponse.deserializeBinary
  );

  updateOrg(
    request: zitadel_management_pb.UpdateOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateOrgResponse>;

  updateOrg(
    request: zitadel_management_pb.UpdateOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateOrgResponse>;

  updateOrg(
    request: zitadel_management_pb.UpdateOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateOrg',
        request,
        metadata || {},
        this.methodDescriptorUpdateOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateOrg',
    request,
    metadata || {},
    this.methodDescriptorUpdateOrg);
  }

  methodDescriptorDeactivateOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeactivateOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeactivateOrgRequest,
    zitadel_management_pb.DeactivateOrgResponse,
    (request: zitadel_management_pb.DeactivateOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeactivateOrgResponse.deserializeBinary
  );

  deactivateOrg(
    request: zitadel_management_pb.DeactivateOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeactivateOrgResponse>;

  deactivateOrg(
    request: zitadel_management_pb.DeactivateOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeactivateOrgResponse>;

  deactivateOrg(
    request: zitadel_management_pb.DeactivateOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeactivateOrg',
        request,
        metadata || {},
        this.methodDescriptorDeactivateOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeactivateOrg',
    request,
    metadata || {},
    this.methodDescriptorDeactivateOrg);
  }

  methodDescriptorReactivateOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ReactivateOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ReactivateOrgRequest,
    zitadel_management_pb.ReactivateOrgResponse,
    (request: zitadel_management_pb.ReactivateOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ReactivateOrgResponse.deserializeBinary
  );

  reactivateOrg(
    request: zitadel_management_pb.ReactivateOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ReactivateOrgResponse>;

  reactivateOrg(
    request: zitadel_management_pb.ReactivateOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ReactivateOrgResponse>;

  reactivateOrg(
    request: zitadel_management_pb.ReactivateOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ReactivateOrg',
        request,
        metadata || {},
        this.methodDescriptorReactivateOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ReactivateOrg',
    request,
    metadata || {},
    this.methodDescriptorReactivateOrg);
  }

  methodDescriptorRemoveOrg = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveOrg',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveOrgRequest,
    zitadel_management_pb.RemoveOrgResponse,
    (request: zitadel_management_pb.RemoveOrgRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveOrgResponse.deserializeBinary
  );

  removeOrg(
    request: zitadel_management_pb.RemoveOrgRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveOrgResponse>;

  removeOrg(
    request: zitadel_management_pb.RemoveOrgRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveOrgResponse>;

  removeOrg(
    request: zitadel_management_pb.RemoveOrgRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveOrg',
        request,
        metadata || {},
        this.methodDescriptorRemoveOrg,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveOrg',
    request,
    metadata || {},
    this.methodDescriptorRemoveOrg);
  }

  methodDescriptorSetOrgMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetOrgMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetOrgMetadataRequest,
    zitadel_management_pb.SetOrgMetadataResponse,
    (request: zitadel_management_pb.SetOrgMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetOrgMetadataResponse.deserializeBinary
  );

  setOrgMetadata(
    request: zitadel_management_pb.SetOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetOrgMetadataResponse>;

  setOrgMetadata(
    request: zitadel_management_pb.SetOrgMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetOrgMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetOrgMetadataResponse>;

  setOrgMetadata(
    request: zitadel_management_pb.SetOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetOrgMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetOrgMetadata',
        request,
        metadata || {},
        this.methodDescriptorSetOrgMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetOrgMetadata',
    request,
    metadata || {},
    this.methodDescriptorSetOrgMetadata);
  }

  methodDescriptorBulkSetOrgMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/BulkSetOrgMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.BulkSetOrgMetadataRequest,
    zitadel_management_pb.BulkSetOrgMetadataResponse,
    (request: zitadel_management_pb.BulkSetOrgMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.BulkSetOrgMetadataResponse.deserializeBinary
  );

  bulkSetOrgMetadata(
    request: zitadel_management_pb.BulkSetOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.BulkSetOrgMetadataResponse>;

  bulkSetOrgMetadata(
    request: zitadel_management_pb.BulkSetOrgMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkSetOrgMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.BulkSetOrgMetadataResponse>;

  bulkSetOrgMetadata(
    request: zitadel_management_pb.BulkSetOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkSetOrgMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/BulkSetOrgMetadata',
        request,
        metadata || {},
        this.methodDescriptorBulkSetOrgMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/BulkSetOrgMetadata',
    request,
    metadata || {},
    this.methodDescriptorBulkSetOrgMetadata);
  }

  methodDescriptorListOrgMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListOrgMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListOrgMetadataRequest,
    zitadel_management_pb.ListOrgMetadataResponse,
    (request: zitadel_management_pb.ListOrgMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListOrgMetadataResponse.deserializeBinary
  );

  listOrgMetadata(
    request: zitadel_management_pb.ListOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListOrgMetadataResponse>;

  listOrgMetadata(
    request: zitadel_management_pb.ListOrgMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListOrgMetadataResponse>;

  listOrgMetadata(
    request: zitadel_management_pb.ListOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListOrgMetadata',
        request,
        metadata || {},
        this.methodDescriptorListOrgMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListOrgMetadata',
    request,
    metadata || {},
    this.methodDescriptorListOrgMetadata);
  }

  methodDescriptorGetOrgMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetOrgMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetOrgMetadataRequest,
    zitadel_management_pb.GetOrgMetadataResponse,
    (request: zitadel_management_pb.GetOrgMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetOrgMetadataResponse.deserializeBinary
  );

  getOrgMetadata(
    request: zitadel_management_pb.GetOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetOrgMetadataResponse>;

  getOrgMetadata(
    request: zitadel_management_pb.GetOrgMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOrgMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetOrgMetadataResponse>;

  getOrgMetadata(
    request: zitadel_management_pb.GetOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOrgMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetOrgMetadata',
        request,
        metadata || {},
        this.methodDescriptorGetOrgMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetOrgMetadata',
    request,
    metadata || {},
    this.methodDescriptorGetOrgMetadata);
  }

  methodDescriptorRemoveOrgMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveOrgMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveOrgMetadataRequest,
    zitadel_management_pb.RemoveOrgMetadataResponse,
    (request: zitadel_management_pb.RemoveOrgMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveOrgMetadataResponse.deserializeBinary
  );

  removeOrgMetadata(
    request: zitadel_management_pb.RemoveOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveOrgMetadataResponse>;

  removeOrgMetadata(
    request: zitadel_management_pb.RemoveOrgMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveOrgMetadataResponse>;

  removeOrgMetadata(
    request: zitadel_management_pb.RemoveOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveOrgMetadata',
        request,
        metadata || {},
        this.methodDescriptorRemoveOrgMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveOrgMetadata',
    request,
    metadata || {},
    this.methodDescriptorRemoveOrgMetadata);
  }

  methodDescriptorBulkRemoveOrgMetadata = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/BulkRemoveOrgMetadata',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.BulkRemoveOrgMetadataRequest,
    zitadel_management_pb.BulkRemoveOrgMetadataResponse,
    (request: zitadel_management_pb.BulkRemoveOrgMetadataRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.BulkRemoveOrgMetadataResponse.deserializeBinary
  );

  bulkRemoveOrgMetadata(
    request: zitadel_management_pb.BulkRemoveOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.BulkRemoveOrgMetadataResponse>;

  bulkRemoveOrgMetadata(
    request: zitadel_management_pb.BulkRemoveOrgMetadataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkRemoveOrgMetadataResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.BulkRemoveOrgMetadataResponse>;

  bulkRemoveOrgMetadata(
    request: zitadel_management_pb.BulkRemoveOrgMetadataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkRemoveOrgMetadataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/BulkRemoveOrgMetadata',
        request,
        metadata || {},
        this.methodDescriptorBulkRemoveOrgMetadata,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/BulkRemoveOrgMetadata',
    request,
    metadata || {},
    this.methodDescriptorBulkRemoveOrgMetadata);
  }

  methodDescriptorListOrgDomains = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListOrgDomains',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListOrgDomainsRequest,
    zitadel_management_pb.ListOrgDomainsResponse,
    (request: zitadel_management_pb.ListOrgDomainsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListOrgDomainsResponse.deserializeBinary
  );

  listOrgDomains(
    request: zitadel_management_pb.ListOrgDomainsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListOrgDomainsResponse>;

  listOrgDomains(
    request: zitadel_management_pb.ListOrgDomainsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgDomainsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListOrgDomainsResponse>;

  listOrgDomains(
    request: zitadel_management_pb.ListOrgDomainsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgDomainsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListOrgDomains',
        request,
        metadata || {},
        this.methodDescriptorListOrgDomains,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListOrgDomains',
    request,
    metadata || {},
    this.methodDescriptorListOrgDomains);
  }

  methodDescriptorAddOrgDomain = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddOrgDomain',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddOrgDomainRequest,
    zitadel_management_pb.AddOrgDomainResponse,
    (request: zitadel_management_pb.AddOrgDomainRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddOrgDomainResponse.deserializeBinary
  );

  addOrgDomain(
    request: zitadel_management_pb.AddOrgDomainRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddOrgDomainResponse>;

  addOrgDomain(
    request: zitadel_management_pb.AddOrgDomainRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgDomainResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddOrgDomainResponse>;

  addOrgDomain(
    request: zitadel_management_pb.AddOrgDomainRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgDomainResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddOrgDomain',
        request,
        metadata || {},
        this.methodDescriptorAddOrgDomain,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddOrgDomain',
    request,
    metadata || {},
    this.methodDescriptorAddOrgDomain);
  }

  methodDescriptorRemoveOrgDomain = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveOrgDomain',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveOrgDomainRequest,
    zitadel_management_pb.RemoveOrgDomainResponse,
    (request: zitadel_management_pb.RemoveOrgDomainRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveOrgDomainResponse.deserializeBinary
  );

  removeOrgDomain(
    request: zitadel_management_pb.RemoveOrgDomainRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveOrgDomainResponse>;

  removeOrgDomain(
    request: zitadel_management_pb.RemoveOrgDomainRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgDomainResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveOrgDomainResponse>;

  removeOrgDomain(
    request: zitadel_management_pb.RemoveOrgDomainRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgDomainResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveOrgDomain',
        request,
        metadata || {},
        this.methodDescriptorRemoveOrgDomain,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveOrgDomain',
    request,
    metadata || {},
    this.methodDescriptorRemoveOrgDomain);
  }

  methodDescriptorGenerateOrgDomainValidation = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GenerateOrgDomainValidation',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GenerateOrgDomainValidationRequest,
    zitadel_management_pb.GenerateOrgDomainValidationResponse,
    (request: zitadel_management_pb.GenerateOrgDomainValidationRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GenerateOrgDomainValidationResponse.deserializeBinary
  );

  generateOrgDomainValidation(
    request: zitadel_management_pb.GenerateOrgDomainValidationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GenerateOrgDomainValidationResponse>;

  generateOrgDomainValidation(
    request: zitadel_management_pb.GenerateOrgDomainValidationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GenerateOrgDomainValidationResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GenerateOrgDomainValidationResponse>;

  generateOrgDomainValidation(
    request: zitadel_management_pb.GenerateOrgDomainValidationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GenerateOrgDomainValidationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GenerateOrgDomainValidation',
        request,
        metadata || {},
        this.methodDescriptorGenerateOrgDomainValidation,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GenerateOrgDomainValidation',
    request,
    metadata || {},
    this.methodDescriptorGenerateOrgDomainValidation);
  }

  methodDescriptorValidateOrgDomain = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ValidateOrgDomain',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ValidateOrgDomainRequest,
    zitadel_management_pb.ValidateOrgDomainResponse,
    (request: zitadel_management_pb.ValidateOrgDomainRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ValidateOrgDomainResponse.deserializeBinary
  );

  validateOrgDomain(
    request: zitadel_management_pb.ValidateOrgDomainRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ValidateOrgDomainResponse>;

  validateOrgDomain(
    request: zitadel_management_pb.ValidateOrgDomainRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ValidateOrgDomainResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ValidateOrgDomainResponse>;

  validateOrgDomain(
    request: zitadel_management_pb.ValidateOrgDomainRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ValidateOrgDomainResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ValidateOrgDomain',
        request,
        metadata || {},
        this.methodDescriptorValidateOrgDomain,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ValidateOrgDomain',
    request,
    metadata || {},
    this.methodDescriptorValidateOrgDomain);
  }

  methodDescriptorSetPrimaryOrgDomain = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetPrimaryOrgDomain',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetPrimaryOrgDomainRequest,
    zitadel_management_pb.SetPrimaryOrgDomainResponse,
    (request: zitadel_management_pb.SetPrimaryOrgDomainRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetPrimaryOrgDomainResponse.deserializeBinary
  );

  setPrimaryOrgDomain(
    request: zitadel_management_pb.SetPrimaryOrgDomainRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetPrimaryOrgDomainResponse>;

  setPrimaryOrgDomain(
    request: zitadel_management_pb.SetPrimaryOrgDomainRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetPrimaryOrgDomainResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetPrimaryOrgDomainResponse>;

  setPrimaryOrgDomain(
    request: zitadel_management_pb.SetPrimaryOrgDomainRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetPrimaryOrgDomainResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetPrimaryOrgDomain',
        request,
        metadata || {},
        this.methodDescriptorSetPrimaryOrgDomain,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetPrimaryOrgDomain',
    request,
    metadata || {},
    this.methodDescriptorSetPrimaryOrgDomain);
  }

  methodDescriptorListOrgMemberRoles = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListOrgMemberRoles',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListOrgMemberRolesRequest,
    zitadel_management_pb.ListOrgMemberRolesResponse,
    (request: zitadel_management_pb.ListOrgMemberRolesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListOrgMemberRolesResponse.deserializeBinary
  );

  listOrgMemberRoles(
    request: zitadel_management_pb.ListOrgMemberRolesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListOrgMemberRolesResponse>;

  listOrgMemberRoles(
    request: zitadel_management_pb.ListOrgMemberRolesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgMemberRolesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListOrgMemberRolesResponse>;

  listOrgMemberRoles(
    request: zitadel_management_pb.ListOrgMemberRolesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgMemberRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListOrgMemberRoles',
        request,
        metadata || {},
        this.methodDescriptorListOrgMemberRoles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListOrgMemberRoles',
    request,
    metadata || {},
    this.methodDescriptorListOrgMemberRoles);
  }

  methodDescriptorListOrgMembers = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListOrgMembers',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListOrgMembersRequest,
    zitadel_management_pb.ListOrgMembersResponse,
    (request: zitadel_management_pb.ListOrgMembersRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListOrgMembersResponse.deserializeBinary
  );

  listOrgMembers(
    request: zitadel_management_pb.ListOrgMembersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListOrgMembersResponse>;

  listOrgMembers(
    request: zitadel_management_pb.ListOrgMembersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgMembersResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListOrgMembersResponse>;

  listOrgMembers(
    request: zitadel_management_pb.ListOrgMembersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgMembersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListOrgMembers',
        request,
        metadata || {},
        this.methodDescriptorListOrgMembers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListOrgMembers',
    request,
    metadata || {},
    this.methodDescriptorListOrgMembers);
  }

  methodDescriptorAddOrgMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddOrgMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddOrgMemberRequest,
    zitadel_management_pb.AddOrgMemberResponse,
    (request: zitadel_management_pb.AddOrgMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddOrgMemberResponse.deserializeBinary
  );

  addOrgMember(
    request: zitadel_management_pb.AddOrgMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddOrgMemberResponse>;

  addOrgMember(
    request: zitadel_management_pb.AddOrgMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddOrgMemberResponse>;

  addOrgMember(
    request: zitadel_management_pb.AddOrgMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddOrgMember',
        request,
        metadata || {},
        this.methodDescriptorAddOrgMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddOrgMember',
    request,
    metadata || {},
    this.methodDescriptorAddOrgMember);
  }

  methodDescriptorUpdateOrgMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateOrgMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateOrgMemberRequest,
    zitadel_management_pb.UpdateOrgMemberResponse,
    (request: zitadel_management_pb.UpdateOrgMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateOrgMemberResponse.deserializeBinary
  );

  updateOrgMember(
    request: zitadel_management_pb.UpdateOrgMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateOrgMemberResponse>;

  updateOrgMember(
    request: zitadel_management_pb.UpdateOrgMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateOrgMemberResponse>;

  updateOrgMember(
    request: zitadel_management_pb.UpdateOrgMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateOrgMember',
        request,
        metadata || {},
        this.methodDescriptorUpdateOrgMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateOrgMember',
    request,
    metadata || {},
    this.methodDescriptorUpdateOrgMember);
  }

  methodDescriptorRemoveOrgMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveOrgMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveOrgMemberRequest,
    zitadel_management_pb.RemoveOrgMemberResponse,
    (request: zitadel_management_pb.RemoveOrgMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveOrgMemberResponse.deserializeBinary
  );

  removeOrgMember(
    request: zitadel_management_pb.RemoveOrgMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveOrgMemberResponse>;

  removeOrgMember(
    request: zitadel_management_pb.RemoveOrgMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveOrgMemberResponse>;

  removeOrgMember(
    request: zitadel_management_pb.RemoveOrgMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveOrgMember',
        request,
        metadata || {},
        this.methodDescriptorRemoveOrgMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveOrgMember',
    request,
    metadata || {},
    this.methodDescriptorRemoveOrgMember);
  }

  methodDescriptorGetProjectByID = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetProjectByID',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetProjectByIDRequest,
    zitadel_management_pb.GetProjectByIDResponse,
    (request: zitadel_management_pb.GetProjectByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetProjectByIDResponse.deserializeBinary
  );

  getProjectByID(
    request: zitadel_management_pb.GetProjectByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetProjectByIDResponse>;

  getProjectByID(
    request: zitadel_management_pb.GetProjectByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetProjectByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetProjectByIDResponse>;

  getProjectByID(
    request: zitadel_management_pb.GetProjectByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetProjectByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetProjectByID',
        request,
        metadata || {},
        this.methodDescriptorGetProjectByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetProjectByID',
    request,
    metadata || {},
    this.methodDescriptorGetProjectByID);
  }

  methodDescriptorGetGrantedProjectByID = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetGrantedProjectByID',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetGrantedProjectByIDRequest,
    zitadel_management_pb.GetGrantedProjectByIDResponse,
    (request: zitadel_management_pb.GetGrantedProjectByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetGrantedProjectByIDResponse.deserializeBinary
  );

  getGrantedProjectByID(
    request: zitadel_management_pb.GetGrantedProjectByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetGrantedProjectByIDResponse>;

  getGrantedProjectByID(
    request: zitadel_management_pb.GetGrantedProjectByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetGrantedProjectByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetGrantedProjectByIDResponse>;

  getGrantedProjectByID(
    request: zitadel_management_pb.GetGrantedProjectByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetGrantedProjectByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetGrantedProjectByID',
        request,
        metadata || {},
        this.methodDescriptorGetGrantedProjectByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetGrantedProjectByID',
    request,
    metadata || {},
    this.methodDescriptorGetGrantedProjectByID);
  }

  methodDescriptorListProjects = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjects',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectsRequest,
    zitadel_management_pb.ListProjectsResponse,
    (request: zitadel_management_pb.ListProjectsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectsResponse.deserializeBinary
  );

  listProjects(
    request: zitadel_management_pb.ListProjectsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectsResponse>;

  listProjects(
    request: zitadel_management_pb.ListProjectsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectsResponse>;

  listProjects(
    request: zitadel_management_pb.ListProjectsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjects',
        request,
        metadata || {},
        this.methodDescriptorListProjects,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjects',
    request,
    metadata || {},
    this.methodDescriptorListProjects);
  }

  methodDescriptorListGrantedProjects = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListGrantedProjects',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListGrantedProjectsRequest,
    zitadel_management_pb.ListGrantedProjectsResponse,
    (request: zitadel_management_pb.ListGrantedProjectsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListGrantedProjectsResponse.deserializeBinary
  );

  listGrantedProjects(
    request: zitadel_management_pb.ListGrantedProjectsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListGrantedProjectsResponse>;

  listGrantedProjects(
    request: zitadel_management_pb.ListGrantedProjectsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListGrantedProjectsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListGrantedProjectsResponse>;

  listGrantedProjects(
    request: zitadel_management_pb.ListGrantedProjectsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListGrantedProjectsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListGrantedProjects',
        request,
        metadata || {},
        this.methodDescriptorListGrantedProjects,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListGrantedProjects',
    request,
    metadata || {},
    this.methodDescriptorListGrantedProjects);
  }

  methodDescriptorListGrantedProjectRoles = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListGrantedProjectRoles',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListGrantedProjectRolesRequest,
    zitadel_management_pb.ListGrantedProjectRolesResponse,
    (request: zitadel_management_pb.ListGrantedProjectRolesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListGrantedProjectRolesResponse.deserializeBinary
  );

  listGrantedProjectRoles(
    request: zitadel_management_pb.ListGrantedProjectRolesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListGrantedProjectRolesResponse>;

  listGrantedProjectRoles(
    request: zitadel_management_pb.ListGrantedProjectRolesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListGrantedProjectRolesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListGrantedProjectRolesResponse>;

  listGrantedProjectRoles(
    request: zitadel_management_pb.ListGrantedProjectRolesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListGrantedProjectRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListGrantedProjectRoles',
        request,
        metadata || {},
        this.methodDescriptorListGrantedProjectRoles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListGrantedProjectRoles',
    request,
    metadata || {},
    this.methodDescriptorListGrantedProjectRoles);
  }

  methodDescriptorListProjectChanges = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjectChanges',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectChangesRequest,
    zitadel_management_pb.ListProjectChangesResponse,
    (request: zitadel_management_pb.ListProjectChangesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectChangesResponse.deserializeBinary
  );

  listProjectChanges(
    request: zitadel_management_pb.ListProjectChangesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectChangesResponse>;

  listProjectChanges(
    request: zitadel_management_pb.ListProjectChangesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectChangesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectChangesResponse>;

  listProjectChanges(
    request: zitadel_management_pb.ListProjectChangesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectChangesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjectChanges',
        request,
        metadata || {},
        this.methodDescriptorListProjectChanges,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjectChanges',
    request,
    metadata || {},
    this.methodDescriptorListProjectChanges);
  }

  methodDescriptorAddProject = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddProject',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddProjectRequest,
    zitadel_management_pb.AddProjectResponse,
    (request: zitadel_management_pb.AddProjectRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddProjectResponse.deserializeBinary
  );

  addProject(
    request: zitadel_management_pb.AddProjectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddProjectResponse>;

  addProject(
    request: zitadel_management_pb.AddProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddProjectResponse>;

  addProject(
    request: zitadel_management_pb.AddProjectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddProject',
        request,
        metadata || {},
        this.methodDescriptorAddProject,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddProject',
    request,
    metadata || {},
    this.methodDescriptorAddProject);
  }

  methodDescriptorUpdateProject = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateProject',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateProjectRequest,
    zitadel_management_pb.UpdateProjectResponse,
    (request: zitadel_management_pb.UpdateProjectRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateProjectResponse.deserializeBinary
  );

  updateProject(
    request: zitadel_management_pb.UpdateProjectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateProjectResponse>;

  updateProject(
    request: zitadel_management_pb.UpdateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateProjectResponse>;

  updateProject(
    request: zitadel_management_pb.UpdateProjectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateProject',
        request,
        metadata || {},
        this.methodDescriptorUpdateProject,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateProject',
    request,
    metadata || {},
    this.methodDescriptorUpdateProject);
  }

  methodDescriptorDeactivateProject = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeactivateProject',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeactivateProjectRequest,
    zitadel_management_pb.DeactivateProjectResponse,
    (request: zitadel_management_pb.DeactivateProjectRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeactivateProjectResponse.deserializeBinary
  );

  deactivateProject(
    request: zitadel_management_pb.DeactivateProjectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeactivateProjectResponse>;

  deactivateProject(
    request: zitadel_management_pb.DeactivateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateProjectResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeactivateProjectResponse>;

  deactivateProject(
    request: zitadel_management_pb.DeactivateProjectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeactivateProject',
        request,
        metadata || {},
        this.methodDescriptorDeactivateProject,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeactivateProject',
    request,
    metadata || {},
    this.methodDescriptorDeactivateProject);
  }

  methodDescriptorReactivateProject = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ReactivateProject',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ReactivateProjectRequest,
    zitadel_management_pb.ReactivateProjectResponse,
    (request: zitadel_management_pb.ReactivateProjectRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ReactivateProjectResponse.deserializeBinary
  );

  reactivateProject(
    request: zitadel_management_pb.ReactivateProjectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ReactivateProjectResponse>;

  reactivateProject(
    request: zitadel_management_pb.ReactivateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateProjectResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ReactivateProjectResponse>;

  reactivateProject(
    request: zitadel_management_pb.ReactivateProjectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ReactivateProject',
        request,
        metadata || {},
        this.methodDescriptorReactivateProject,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ReactivateProject',
    request,
    metadata || {},
    this.methodDescriptorReactivateProject);
  }

  methodDescriptorRemoveProject = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveProject',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveProjectRequest,
    zitadel_management_pb.RemoveProjectResponse,
    (request: zitadel_management_pb.RemoveProjectRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveProjectResponse.deserializeBinary
  );

  removeProject(
    request: zitadel_management_pb.RemoveProjectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveProjectResponse>;

  removeProject(
    request: zitadel_management_pb.RemoveProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveProjectResponse>;

  removeProject(
    request: zitadel_management_pb.RemoveProjectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveProject',
        request,
        metadata || {},
        this.methodDescriptorRemoveProject,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveProject',
    request,
    metadata || {},
    this.methodDescriptorRemoveProject);
  }

  methodDescriptorListProjectRoles = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjectRoles',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectRolesRequest,
    zitadel_management_pb.ListProjectRolesResponse,
    (request: zitadel_management_pb.ListProjectRolesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectRolesResponse.deserializeBinary
  );

  listProjectRoles(
    request: zitadel_management_pb.ListProjectRolesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectRolesResponse>;

  listProjectRoles(
    request: zitadel_management_pb.ListProjectRolesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectRolesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectRolesResponse>;

  listProjectRoles(
    request: zitadel_management_pb.ListProjectRolesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjectRoles',
        request,
        metadata || {},
        this.methodDescriptorListProjectRoles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjectRoles',
    request,
    metadata || {},
    this.methodDescriptorListProjectRoles);
  }

  methodDescriptorAddProjectRole = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddProjectRole',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddProjectRoleRequest,
    zitadel_management_pb.AddProjectRoleResponse,
    (request: zitadel_management_pb.AddProjectRoleRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddProjectRoleResponse.deserializeBinary
  );

  addProjectRole(
    request: zitadel_management_pb.AddProjectRoleRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddProjectRoleResponse>;

  addProjectRole(
    request: zitadel_management_pb.AddProjectRoleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectRoleResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddProjectRoleResponse>;

  addProjectRole(
    request: zitadel_management_pb.AddProjectRoleRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectRoleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddProjectRole',
        request,
        metadata || {},
        this.methodDescriptorAddProjectRole,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddProjectRole',
    request,
    metadata || {},
    this.methodDescriptorAddProjectRole);
  }

  methodDescriptorBulkAddProjectRoles = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/BulkAddProjectRoles',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.BulkAddProjectRolesRequest,
    zitadel_management_pb.BulkAddProjectRolesResponse,
    (request: zitadel_management_pb.BulkAddProjectRolesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.BulkAddProjectRolesResponse.deserializeBinary
  );

  bulkAddProjectRoles(
    request: zitadel_management_pb.BulkAddProjectRolesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.BulkAddProjectRolesResponse>;

  bulkAddProjectRoles(
    request: zitadel_management_pb.BulkAddProjectRolesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkAddProjectRolesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.BulkAddProjectRolesResponse>;

  bulkAddProjectRoles(
    request: zitadel_management_pb.BulkAddProjectRolesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkAddProjectRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/BulkAddProjectRoles',
        request,
        metadata || {},
        this.methodDescriptorBulkAddProjectRoles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/BulkAddProjectRoles',
    request,
    metadata || {},
    this.methodDescriptorBulkAddProjectRoles);
  }

  methodDescriptorUpdateProjectRole = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateProjectRole',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateProjectRoleRequest,
    zitadel_management_pb.UpdateProjectRoleResponse,
    (request: zitadel_management_pb.UpdateProjectRoleRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateProjectRoleResponse.deserializeBinary
  );

  updateProjectRole(
    request: zitadel_management_pb.UpdateProjectRoleRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateProjectRoleResponse>;

  updateProjectRole(
    request: zitadel_management_pb.UpdateProjectRoleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectRoleResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateProjectRoleResponse>;

  updateProjectRole(
    request: zitadel_management_pb.UpdateProjectRoleRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectRoleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateProjectRole',
        request,
        metadata || {},
        this.methodDescriptorUpdateProjectRole,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateProjectRole',
    request,
    metadata || {},
    this.methodDescriptorUpdateProjectRole);
  }

  methodDescriptorRemoveProjectRole = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveProjectRole',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveProjectRoleRequest,
    zitadel_management_pb.RemoveProjectRoleResponse,
    (request: zitadel_management_pb.RemoveProjectRoleRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveProjectRoleResponse.deserializeBinary
  );

  removeProjectRole(
    request: zitadel_management_pb.RemoveProjectRoleRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveProjectRoleResponse>;

  removeProjectRole(
    request: zitadel_management_pb.RemoveProjectRoleRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectRoleResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveProjectRoleResponse>;

  removeProjectRole(
    request: zitadel_management_pb.RemoveProjectRoleRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectRoleResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveProjectRole',
        request,
        metadata || {},
        this.methodDescriptorRemoveProjectRole,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveProjectRole',
    request,
    metadata || {},
    this.methodDescriptorRemoveProjectRole);
  }

  methodDescriptorListProjectMemberRoles = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjectMemberRoles',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectMemberRolesRequest,
    zitadel_management_pb.ListProjectMemberRolesResponse,
    (request: zitadel_management_pb.ListProjectMemberRolesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectMemberRolesResponse.deserializeBinary
  );

  listProjectMemberRoles(
    request: zitadel_management_pb.ListProjectMemberRolesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectMemberRolesResponse>;

  listProjectMemberRoles(
    request: zitadel_management_pb.ListProjectMemberRolesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectMemberRolesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectMemberRolesResponse>;

  listProjectMemberRoles(
    request: zitadel_management_pb.ListProjectMemberRolesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectMemberRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjectMemberRoles',
        request,
        metadata || {},
        this.methodDescriptorListProjectMemberRoles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjectMemberRoles',
    request,
    metadata || {},
    this.methodDescriptorListProjectMemberRoles);
  }

  methodDescriptorListProjectMembers = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjectMembers',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectMembersRequest,
    zitadel_management_pb.ListProjectMembersResponse,
    (request: zitadel_management_pb.ListProjectMembersRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectMembersResponse.deserializeBinary
  );

  listProjectMembers(
    request: zitadel_management_pb.ListProjectMembersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectMembersResponse>;

  listProjectMembers(
    request: zitadel_management_pb.ListProjectMembersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectMembersResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectMembersResponse>;

  listProjectMembers(
    request: zitadel_management_pb.ListProjectMembersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectMembersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjectMembers',
        request,
        metadata || {},
        this.methodDescriptorListProjectMembers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjectMembers',
    request,
    metadata || {},
    this.methodDescriptorListProjectMembers);
  }

  methodDescriptorAddProjectMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddProjectMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddProjectMemberRequest,
    zitadel_management_pb.AddProjectMemberResponse,
    (request: zitadel_management_pb.AddProjectMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddProjectMemberResponse.deserializeBinary
  );

  addProjectMember(
    request: zitadel_management_pb.AddProjectMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddProjectMemberResponse>;

  addProjectMember(
    request: zitadel_management_pb.AddProjectMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddProjectMemberResponse>;

  addProjectMember(
    request: zitadel_management_pb.AddProjectMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddProjectMember',
        request,
        metadata || {},
        this.methodDescriptorAddProjectMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddProjectMember',
    request,
    metadata || {},
    this.methodDescriptorAddProjectMember);
  }

  methodDescriptorUpdateProjectMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateProjectMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateProjectMemberRequest,
    zitadel_management_pb.UpdateProjectMemberResponse,
    (request: zitadel_management_pb.UpdateProjectMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateProjectMemberResponse.deserializeBinary
  );

  updateProjectMember(
    request: zitadel_management_pb.UpdateProjectMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateProjectMemberResponse>;

  updateProjectMember(
    request: zitadel_management_pb.UpdateProjectMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateProjectMemberResponse>;

  updateProjectMember(
    request: zitadel_management_pb.UpdateProjectMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateProjectMember',
        request,
        metadata || {},
        this.methodDescriptorUpdateProjectMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateProjectMember',
    request,
    metadata || {},
    this.methodDescriptorUpdateProjectMember);
  }

  methodDescriptorRemoveProjectMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveProjectMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveProjectMemberRequest,
    zitadel_management_pb.RemoveProjectMemberResponse,
    (request: zitadel_management_pb.RemoveProjectMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveProjectMemberResponse.deserializeBinary
  );

  removeProjectMember(
    request: zitadel_management_pb.RemoveProjectMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveProjectMemberResponse>;

  removeProjectMember(
    request: zitadel_management_pb.RemoveProjectMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveProjectMemberResponse>;

  removeProjectMember(
    request: zitadel_management_pb.RemoveProjectMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveProjectMember',
        request,
        metadata || {},
        this.methodDescriptorRemoveProjectMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveProjectMember',
    request,
    metadata || {},
    this.methodDescriptorRemoveProjectMember);
  }

  methodDescriptorGetAppByID = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetAppByID',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetAppByIDRequest,
    zitadel_management_pb.GetAppByIDResponse,
    (request: zitadel_management_pb.GetAppByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetAppByIDResponse.deserializeBinary
  );

  getAppByID(
    request: zitadel_management_pb.GetAppByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetAppByIDResponse>;

  getAppByID(
    request: zitadel_management_pb.GetAppByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetAppByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetAppByIDResponse>;

  getAppByID(
    request: zitadel_management_pb.GetAppByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetAppByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetAppByID',
        request,
        metadata || {},
        this.methodDescriptorGetAppByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetAppByID',
    request,
    metadata || {},
    this.methodDescriptorGetAppByID);
  }

  methodDescriptorListApps = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListApps',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListAppsRequest,
    zitadel_management_pb.ListAppsResponse,
    (request: zitadel_management_pb.ListAppsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListAppsResponse.deserializeBinary
  );

  listApps(
    request: zitadel_management_pb.ListAppsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListAppsResponse>;

  listApps(
    request: zitadel_management_pb.ListAppsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListAppsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListAppsResponse>;

  listApps(
    request: zitadel_management_pb.ListAppsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListAppsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListApps',
        request,
        metadata || {},
        this.methodDescriptorListApps,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListApps',
    request,
    metadata || {},
    this.methodDescriptorListApps);
  }

  methodDescriptorListAppChanges = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListAppChanges',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListAppChangesRequest,
    zitadel_management_pb.ListAppChangesResponse,
    (request: zitadel_management_pb.ListAppChangesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListAppChangesResponse.deserializeBinary
  );

  listAppChanges(
    request: zitadel_management_pb.ListAppChangesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListAppChangesResponse>;

  listAppChanges(
    request: zitadel_management_pb.ListAppChangesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListAppChangesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListAppChangesResponse>;

  listAppChanges(
    request: zitadel_management_pb.ListAppChangesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListAppChangesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListAppChanges',
        request,
        metadata || {},
        this.methodDescriptorListAppChanges,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListAppChanges',
    request,
    metadata || {},
    this.methodDescriptorListAppChanges);
  }

  methodDescriptorAddOIDCApp = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddOIDCApp',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddOIDCAppRequest,
    zitadel_management_pb.AddOIDCAppResponse,
    (request: zitadel_management_pb.AddOIDCAppRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddOIDCAppResponse.deserializeBinary
  );

  addOIDCApp(
    request: zitadel_management_pb.AddOIDCAppRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddOIDCAppResponse>;

  addOIDCApp(
    request: zitadel_management_pb.AddOIDCAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOIDCAppResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddOIDCAppResponse>;

  addOIDCApp(
    request: zitadel_management_pb.AddOIDCAppRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOIDCAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddOIDCApp',
        request,
        metadata || {},
        this.methodDescriptorAddOIDCApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddOIDCApp',
    request,
    metadata || {},
    this.methodDescriptorAddOIDCApp);
  }

  methodDescriptorAddSAMLApp = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddSAMLApp',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddSAMLAppRequest,
    zitadel_management_pb.AddSAMLAppResponse,
    (request: zitadel_management_pb.AddSAMLAppRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddSAMLAppResponse.deserializeBinary
  );

  addSAMLApp(
    request: zitadel_management_pb.AddSAMLAppRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddSAMLAppResponse>;

  addSAMLApp(
    request: zitadel_management_pb.AddSAMLAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddSAMLAppResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddSAMLAppResponse>;

  addSAMLApp(
    request: zitadel_management_pb.AddSAMLAppRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddSAMLAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddSAMLApp',
        request,
        metadata || {},
        this.methodDescriptorAddSAMLApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddSAMLApp',
    request,
    metadata || {},
    this.methodDescriptorAddSAMLApp);
  }

  methodDescriptorAddAPIApp = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddAPIApp',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddAPIAppRequest,
    zitadel_management_pb.AddAPIAppResponse,
    (request: zitadel_management_pb.AddAPIAppRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddAPIAppResponse.deserializeBinary
  );

  addAPIApp(
    request: zitadel_management_pb.AddAPIAppRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddAPIAppResponse>;

  addAPIApp(
    request: zitadel_management_pb.AddAPIAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddAPIAppResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddAPIAppResponse>;

  addAPIApp(
    request: zitadel_management_pb.AddAPIAppRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddAPIAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddAPIApp',
        request,
        metadata || {},
        this.methodDescriptorAddAPIApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddAPIApp',
    request,
    metadata || {},
    this.methodDescriptorAddAPIApp);
  }

  methodDescriptorUpdateApp = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateApp',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateAppRequest,
    zitadel_management_pb.UpdateAppResponse,
    (request: zitadel_management_pb.UpdateAppRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateAppResponse.deserializeBinary
  );

  updateApp(
    request: zitadel_management_pb.UpdateAppRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateAppResponse>;

  updateApp(
    request: zitadel_management_pb.UpdateAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateAppResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateAppResponse>;

  updateApp(
    request: zitadel_management_pb.UpdateAppRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateApp',
        request,
        metadata || {},
        this.methodDescriptorUpdateApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateApp',
    request,
    metadata || {},
    this.methodDescriptorUpdateApp);
  }

  methodDescriptorUpdateOIDCAppConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateOIDCAppConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateOIDCAppConfigRequest,
    zitadel_management_pb.UpdateOIDCAppConfigResponse,
    (request: zitadel_management_pb.UpdateOIDCAppConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateOIDCAppConfigResponse.deserializeBinary
  );

  updateOIDCAppConfig(
    request: zitadel_management_pb.UpdateOIDCAppConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateOIDCAppConfigResponse>;

  updateOIDCAppConfig(
    request: zitadel_management_pb.UpdateOIDCAppConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOIDCAppConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateOIDCAppConfigResponse>;

  updateOIDCAppConfig(
    request: zitadel_management_pb.UpdateOIDCAppConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOIDCAppConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateOIDCAppConfig',
        request,
        metadata || {},
        this.methodDescriptorUpdateOIDCAppConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateOIDCAppConfig',
    request,
    metadata || {},
    this.methodDescriptorUpdateOIDCAppConfig);
  }

  methodDescriptorUpdateSAMLAppConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateSAMLAppConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateSAMLAppConfigRequest,
    zitadel_management_pb.UpdateSAMLAppConfigResponse,
    (request: zitadel_management_pb.UpdateSAMLAppConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateSAMLAppConfigResponse.deserializeBinary
  );

  updateSAMLAppConfig(
    request: zitadel_management_pb.UpdateSAMLAppConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateSAMLAppConfigResponse>;

  updateSAMLAppConfig(
    request: zitadel_management_pb.UpdateSAMLAppConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateSAMLAppConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateSAMLAppConfigResponse>;

  updateSAMLAppConfig(
    request: zitadel_management_pb.UpdateSAMLAppConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateSAMLAppConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateSAMLAppConfig',
        request,
        metadata || {},
        this.methodDescriptorUpdateSAMLAppConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateSAMLAppConfig',
    request,
    metadata || {},
    this.methodDescriptorUpdateSAMLAppConfig);
  }

  methodDescriptorUpdateAPIAppConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateAPIAppConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateAPIAppConfigRequest,
    zitadel_management_pb.UpdateAPIAppConfigResponse,
    (request: zitadel_management_pb.UpdateAPIAppConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateAPIAppConfigResponse.deserializeBinary
  );

  updateAPIAppConfig(
    request: zitadel_management_pb.UpdateAPIAppConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateAPIAppConfigResponse>;

  updateAPIAppConfig(
    request: zitadel_management_pb.UpdateAPIAppConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateAPIAppConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateAPIAppConfigResponse>;

  updateAPIAppConfig(
    request: zitadel_management_pb.UpdateAPIAppConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateAPIAppConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateAPIAppConfig',
        request,
        metadata || {},
        this.methodDescriptorUpdateAPIAppConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateAPIAppConfig',
    request,
    metadata || {},
    this.methodDescriptorUpdateAPIAppConfig);
  }

  methodDescriptorDeactivateApp = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeactivateApp',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeactivateAppRequest,
    zitadel_management_pb.DeactivateAppResponse,
    (request: zitadel_management_pb.DeactivateAppRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeactivateAppResponse.deserializeBinary
  );

  deactivateApp(
    request: zitadel_management_pb.DeactivateAppRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeactivateAppResponse>;

  deactivateApp(
    request: zitadel_management_pb.DeactivateAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateAppResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeactivateAppResponse>;

  deactivateApp(
    request: zitadel_management_pb.DeactivateAppRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeactivateApp',
        request,
        metadata || {},
        this.methodDescriptorDeactivateApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeactivateApp',
    request,
    metadata || {},
    this.methodDescriptorDeactivateApp);
  }

  methodDescriptorReactivateApp = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ReactivateApp',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ReactivateAppRequest,
    zitadel_management_pb.ReactivateAppResponse,
    (request: zitadel_management_pb.ReactivateAppRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ReactivateAppResponse.deserializeBinary
  );

  reactivateApp(
    request: zitadel_management_pb.ReactivateAppRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ReactivateAppResponse>;

  reactivateApp(
    request: zitadel_management_pb.ReactivateAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateAppResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ReactivateAppResponse>;

  reactivateApp(
    request: zitadel_management_pb.ReactivateAppRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ReactivateApp',
        request,
        metadata || {},
        this.methodDescriptorReactivateApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ReactivateApp',
    request,
    metadata || {},
    this.methodDescriptorReactivateApp);
  }

  methodDescriptorRemoveApp = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveApp',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveAppRequest,
    zitadel_management_pb.RemoveAppResponse,
    (request: zitadel_management_pb.RemoveAppRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveAppResponse.deserializeBinary
  );

  removeApp(
    request: zitadel_management_pb.RemoveAppRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveAppResponse>;

  removeApp(
    request: zitadel_management_pb.RemoveAppRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveAppResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveAppResponse>;

  removeApp(
    request: zitadel_management_pb.RemoveAppRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveAppResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveApp',
        request,
        metadata || {},
        this.methodDescriptorRemoveApp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveApp',
    request,
    metadata || {},
    this.methodDescriptorRemoveApp);
  }

  methodDescriptorRegenerateOIDCClientSecret = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RegenerateOIDCClientSecret',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RegenerateOIDCClientSecretRequest,
    zitadel_management_pb.RegenerateOIDCClientSecretResponse,
    (request: zitadel_management_pb.RegenerateOIDCClientSecretRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RegenerateOIDCClientSecretResponse.deserializeBinary
  );

  regenerateOIDCClientSecret(
    request: zitadel_management_pb.RegenerateOIDCClientSecretRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RegenerateOIDCClientSecretResponse>;

  regenerateOIDCClientSecret(
    request: zitadel_management_pb.RegenerateOIDCClientSecretRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RegenerateOIDCClientSecretResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RegenerateOIDCClientSecretResponse>;

  regenerateOIDCClientSecret(
    request: zitadel_management_pb.RegenerateOIDCClientSecretRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RegenerateOIDCClientSecretResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RegenerateOIDCClientSecret',
        request,
        metadata || {},
        this.methodDescriptorRegenerateOIDCClientSecret,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RegenerateOIDCClientSecret',
    request,
    metadata || {},
    this.methodDescriptorRegenerateOIDCClientSecret);
  }

  methodDescriptorRegenerateAPIClientSecret = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RegenerateAPIClientSecret',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RegenerateAPIClientSecretRequest,
    zitadel_management_pb.RegenerateAPIClientSecretResponse,
    (request: zitadel_management_pb.RegenerateAPIClientSecretRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RegenerateAPIClientSecretResponse.deserializeBinary
  );

  regenerateAPIClientSecret(
    request: zitadel_management_pb.RegenerateAPIClientSecretRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RegenerateAPIClientSecretResponse>;

  regenerateAPIClientSecret(
    request: zitadel_management_pb.RegenerateAPIClientSecretRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RegenerateAPIClientSecretResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RegenerateAPIClientSecretResponse>;

  regenerateAPIClientSecret(
    request: zitadel_management_pb.RegenerateAPIClientSecretRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RegenerateAPIClientSecretResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RegenerateAPIClientSecret',
        request,
        metadata || {},
        this.methodDescriptorRegenerateAPIClientSecret,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RegenerateAPIClientSecret',
    request,
    metadata || {},
    this.methodDescriptorRegenerateAPIClientSecret);
  }

  methodDescriptorGetAppKey = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetAppKey',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetAppKeyRequest,
    zitadel_management_pb.GetAppKeyResponse,
    (request: zitadel_management_pb.GetAppKeyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetAppKeyResponse.deserializeBinary
  );

  getAppKey(
    request: zitadel_management_pb.GetAppKeyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetAppKeyResponse>;

  getAppKey(
    request: zitadel_management_pb.GetAppKeyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetAppKeyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetAppKeyResponse>;

  getAppKey(
    request: zitadel_management_pb.GetAppKeyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetAppKeyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetAppKey',
        request,
        metadata || {},
        this.methodDescriptorGetAppKey,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetAppKey',
    request,
    metadata || {},
    this.methodDescriptorGetAppKey);
  }

  methodDescriptorListAppKeys = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListAppKeys',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListAppKeysRequest,
    zitadel_management_pb.ListAppKeysResponse,
    (request: zitadel_management_pb.ListAppKeysRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListAppKeysResponse.deserializeBinary
  );

  listAppKeys(
    request: zitadel_management_pb.ListAppKeysRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListAppKeysResponse>;

  listAppKeys(
    request: zitadel_management_pb.ListAppKeysRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListAppKeysResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListAppKeysResponse>;

  listAppKeys(
    request: zitadel_management_pb.ListAppKeysRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListAppKeysResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListAppKeys',
        request,
        metadata || {},
        this.methodDescriptorListAppKeys,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListAppKeys',
    request,
    metadata || {},
    this.methodDescriptorListAppKeys);
  }

  methodDescriptorAddAppKey = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddAppKey',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddAppKeyRequest,
    zitadel_management_pb.AddAppKeyResponse,
    (request: zitadel_management_pb.AddAppKeyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddAppKeyResponse.deserializeBinary
  );

  addAppKey(
    request: zitadel_management_pb.AddAppKeyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddAppKeyResponse>;

  addAppKey(
    request: zitadel_management_pb.AddAppKeyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddAppKeyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddAppKeyResponse>;

  addAppKey(
    request: zitadel_management_pb.AddAppKeyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddAppKeyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddAppKey',
        request,
        metadata || {},
        this.methodDescriptorAddAppKey,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddAppKey',
    request,
    metadata || {},
    this.methodDescriptorAddAppKey);
  }

  methodDescriptorRemoveAppKey = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveAppKey',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveAppKeyRequest,
    zitadel_management_pb.RemoveAppKeyResponse,
    (request: zitadel_management_pb.RemoveAppKeyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveAppKeyResponse.deserializeBinary
  );

  removeAppKey(
    request: zitadel_management_pb.RemoveAppKeyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveAppKeyResponse>;

  removeAppKey(
    request: zitadel_management_pb.RemoveAppKeyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveAppKeyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveAppKeyResponse>;

  removeAppKey(
    request: zitadel_management_pb.RemoveAppKeyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveAppKeyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveAppKey',
        request,
        metadata || {},
        this.methodDescriptorRemoveAppKey,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveAppKey',
    request,
    metadata || {},
    this.methodDescriptorRemoveAppKey);
  }

  methodDescriptorListProjectGrantChanges = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjectGrantChanges',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectGrantChangesRequest,
    zitadel_management_pb.ListProjectGrantChangesResponse,
    (request: zitadel_management_pb.ListProjectGrantChangesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectGrantChangesResponse.deserializeBinary
  );

  listProjectGrantChanges(
    request: zitadel_management_pb.ListProjectGrantChangesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectGrantChangesResponse>;

  listProjectGrantChanges(
    request: zitadel_management_pb.ListProjectGrantChangesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectGrantChangesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectGrantChangesResponse>;

  listProjectGrantChanges(
    request: zitadel_management_pb.ListProjectGrantChangesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectGrantChangesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjectGrantChanges',
        request,
        metadata || {},
        this.methodDescriptorListProjectGrantChanges,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjectGrantChanges',
    request,
    metadata || {},
    this.methodDescriptorListProjectGrantChanges);
  }

  methodDescriptorGetProjectGrantByID = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetProjectGrantByID',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetProjectGrantByIDRequest,
    zitadel_management_pb.GetProjectGrantByIDResponse,
    (request: zitadel_management_pb.GetProjectGrantByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetProjectGrantByIDResponse.deserializeBinary
  );

  getProjectGrantByID(
    request: zitadel_management_pb.GetProjectGrantByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetProjectGrantByIDResponse>;

  getProjectGrantByID(
    request: zitadel_management_pb.GetProjectGrantByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetProjectGrantByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetProjectGrantByIDResponse>;

  getProjectGrantByID(
    request: zitadel_management_pb.GetProjectGrantByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetProjectGrantByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetProjectGrantByID',
        request,
        metadata || {},
        this.methodDescriptorGetProjectGrantByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetProjectGrantByID',
    request,
    metadata || {},
    this.methodDescriptorGetProjectGrantByID);
  }

  methodDescriptorListProjectGrants = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjectGrants',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectGrantsRequest,
    zitadel_management_pb.ListProjectGrantsResponse,
    (request: zitadel_management_pb.ListProjectGrantsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectGrantsResponse.deserializeBinary
  );

  listProjectGrants(
    request: zitadel_management_pb.ListProjectGrantsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectGrantsResponse>;

  listProjectGrants(
    request: zitadel_management_pb.ListProjectGrantsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectGrantsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectGrantsResponse>;

  listProjectGrants(
    request: zitadel_management_pb.ListProjectGrantsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectGrantsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjectGrants',
        request,
        metadata || {},
        this.methodDescriptorListProjectGrants,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjectGrants',
    request,
    metadata || {},
    this.methodDescriptorListProjectGrants);
  }

  methodDescriptorListAllProjectGrants = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListAllProjectGrants',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListAllProjectGrantsRequest,
    zitadel_management_pb.ListAllProjectGrantsResponse,
    (request: zitadel_management_pb.ListAllProjectGrantsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListAllProjectGrantsResponse.deserializeBinary
  );

  listAllProjectGrants(
    request: zitadel_management_pb.ListAllProjectGrantsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListAllProjectGrantsResponse>;

  listAllProjectGrants(
    request: zitadel_management_pb.ListAllProjectGrantsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListAllProjectGrantsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListAllProjectGrantsResponse>;

  listAllProjectGrants(
    request: zitadel_management_pb.ListAllProjectGrantsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListAllProjectGrantsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListAllProjectGrants',
        request,
        metadata || {},
        this.methodDescriptorListAllProjectGrants,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListAllProjectGrants',
    request,
    metadata || {},
    this.methodDescriptorListAllProjectGrants);
  }

  methodDescriptorAddProjectGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddProjectGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddProjectGrantRequest,
    zitadel_management_pb.AddProjectGrantResponse,
    (request: zitadel_management_pb.AddProjectGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddProjectGrantResponse.deserializeBinary
  );

  addProjectGrant(
    request: zitadel_management_pb.AddProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddProjectGrantResponse>;

  addProjectGrant(
    request: zitadel_management_pb.AddProjectGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddProjectGrantResponse>;

  addProjectGrant(
    request: zitadel_management_pb.AddProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddProjectGrant',
        request,
        metadata || {},
        this.methodDescriptorAddProjectGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddProjectGrant',
    request,
    metadata || {},
    this.methodDescriptorAddProjectGrant);
  }

  methodDescriptorUpdateProjectGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateProjectGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateProjectGrantRequest,
    zitadel_management_pb.UpdateProjectGrantResponse,
    (request: zitadel_management_pb.UpdateProjectGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateProjectGrantResponse.deserializeBinary
  );

  updateProjectGrant(
    request: zitadel_management_pb.UpdateProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateProjectGrantResponse>;

  updateProjectGrant(
    request: zitadel_management_pb.UpdateProjectGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateProjectGrantResponse>;

  updateProjectGrant(
    request: zitadel_management_pb.UpdateProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateProjectGrant',
        request,
        metadata || {},
        this.methodDescriptorUpdateProjectGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateProjectGrant',
    request,
    metadata || {},
    this.methodDescriptorUpdateProjectGrant);
  }

  methodDescriptorDeactivateProjectGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeactivateProjectGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeactivateProjectGrantRequest,
    zitadel_management_pb.DeactivateProjectGrantResponse,
    (request: zitadel_management_pb.DeactivateProjectGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeactivateProjectGrantResponse.deserializeBinary
  );

  deactivateProjectGrant(
    request: zitadel_management_pb.DeactivateProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeactivateProjectGrantResponse>;

  deactivateProjectGrant(
    request: zitadel_management_pb.DeactivateProjectGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateProjectGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeactivateProjectGrantResponse>;

  deactivateProjectGrant(
    request: zitadel_management_pb.DeactivateProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateProjectGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeactivateProjectGrant',
        request,
        metadata || {},
        this.methodDescriptorDeactivateProjectGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeactivateProjectGrant',
    request,
    metadata || {},
    this.methodDescriptorDeactivateProjectGrant);
  }

  methodDescriptorReactivateProjectGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ReactivateProjectGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ReactivateProjectGrantRequest,
    zitadel_management_pb.ReactivateProjectGrantResponse,
    (request: zitadel_management_pb.ReactivateProjectGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ReactivateProjectGrantResponse.deserializeBinary
  );

  reactivateProjectGrant(
    request: zitadel_management_pb.ReactivateProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ReactivateProjectGrantResponse>;

  reactivateProjectGrant(
    request: zitadel_management_pb.ReactivateProjectGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateProjectGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ReactivateProjectGrantResponse>;

  reactivateProjectGrant(
    request: zitadel_management_pb.ReactivateProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateProjectGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ReactivateProjectGrant',
        request,
        metadata || {},
        this.methodDescriptorReactivateProjectGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ReactivateProjectGrant',
    request,
    metadata || {},
    this.methodDescriptorReactivateProjectGrant);
  }

  methodDescriptorRemoveProjectGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveProjectGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveProjectGrantRequest,
    zitadel_management_pb.RemoveProjectGrantResponse,
    (request: zitadel_management_pb.RemoveProjectGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveProjectGrantResponse.deserializeBinary
  );

  removeProjectGrant(
    request: zitadel_management_pb.RemoveProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveProjectGrantResponse>;

  removeProjectGrant(
    request: zitadel_management_pb.RemoveProjectGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveProjectGrantResponse>;

  removeProjectGrant(
    request: zitadel_management_pb.RemoveProjectGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveProjectGrant',
        request,
        metadata || {},
        this.methodDescriptorRemoveProjectGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveProjectGrant',
    request,
    metadata || {},
    this.methodDescriptorRemoveProjectGrant);
  }

  methodDescriptorListProjectGrantMemberRoles = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjectGrantMemberRoles',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectGrantMemberRolesRequest,
    zitadel_management_pb.ListProjectGrantMemberRolesResponse,
    (request: zitadel_management_pb.ListProjectGrantMemberRolesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectGrantMemberRolesResponse.deserializeBinary
  );

  listProjectGrantMemberRoles(
    request: zitadel_management_pb.ListProjectGrantMemberRolesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectGrantMemberRolesResponse>;

  listProjectGrantMemberRoles(
    request: zitadel_management_pb.ListProjectGrantMemberRolesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectGrantMemberRolesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectGrantMemberRolesResponse>;

  listProjectGrantMemberRoles(
    request: zitadel_management_pb.ListProjectGrantMemberRolesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectGrantMemberRolesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjectGrantMemberRoles',
        request,
        metadata || {},
        this.methodDescriptorListProjectGrantMemberRoles,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjectGrantMemberRoles',
    request,
    metadata || {},
    this.methodDescriptorListProjectGrantMemberRoles);
  }

  methodDescriptorListProjectGrantMembers = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProjectGrantMembers',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProjectGrantMembersRequest,
    zitadel_management_pb.ListProjectGrantMembersResponse,
    (request: zitadel_management_pb.ListProjectGrantMembersRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProjectGrantMembersResponse.deserializeBinary
  );

  listProjectGrantMembers(
    request: zitadel_management_pb.ListProjectGrantMembersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProjectGrantMembersResponse>;

  listProjectGrantMembers(
    request: zitadel_management_pb.ListProjectGrantMembersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectGrantMembersResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProjectGrantMembersResponse>;

  listProjectGrantMembers(
    request: zitadel_management_pb.ListProjectGrantMembersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProjectGrantMembersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProjectGrantMembers',
        request,
        metadata || {},
        this.methodDescriptorListProjectGrantMembers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProjectGrantMembers',
    request,
    metadata || {},
    this.methodDescriptorListProjectGrantMembers);
  }

  methodDescriptorAddProjectGrantMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddProjectGrantMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddProjectGrantMemberRequest,
    zitadel_management_pb.AddProjectGrantMemberResponse,
    (request: zitadel_management_pb.AddProjectGrantMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddProjectGrantMemberResponse.deserializeBinary
  );

  addProjectGrantMember(
    request: zitadel_management_pb.AddProjectGrantMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddProjectGrantMemberResponse>;

  addProjectGrantMember(
    request: zitadel_management_pb.AddProjectGrantMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectGrantMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddProjectGrantMemberResponse>;

  addProjectGrantMember(
    request: zitadel_management_pb.AddProjectGrantMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddProjectGrantMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddProjectGrantMember',
        request,
        metadata || {},
        this.methodDescriptorAddProjectGrantMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddProjectGrantMember',
    request,
    metadata || {},
    this.methodDescriptorAddProjectGrantMember);
  }

  methodDescriptorUpdateProjectGrantMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateProjectGrantMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateProjectGrantMemberRequest,
    zitadel_management_pb.UpdateProjectGrantMemberResponse,
    (request: zitadel_management_pb.UpdateProjectGrantMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateProjectGrantMemberResponse.deserializeBinary
  );

  updateProjectGrantMember(
    request: zitadel_management_pb.UpdateProjectGrantMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateProjectGrantMemberResponse>;

  updateProjectGrantMember(
    request: zitadel_management_pb.UpdateProjectGrantMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectGrantMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateProjectGrantMemberResponse>;

  updateProjectGrantMember(
    request: zitadel_management_pb.UpdateProjectGrantMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateProjectGrantMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateProjectGrantMember',
        request,
        metadata || {},
        this.methodDescriptorUpdateProjectGrantMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateProjectGrantMember',
    request,
    metadata || {},
    this.methodDescriptorUpdateProjectGrantMember);
  }

  methodDescriptorRemoveProjectGrantMember = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveProjectGrantMember',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveProjectGrantMemberRequest,
    zitadel_management_pb.RemoveProjectGrantMemberResponse,
    (request: zitadel_management_pb.RemoveProjectGrantMemberRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveProjectGrantMemberResponse.deserializeBinary
  );

  removeProjectGrantMember(
    request: zitadel_management_pb.RemoveProjectGrantMemberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveProjectGrantMemberResponse>;

  removeProjectGrantMember(
    request: zitadel_management_pb.RemoveProjectGrantMemberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectGrantMemberResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveProjectGrantMemberResponse>;

  removeProjectGrantMember(
    request: zitadel_management_pb.RemoveProjectGrantMemberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveProjectGrantMemberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveProjectGrantMember',
        request,
        metadata || {},
        this.methodDescriptorRemoveProjectGrantMember,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveProjectGrantMember',
    request,
    metadata || {},
    this.methodDescriptorRemoveProjectGrantMember);
  }

  methodDescriptorGetUserGrantByID = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetUserGrantByID',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetUserGrantByIDRequest,
    zitadel_management_pb.GetUserGrantByIDResponse,
    (request: zitadel_management_pb.GetUserGrantByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetUserGrantByIDResponse.deserializeBinary
  );

  getUserGrantByID(
    request: zitadel_management_pb.GetUserGrantByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetUserGrantByIDResponse>;

  getUserGrantByID(
    request: zitadel_management_pb.GetUserGrantByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetUserGrantByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetUserGrantByIDResponse>;

  getUserGrantByID(
    request: zitadel_management_pb.GetUserGrantByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetUserGrantByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetUserGrantByID',
        request,
        metadata || {},
        this.methodDescriptorGetUserGrantByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetUserGrantByID',
    request,
    metadata || {},
    this.methodDescriptorGetUserGrantByID);
  }

  methodDescriptorListUserGrants = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListUserGrants',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListUserGrantRequest,
    zitadel_management_pb.ListUserGrantResponse,
    (request: zitadel_management_pb.ListUserGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListUserGrantResponse.deserializeBinary
  );

  listUserGrants(
    request: zitadel_management_pb.ListUserGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListUserGrantResponse>;

  listUserGrants(
    request: zitadel_management_pb.ListUserGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUserGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListUserGrantResponse>;

  listUserGrants(
    request: zitadel_management_pb.ListUserGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListUserGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListUserGrants',
        request,
        metadata || {},
        this.methodDescriptorListUserGrants,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListUserGrants',
    request,
    metadata || {},
    this.methodDescriptorListUserGrants);
  }

  methodDescriptorAddUserGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddUserGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddUserGrantRequest,
    zitadel_management_pb.AddUserGrantResponse,
    (request: zitadel_management_pb.AddUserGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddUserGrantResponse.deserializeBinary
  );

  addUserGrant(
    request: zitadel_management_pb.AddUserGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddUserGrantResponse>;

  addUserGrant(
    request: zitadel_management_pb.AddUserGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddUserGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddUserGrantResponse>;

  addUserGrant(
    request: zitadel_management_pb.AddUserGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddUserGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddUserGrant',
        request,
        metadata || {},
        this.methodDescriptorAddUserGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddUserGrant',
    request,
    metadata || {},
    this.methodDescriptorAddUserGrant);
  }

  methodDescriptorUpdateUserGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateUserGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateUserGrantRequest,
    zitadel_management_pb.UpdateUserGrantResponse,
    (request: zitadel_management_pb.UpdateUserGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateUserGrantResponse.deserializeBinary
  );

  updateUserGrant(
    request: zitadel_management_pb.UpdateUserGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateUserGrantResponse>;

  updateUserGrant(
    request: zitadel_management_pb.UpdateUserGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateUserGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateUserGrantResponse>;

  updateUserGrant(
    request: zitadel_management_pb.UpdateUserGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateUserGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateUserGrant',
        request,
        metadata || {},
        this.methodDescriptorUpdateUserGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateUserGrant',
    request,
    metadata || {},
    this.methodDescriptorUpdateUserGrant);
  }

  methodDescriptorDeactivateUserGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeactivateUserGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeactivateUserGrantRequest,
    zitadel_management_pb.DeactivateUserGrantResponse,
    (request: zitadel_management_pb.DeactivateUserGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeactivateUserGrantResponse.deserializeBinary
  );

  deactivateUserGrant(
    request: zitadel_management_pb.DeactivateUserGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeactivateUserGrantResponse>;

  deactivateUserGrant(
    request: zitadel_management_pb.DeactivateUserGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateUserGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeactivateUserGrantResponse>;

  deactivateUserGrant(
    request: zitadel_management_pb.DeactivateUserGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateUserGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeactivateUserGrant',
        request,
        metadata || {},
        this.methodDescriptorDeactivateUserGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeactivateUserGrant',
    request,
    metadata || {},
    this.methodDescriptorDeactivateUserGrant);
  }

  methodDescriptorReactivateUserGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ReactivateUserGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ReactivateUserGrantRequest,
    zitadel_management_pb.ReactivateUserGrantResponse,
    (request: zitadel_management_pb.ReactivateUserGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ReactivateUserGrantResponse.deserializeBinary
  );

  reactivateUserGrant(
    request: zitadel_management_pb.ReactivateUserGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ReactivateUserGrantResponse>;

  reactivateUserGrant(
    request: zitadel_management_pb.ReactivateUserGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateUserGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ReactivateUserGrantResponse>;

  reactivateUserGrant(
    request: zitadel_management_pb.ReactivateUserGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateUserGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ReactivateUserGrant',
        request,
        metadata || {},
        this.methodDescriptorReactivateUserGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ReactivateUserGrant',
    request,
    metadata || {},
    this.methodDescriptorReactivateUserGrant);
  }

  methodDescriptorRemoveUserGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveUserGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveUserGrantRequest,
    zitadel_management_pb.RemoveUserGrantResponse,
    (request: zitadel_management_pb.RemoveUserGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveUserGrantResponse.deserializeBinary
  );

  removeUserGrant(
    request: zitadel_management_pb.RemoveUserGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveUserGrantResponse>;

  removeUserGrant(
    request: zitadel_management_pb.RemoveUserGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveUserGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveUserGrantResponse>;

  removeUserGrant(
    request: zitadel_management_pb.RemoveUserGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveUserGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveUserGrant',
        request,
        metadata || {},
        this.methodDescriptorRemoveUserGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveUserGrant',
    request,
    metadata || {},
    this.methodDescriptorRemoveUserGrant);
  }

  methodDescriptorBulkRemoveUserGrant = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/BulkRemoveUserGrant',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.BulkRemoveUserGrantRequest,
    zitadel_management_pb.BulkRemoveUserGrantResponse,
    (request: zitadel_management_pb.BulkRemoveUserGrantRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.BulkRemoveUserGrantResponse.deserializeBinary
  );

  bulkRemoveUserGrant(
    request: zitadel_management_pb.BulkRemoveUserGrantRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.BulkRemoveUserGrantResponse>;

  bulkRemoveUserGrant(
    request: zitadel_management_pb.BulkRemoveUserGrantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkRemoveUserGrantResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.BulkRemoveUserGrantResponse>;

  bulkRemoveUserGrant(
    request: zitadel_management_pb.BulkRemoveUserGrantRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.BulkRemoveUserGrantResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/BulkRemoveUserGrant',
        request,
        metadata || {},
        this.methodDescriptorBulkRemoveUserGrant,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/BulkRemoveUserGrant',
    request,
    metadata || {},
    this.methodDescriptorBulkRemoveUserGrant);
  }

  methodDescriptorGetOrgIAMPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetOrgIAMPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetOrgIAMPolicyRequest,
    zitadel_management_pb.GetOrgIAMPolicyResponse,
    (request: zitadel_management_pb.GetOrgIAMPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetOrgIAMPolicyResponse.deserializeBinary
  );

  getOrgIAMPolicy(
    request: zitadel_management_pb.GetOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetOrgIAMPolicyResponse>;

  getOrgIAMPolicy(
    request: zitadel_management_pb.GetOrgIAMPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOrgIAMPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetOrgIAMPolicyResponse>;

  getOrgIAMPolicy(
    request: zitadel_management_pb.GetOrgIAMPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOrgIAMPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetOrgIAMPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetOrgIAMPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetOrgIAMPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetOrgIAMPolicy);
  }

  methodDescriptorGetDomainPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDomainPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDomainPolicyRequest,
    zitadel_management_pb.GetDomainPolicyResponse,
    (request: zitadel_management_pb.GetDomainPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDomainPolicyResponse.deserializeBinary
  );

  getDomainPolicy(
    request: zitadel_management_pb.GetDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDomainPolicyResponse>;

  getDomainPolicy(
    request: zitadel_management_pb.GetDomainPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDomainPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDomainPolicyResponse>;

  getDomainPolicy(
    request: zitadel_management_pb.GetDomainPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDomainPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDomainPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDomainPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDomainPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDomainPolicy);
  }

  methodDescriptorGetLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetLoginPolicyRequest,
    zitadel_management_pb.GetLoginPolicyResponse,
    (request: zitadel_management_pb.GetLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetLoginPolicyResponse.deserializeBinary
  );

  getLoginPolicy(
    request: zitadel_management_pb.GetLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetLoginPolicyResponse>;

  getLoginPolicy(
    request: zitadel_management_pb.GetLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetLoginPolicyResponse>;

  getLoginPolicy(
    request: zitadel_management_pb.GetLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetLoginPolicy);
  }

  methodDescriptorGetDefaultLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultLoginPolicyRequest,
    zitadel_management_pb.GetDefaultLoginPolicyResponse,
    (request: zitadel_management_pb.GetDefaultLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultLoginPolicyResponse.deserializeBinary
  );

  getDefaultLoginPolicy(
    request: zitadel_management_pb.GetDefaultLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultLoginPolicyResponse>;

  getDefaultLoginPolicy(
    request: zitadel_management_pb.GetDefaultLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultLoginPolicyResponse>;

  getDefaultLoginPolicy(
    request: zitadel_management_pb.GetDefaultLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultLoginPolicy);
  }

  methodDescriptorAddCustomLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddCustomLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddCustomLoginPolicyRequest,
    zitadel_management_pb.AddCustomLoginPolicyResponse,
    (request: zitadel_management_pb.AddCustomLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddCustomLoginPolicyResponse.deserializeBinary
  );

  addCustomLoginPolicy(
    request: zitadel_management_pb.AddCustomLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddCustomLoginPolicyResponse>;

  addCustomLoginPolicy(
    request: zitadel_management_pb.AddCustomLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddCustomLoginPolicyResponse>;

  addCustomLoginPolicy(
    request: zitadel_management_pb.AddCustomLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddCustomLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddCustomLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomLoginPolicy);
  }

  methodDescriptorUpdateCustomLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateCustomLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateCustomLoginPolicyRequest,
    zitadel_management_pb.UpdateCustomLoginPolicyResponse,
    (request: zitadel_management_pb.UpdateCustomLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateCustomLoginPolicyResponse.deserializeBinary
  );

  updateCustomLoginPolicy(
    request: zitadel_management_pb.UpdateCustomLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateCustomLoginPolicyResponse>;

  updateCustomLoginPolicy(
    request: zitadel_management_pb.UpdateCustomLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateCustomLoginPolicyResponse>;

  updateCustomLoginPolicy(
    request: zitadel_management_pb.UpdateCustomLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateCustomLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateCustomLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomLoginPolicy);
  }

  methodDescriptorResetLoginPolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetLoginPolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetLoginPolicyToDefaultRequest,
    zitadel_management_pb.ResetLoginPolicyToDefaultResponse,
    (request: zitadel_management_pb.ResetLoginPolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetLoginPolicyToDefaultResponse.deserializeBinary
  );

  resetLoginPolicyToDefault(
    request: zitadel_management_pb.ResetLoginPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetLoginPolicyToDefaultResponse>;

  resetLoginPolicyToDefault(
    request: zitadel_management_pb.ResetLoginPolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetLoginPolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetLoginPolicyToDefaultResponse>;

  resetLoginPolicyToDefault(
    request: zitadel_management_pb.ResetLoginPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetLoginPolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetLoginPolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetLoginPolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetLoginPolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetLoginPolicyToDefault);
  }

  methodDescriptorListLoginPolicyIDPs = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListLoginPolicyIDPs',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListLoginPolicyIDPsRequest,
    zitadel_management_pb.ListLoginPolicyIDPsResponse,
    (request: zitadel_management_pb.ListLoginPolicyIDPsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListLoginPolicyIDPsResponse.deserializeBinary
  );

  listLoginPolicyIDPs(
    request: zitadel_management_pb.ListLoginPolicyIDPsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListLoginPolicyIDPsResponse>;

  listLoginPolicyIDPs(
    request: zitadel_management_pb.ListLoginPolicyIDPsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListLoginPolicyIDPsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListLoginPolicyIDPsResponse>;

  listLoginPolicyIDPs(
    request: zitadel_management_pb.ListLoginPolicyIDPsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListLoginPolicyIDPsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListLoginPolicyIDPs',
        request,
        metadata || {},
        this.methodDescriptorListLoginPolicyIDPs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListLoginPolicyIDPs',
    request,
    metadata || {},
    this.methodDescriptorListLoginPolicyIDPs);
  }

  methodDescriptorAddIDPToLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddIDPToLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddIDPToLoginPolicyRequest,
    zitadel_management_pb.AddIDPToLoginPolicyResponse,
    (request: zitadel_management_pb.AddIDPToLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddIDPToLoginPolicyResponse.deserializeBinary
  );

  addIDPToLoginPolicy(
    request: zitadel_management_pb.AddIDPToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddIDPToLoginPolicyResponse>;

  addIDPToLoginPolicy(
    request: zitadel_management_pb.AddIDPToLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddIDPToLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddIDPToLoginPolicyResponse>;

  addIDPToLoginPolicy(
    request: zitadel_management_pb.AddIDPToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddIDPToLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddIDPToLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddIDPToLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddIDPToLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddIDPToLoginPolicy);
  }

  methodDescriptorRemoveIDPFromLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveIDPFromLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveIDPFromLoginPolicyRequest,
    zitadel_management_pb.RemoveIDPFromLoginPolicyResponse,
    (request: zitadel_management_pb.RemoveIDPFromLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveIDPFromLoginPolicyResponse.deserializeBinary
  );

  removeIDPFromLoginPolicy(
    request: zitadel_management_pb.RemoveIDPFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveIDPFromLoginPolicyResponse>;

  removeIDPFromLoginPolicy(
    request: zitadel_management_pb.RemoveIDPFromLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveIDPFromLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveIDPFromLoginPolicyResponse>;

  removeIDPFromLoginPolicy(
    request: zitadel_management_pb.RemoveIDPFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveIDPFromLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveIDPFromLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorRemoveIDPFromLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveIDPFromLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorRemoveIDPFromLoginPolicy);
  }

  methodDescriptorListLoginPolicySecondFactors = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListLoginPolicySecondFactors',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListLoginPolicySecondFactorsRequest,
    zitadel_management_pb.ListLoginPolicySecondFactorsResponse,
    (request: zitadel_management_pb.ListLoginPolicySecondFactorsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListLoginPolicySecondFactorsResponse.deserializeBinary
  );

  listLoginPolicySecondFactors(
    request: zitadel_management_pb.ListLoginPolicySecondFactorsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListLoginPolicySecondFactorsResponse>;

  listLoginPolicySecondFactors(
    request: zitadel_management_pb.ListLoginPolicySecondFactorsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListLoginPolicySecondFactorsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListLoginPolicySecondFactorsResponse>;

  listLoginPolicySecondFactors(
    request: zitadel_management_pb.ListLoginPolicySecondFactorsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListLoginPolicySecondFactorsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListLoginPolicySecondFactors',
        request,
        metadata || {},
        this.methodDescriptorListLoginPolicySecondFactors,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListLoginPolicySecondFactors',
    request,
    metadata || {},
    this.methodDescriptorListLoginPolicySecondFactors);
  }

  methodDescriptorAddSecondFactorToLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddSecondFactorToLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddSecondFactorToLoginPolicyRequest,
    zitadel_management_pb.AddSecondFactorToLoginPolicyResponse,
    (request: zitadel_management_pb.AddSecondFactorToLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddSecondFactorToLoginPolicyResponse.deserializeBinary
  );

  addSecondFactorToLoginPolicy(
    request: zitadel_management_pb.AddSecondFactorToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddSecondFactorToLoginPolicyResponse>;

  addSecondFactorToLoginPolicy(
    request: zitadel_management_pb.AddSecondFactorToLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddSecondFactorToLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddSecondFactorToLoginPolicyResponse>;

  addSecondFactorToLoginPolicy(
    request: zitadel_management_pb.AddSecondFactorToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddSecondFactorToLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddSecondFactorToLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddSecondFactorToLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddSecondFactorToLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddSecondFactorToLoginPolicy);
  }

  methodDescriptorRemoveSecondFactorFromLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveSecondFactorFromLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveSecondFactorFromLoginPolicyRequest,
    zitadel_management_pb.RemoveSecondFactorFromLoginPolicyResponse,
    (request: zitadel_management_pb.RemoveSecondFactorFromLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveSecondFactorFromLoginPolicyResponse.deserializeBinary
  );

  removeSecondFactorFromLoginPolicy(
    request: zitadel_management_pb.RemoveSecondFactorFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveSecondFactorFromLoginPolicyResponse>;

  removeSecondFactorFromLoginPolicy(
    request: zitadel_management_pb.RemoveSecondFactorFromLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveSecondFactorFromLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveSecondFactorFromLoginPolicyResponse>;

  removeSecondFactorFromLoginPolicy(
    request: zitadel_management_pb.RemoveSecondFactorFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveSecondFactorFromLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveSecondFactorFromLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorRemoveSecondFactorFromLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveSecondFactorFromLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorRemoveSecondFactorFromLoginPolicy);
  }

  methodDescriptorListLoginPolicyMultiFactors = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListLoginPolicyMultiFactors',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListLoginPolicyMultiFactorsRequest,
    zitadel_management_pb.ListLoginPolicyMultiFactorsResponse,
    (request: zitadel_management_pb.ListLoginPolicyMultiFactorsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListLoginPolicyMultiFactorsResponse.deserializeBinary
  );

  listLoginPolicyMultiFactors(
    request: zitadel_management_pb.ListLoginPolicyMultiFactorsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListLoginPolicyMultiFactorsResponse>;

  listLoginPolicyMultiFactors(
    request: zitadel_management_pb.ListLoginPolicyMultiFactorsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListLoginPolicyMultiFactorsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListLoginPolicyMultiFactorsResponse>;

  listLoginPolicyMultiFactors(
    request: zitadel_management_pb.ListLoginPolicyMultiFactorsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListLoginPolicyMultiFactorsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListLoginPolicyMultiFactors',
        request,
        metadata || {},
        this.methodDescriptorListLoginPolicyMultiFactors,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListLoginPolicyMultiFactors',
    request,
    metadata || {},
    this.methodDescriptorListLoginPolicyMultiFactors);
  }

  methodDescriptorAddMultiFactorToLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddMultiFactorToLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddMultiFactorToLoginPolicyRequest,
    zitadel_management_pb.AddMultiFactorToLoginPolicyResponse,
    (request: zitadel_management_pb.AddMultiFactorToLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddMultiFactorToLoginPolicyResponse.deserializeBinary
  );

  addMultiFactorToLoginPolicy(
    request: zitadel_management_pb.AddMultiFactorToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddMultiFactorToLoginPolicyResponse>;

  addMultiFactorToLoginPolicy(
    request: zitadel_management_pb.AddMultiFactorToLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddMultiFactorToLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddMultiFactorToLoginPolicyResponse>;

  addMultiFactorToLoginPolicy(
    request: zitadel_management_pb.AddMultiFactorToLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddMultiFactorToLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddMultiFactorToLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddMultiFactorToLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddMultiFactorToLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddMultiFactorToLoginPolicy);
  }

  methodDescriptorRemoveMultiFactorFromLoginPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveMultiFactorFromLoginPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveMultiFactorFromLoginPolicyRequest,
    zitadel_management_pb.RemoveMultiFactorFromLoginPolicyResponse,
    (request: zitadel_management_pb.RemoveMultiFactorFromLoginPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveMultiFactorFromLoginPolicyResponse.deserializeBinary
  );

  removeMultiFactorFromLoginPolicy(
    request: zitadel_management_pb.RemoveMultiFactorFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveMultiFactorFromLoginPolicyResponse>;

  removeMultiFactorFromLoginPolicy(
    request: zitadel_management_pb.RemoveMultiFactorFromLoginPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveMultiFactorFromLoginPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveMultiFactorFromLoginPolicyResponse>;

  removeMultiFactorFromLoginPolicy(
    request: zitadel_management_pb.RemoveMultiFactorFromLoginPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveMultiFactorFromLoginPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveMultiFactorFromLoginPolicy',
        request,
        metadata || {},
        this.methodDescriptorRemoveMultiFactorFromLoginPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveMultiFactorFromLoginPolicy',
    request,
    metadata || {},
    this.methodDescriptorRemoveMultiFactorFromLoginPolicy);
  }

  methodDescriptorGetPasswordComplexityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetPasswordComplexityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetPasswordComplexityPolicyRequest,
    zitadel_management_pb.GetPasswordComplexityPolicyResponse,
    (request: zitadel_management_pb.GetPasswordComplexityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetPasswordComplexityPolicyResponse.deserializeBinary
  );

  getPasswordComplexityPolicy(
    request: zitadel_management_pb.GetPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetPasswordComplexityPolicyResponse>;

  getPasswordComplexityPolicy(
    request: zitadel_management_pb.GetPasswordComplexityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPasswordComplexityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetPasswordComplexityPolicyResponse>;

  getPasswordComplexityPolicy(
    request: zitadel_management_pb.GetPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPasswordComplexityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetPasswordComplexityPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetPasswordComplexityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetPasswordComplexityPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetPasswordComplexityPolicy);
  }

  methodDescriptorGetDefaultPasswordComplexityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultPasswordComplexityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultPasswordComplexityPolicyRequest,
    zitadel_management_pb.GetDefaultPasswordComplexityPolicyResponse,
    (request: zitadel_management_pb.GetDefaultPasswordComplexityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultPasswordComplexityPolicyResponse.deserializeBinary
  );

  getDefaultPasswordComplexityPolicy(
    request: zitadel_management_pb.GetDefaultPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultPasswordComplexityPolicyResponse>;

  getDefaultPasswordComplexityPolicy(
    request: zitadel_management_pb.GetDefaultPasswordComplexityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordComplexityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultPasswordComplexityPolicyResponse>;

  getDefaultPasswordComplexityPolicy(
    request: zitadel_management_pb.GetDefaultPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordComplexityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultPasswordComplexityPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPasswordComplexityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultPasswordComplexityPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPasswordComplexityPolicy);
  }

  methodDescriptorAddCustomPasswordComplexityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddCustomPasswordComplexityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddCustomPasswordComplexityPolicyRequest,
    zitadel_management_pb.AddCustomPasswordComplexityPolicyResponse,
    (request: zitadel_management_pb.AddCustomPasswordComplexityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddCustomPasswordComplexityPolicyResponse.deserializeBinary
  );

  addCustomPasswordComplexityPolicy(
    request: zitadel_management_pb.AddCustomPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddCustomPasswordComplexityPolicyResponse>;

  addCustomPasswordComplexityPolicy(
    request: zitadel_management_pb.AddCustomPasswordComplexityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomPasswordComplexityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddCustomPasswordComplexityPolicyResponse>;

  addCustomPasswordComplexityPolicy(
    request: zitadel_management_pb.AddCustomPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomPasswordComplexityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddCustomPasswordComplexityPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomPasswordComplexityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddCustomPasswordComplexityPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomPasswordComplexityPolicy);
  }

  methodDescriptorUpdateCustomPasswordComplexityPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateCustomPasswordComplexityPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateCustomPasswordComplexityPolicyRequest,
    zitadel_management_pb.UpdateCustomPasswordComplexityPolicyResponse,
    (request: zitadel_management_pb.UpdateCustomPasswordComplexityPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateCustomPasswordComplexityPolicyResponse.deserializeBinary
  );

  updateCustomPasswordComplexityPolicy(
    request: zitadel_management_pb.UpdateCustomPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateCustomPasswordComplexityPolicyResponse>;

  updateCustomPasswordComplexityPolicy(
    request: zitadel_management_pb.UpdateCustomPasswordComplexityPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomPasswordComplexityPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateCustomPasswordComplexityPolicyResponse>;

  updateCustomPasswordComplexityPolicy(
    request: zitadel_management_pb.UpdateCustomPasswordComplexityPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomPasswordComplexityPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateCustomPasswordComplexityPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomPasswordComplexityPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateCustomPasswordComplexityPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomPasswordComplexityPolicy);
  }

  methodDescriptorResetPasswordComplexityPolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetPasswordComplexityPolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultRequest,
    zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultResponse,
    (request: zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultResponse.deserializeBinary
  );

  resetPasswordComplexityPolicyToDefault(
    request: zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultResponse>;

  resetPasswordComplexityPolicyToDefault(
    request: zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultResponse>;

  resetPasswordComplexityPolicyToDefault(
    request: zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetPasswordComplexityPolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetPasswordComplexityPolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetPasswordComplexityPolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetPasswordComplexityPolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetPasswordComplexityPolicyToDefault);
  }

  methodDescriptorGetPasswordAgePolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetPasswordAgePolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetPasswordAgePolicyRequest,
    zitadel_management_pb.GetPasswordAgePolicyResponse,
    (request: zitadel_management_pb.GetPasswordAgePolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetPasswordAgePolicyResponse.deserializeBinary
  );

  getPasswordAgePolicy(
    request: zitadel_management_pb.GetPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetPasswordAgePolicyResponse>;

  getPasswordAgePolicy(
    request: zitadel_management_pb.GetPasswordAgePolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPasswordAgePolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetPasswordAgePolicyResponse>;

  getPasswordAgePolicy(
    request: zitadel_management_pb.GetPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPasswordAgePolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetPasswordAgePolicy',
        request,
        metadata || {},
        this.methodDescriptorGetPasswordAgePolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetPasswordAgePolicy',
    request,
    metadata || {},
    this.methodDescriptorGetPasswordAgePolicy);
  }

  methodDescriptorGetDefaultPasswordAgePolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultPasswordAgePolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultPasswordAgePolicyRequest,
    zitadel_management_pb.GetDefaultPasswordAgePolicyResponse,
    (request: zitadel_management_pb.GetDefaultPasswordAgePolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultPasswordAgePolicyResponse.deserializeBinary
  );

  getDefaultPasswordAgePolicy(
    request: zitadel_management_pb.GetDefaultPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultPasswordAgePolicyResponse>;

  getDefaultPasswordAgePolicy(
    request: zitadel_management_pb.GetDefaultPasswordAgePolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordAgePolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultPasswordAgePolicyResponse>;

  getDefaultPasswordAgePolicy(
    request: zitadel_management_pb.GetDefaultPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordAgePolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultPasswordAgePolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPasswordAgePolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultPasswordAgePolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPasswordAgePolicy);
  }

  methodDescriptorAddCustomPasswordAgePolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddCustomPasswordAgePolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddCustomPasswordAgePolicyRequest,
    zitadel_management_pb.AddCustomPasswordAgePolicyResponse,
    (request: zitadel_management_pb.AddCustomPasswordAgePolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddCustomPasswordAgePolicyResponse.deserializeBinary
  );

  addCustomPasswordAgePolicy(
    request: zitadel_management_pb.AddCustomPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddCustomPasswordAgePolicyResponse>;

  addCustomPasswordAgePolicy(
    request: zitadel_management_pb.AddCustomPasswordAgePolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomPasswordAgePolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddCustomPasswordAgePolicyResponse>;

  addCustomPasswordAgePolicy(
    request: zitadel_management_pb.AddCustomPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomPasswordAgePolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddCustomPasswordAgePolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomPasswordAgePolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddCustomPasswordAgePolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomPasswordAgePolicy);
  }

  methodDescriptorUpdateCustomPasswordAgePolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateCustomPasswordAgePolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateCustomPasswordAgePolicyRequest,
    zitadel_management_pb.UpdateCustomPasswordAgePolicyResponse,
    (request: zitadel_management_pb.UpdateCustomPasswordAgePolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateCustomPasswordAgePolicyResponse.deserializeBinary
  );

  updateCustomPasswordAgePolicy(
    request: zitadel_management_pb.UpdateCustomPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateCustomPasswordAgePolicyResponse>;

  updateCustomPasswordAgePolicy(
    request: zitadel_management_pb.UpdateCustomPasswordAgePolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomPasswordAgePolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateCustomPasswordAgePolicyResponse>;

  updateCustomPasswordAgePolicy(
    request: zitadel_management_pb.UpdateCustomPasswordAgePolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomPasswordAgePolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateCustomPasswordAgePolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomPasswordAgePolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateCustomPasswordAgePolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomPasswordAgePolicy);
  }

  methodDescriptorResetPasswordAgePolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetPasswordAgePolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetPasswordAgePolicyToDefaultRequest,
    zitadel_management_pb.ResetPasswordAgePolicyToDefaultResponse,
    (request: zitadel_management_pb.ResetPasswordAgePolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetPasswordAgePolicyToDefaultResponse.deserializeBinary
  );

  resetPasswordAgePolicyToDefault(
    request: zitadel_management_pb.ResetPasswordAgePolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetPasswordAgePolicyToDefaultResponse>;

  resetPasswordAgePolicyToDefault(
    request: zitadel_management_pb.ResetPasswordAgePolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetPasswordAgePolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetPasswordAgePolicyToDefaultResponse>;

  resetPasswordAgePolicyToDefault(
    request: zitadel_management_pb.ResetPasswordAgePolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetPasswordAgePolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetPasswordAgePolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetPasswordAgePolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetPasswordAgePolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetPasswordAgePolicyToDefault);
  }

  methodDescriptorGetLockoutPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetLockoutPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetLockoutPolicyRequest,
    zitadel_management_pb.GetLockoutPolicyResponse,
    (request: zitadel_management_pb.GetLockoutPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetLockoutPolicyResponse.deserializeBinary
  );

  getLockoutPolicy(
    request: zitadel_management_pb.GetLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetLockoutPolicyResponse>;

  getLockoutPolicy(
    request: zitadel_management_pb.GetLockoutPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetLockoutPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetLockoutPolicyResponse>;

  getLockoutPolicy(
    request: zitadel_management_pb.GetLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetLockoutPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetLockoutPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetLockoutPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetLockoutPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetLockoutPolicy);
  }

  methodDescriptorGetDefaultLockoutPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultLockoutPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultLockoutPolicyRequest,
    zitadel_management_pb.GetDefaultLockoutPolicyResponse,
    (request: zitadel_management_pb.GetDefaultLockoutPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultLockoutPolicyResponse.deserializeBinary
  );

  getDefaultLockoutPolicy(
    request: zitadel_management_pb.GetDefaultLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultLockoutPolicyResponse>;

  getDefaultLockoutPolicy(
    request: zitadel_management_pb.GetDefaultLockoutPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultLockoutPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultLockoutPolicyResponse>;

  getDefaultLockoutPolicy(
    request: zitadel_management_pb.GetDefaultLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultLockoutPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultLockoutPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultLockoutPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultLockoutPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultLockoutPolicy);
  }

  methodDescriptorAddCustomLockoutPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddCustomLockoutPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddCustomLockoutPolicyRequest,
    zitadel_management_pb.AddCustomLockoutPolicyResponse,
    (request: zitadel_management_pb.AddCustomLockoutPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddCustomLockoutPolicyResponse.deserializeBinary
  );

  addCustomLockoutPolicy(
    request: zitadel_management_pb.AddCustomLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddCustomLockoutPolicyResponse>;

  addCustomLockoutPolicy(
    request: zitadel_management_pb.AddCustomLockoutPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomLockoutPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddCustomLockoutPolicyResponse>;

  addCustomLockoutPolicy(
    request: zitadel_management_pb.AddCustomLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomLockoutPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddCustomLockoutPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomLockoutPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddCustomLockoutPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomLockoutPolicy);
  }

  methodDescriptorUpdateCustomLockoutPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateCustomLockoutPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateCustomLockoutPolicyRequest,
    zitadel_management_pb.UpdateCustomLockoutPolicyResponse,
    (request: zitadel_management_pb.UpdateCustomLockoutPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateCustomLockoutPolicyResponse.deserializeBinary
  );

  updateCustomLockoutPolicy(
    request: zitadel_management_pb.UpdateCustomLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateCustomLockoutPolicyResponse>;

  updateCustomLockoutPolicy(
    request: zitadel_management_pb.UpdateCustomLockoutPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomLockoutPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateCustomLockoutPolicyResponse>;

  updateCustomLockoutPolicy(
    request: zitadel_management_pb.UpdateCustomLockoutPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomLockoutPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateCustomLockoutPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomLockoutPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateCustomLockoutPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomLockoutPolicy);
  }

  methodDescriptorResetLockoutPolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetLockoutPolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetLockoutPolicyToDefaultRequest,
    zitadel_management_pb.ResetLockoutPolicyToDefaultResponse,
    (request: zitadel_management_pb.ResetLockoutPolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetLockoutPolicyToDefaultResponse.deserializeBinary
  );

  resetLockoutPolicyToDefault(
    request: zitadel_management_pb.ResetLockoutPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetLockoutPolicyToDefaultResponse>;

  resetLockoutPolicyToDefault(
    request: zitadel_management_pb.ResetLockoutPolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetLockoutPolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetLockoutPolicyToDefaultResponse>;

  resetLockoutPolicyToDefault(
    request: zitadel_management_pb.ResetLockoutPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetLockoutPolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetLockoutPolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetLockoutPolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetLockoutPolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetLockoutPolicyToDefault);
  }

  methodDescriptorGetPrivacyPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetPrivacyPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetPrivacyPolicyRequest,
    zitadel_management_pb.GetPrivacyPolicyResponse,
    (request: zitadel_management_pb.GetPrivacyPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetPrivacyPolicyResponse.deserializeBinary
  );

  getPrivacyPolicy(
    request: zitadel_management_pb.GetPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetPrivacyPolicyResponse>;

  getPrivacyPolicy(
    request: zitadel_management_pb.GetPrivacyPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPrivacyPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetPrivacyPolicyResponse>;

  getPrivacyPolicy(
    request: zitadel_management_pb.GetPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPrivacyPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetPrivacyPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetPrivacyPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetPrivacyPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetPrivacyPolicy);
  }

  methodDescriptorGetDefaultPrivacyPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultPrivacyPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultPrivacyPolicyRequest,
    zitadel_management_pb.GetDefaultPrivacyPolicyResponse,
    (request: zitadel_management_pb.GetDefaultPrivacyPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultPrivacyPolicyResponse.deserializeBinary
  );

  getDefaultPrivacyPolicy(
    request: zitadel_management_pb.GetDefaultPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultPrivacyPolicyResponse>;

  getDefaultPrivacyPolicy(
    request: zitadel_management_pb.GetDefaultPrivacyPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPrivacyPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultPrivacyPolicyResponse>;

  getDefaultPrivacyPolicy(
    request: zitadel_management_pb.GetDefaultPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPrivacyPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultPrivacyPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPrivacyPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultPrivacyPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPrivacyPolicy);
  }

  methodDescriptorAddCustomPrivacyPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddCustomPrivacyPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddCustomPrivacyPolicyRequest,
    zitadel_management_pb.AddCustomPrivacyPolicyResponse,
    (request: zitadel_management_pb.AddCustomPrivacyPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddCustomPrivacyPolicyResponse.deserializeBinary
  );

  addCustomPrivacyPolicy(
    request: zitadel_management_pb.AddCustomPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddCustomPrivacyPolicyResponse>;

  addCustomPrivacyPolicy(
    request: zitadel_management_pb.AddCustomPrivacyPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomPrivacyPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddCustomPrivacyPolicyResponse>;

  addCustomPrivacyPolicy(
    request: zitadel_management_pb.AddCustomPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomPrivacyPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddCustomPrivacyPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomPrivacyPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddCustomPrivacyPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomPrivacyPolicy);
  }

  methodDescriptorUpdateCustomPrivacyPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateCustomPrivacyPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateCustomPrivacyPolicyRequest,
    zitadel_management_pb.UpdateCustomPrivacyPolicyResponse,
    (request: zitadel_management_pb.UpdateCustomPrivacyPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateCustomPrivacyPolicyResponse.deserializeBinary
  );

  updateCustomPrivacyPolicy(
    request: zitadel_management_pb.UpdateCustomPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateCustomPrivacyPolicyResponse>;

  updateCustomPrivacyPolicy(
    request: zitadel_management_pb.UpdateCustomPrivacyPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomPrivacyPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateCustomPrivacyPolicyResponse>;

  updateCustomPrivacyPolicy(
    request: zitadel_management_pb.UpdateCustomPrivacyPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomPrivacyPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateCustomPrivacyPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomPrivacyPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateCustomPrivacyPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomPrivacyPolicy);
  }

  methodDescriptorResetPrivacyPolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetPrivacyPolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetPrivacyPolicyToDefaultRequest,
    zitadel_management_pb.ResetPrivacyPolicyToDefaultResponse,
    (request: zitadel_management_pb.ResetPrivacyPolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetPrivacyPolicyToDefaultResponse.deserializeBinary
  );

  resetPrivacyPolicyToDefault(
    request: zitadel_management_pb.ResetPrivacyPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetPrivacyPolicyToDefaultResponse>;

  resetPrivacyPolicyToDefault(
    request: zitadel_management_pb.ResetPrivacyPolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetPrivacyPolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetPrivacyPolicyToDefaultResponse>;

  resetPrivacyPolicyToDefault(
    request: zitadel_management_pb.ResetPrivacyPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetPrivacyPolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetPrivacyPolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetPrivacyPolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetPrivacyPolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetPrivacyPolicyToDefault);
  }

  methodDescriptorGetNotificationPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetNotificationPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetNotificationPolicyRequest,
    zitadel_management_pb.GetNotificationPolicyResponse,
    (request: zitadel_management_pb.GetNotificationPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetNotificationPolicyResponse.deserializeBinary
  );

  getNotificationPolicy(
    request: zitadel_management_pb.GetNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetNotificationPolicyResponse>;

  getNotificationPolicy(
    request: zitadel_management_pb.GetNotificationPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetNotificationPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetNotificationPolicyResponse>;

  getNotificationPolicy(
    request: zitadel_management_pb.GetNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetNotificationPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetNotificationPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetNotificationPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetNotificationPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetNotificationPolicy);
  }

  methodDescriptorGetDefaultNotificationPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultNotificationPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultNotificationPolicyRequest,
    zitadel_management_pb.GetDefaultNotificationPolicyResponse,
    (request: zitadel_management_pb.GetDefaultNotificationPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultNotificationPolicyResponse.deserializeBinary
  );

  getDefaultNotificationPolicy(
    request: zitadel_management_pb.GetDefaultNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultNotificationPolicyResponse>;

  getDefaultNotificationPolicy(
    request: zitadel_management_pb.GetDefaultNotificationPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultNotificationPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultNotificationPolicyResponse>;

  getDefaultNotificationPolicy(
    request: zitadel_management_pb.GetDefaultNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultNotificationPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultNotificationPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultNotificationPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultNotificationPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultNotificationPolicy);
  }

  methodDescriptorAddCustomNotificationPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddCustomNotificationPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddCustomNotificationPolicyRequest,
    zitadel_management_pb.AddCustomNotificationPolicyResponse,
    (request: zitadel_management_pb.AddCustomNotificationPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddCustomNotificationPolicyResponse.deserializeBinary
  );

  addCustomNotificationPolicy(
    request: zitadel_management_pb.AddCustomNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddCustomNotificationPolicyResponse>;

  addCustomNotificationPolicy(
    request: zitadel_management_pb.AddCustomNotificationPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomNotificationPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddCustomNotificationPolicyResponse>;

  addCustomNotificationPolicy(
    request: zitadel_management_pb.AddCustomNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomNotificationPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddCustomNotificationPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomNotificationPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddCustomNotificationPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomNotificationPolicy);
  }

  methodDescriptorUpdateCustomNotificationPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateCustomNotificationPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateCustomNotificationPolicyRequest,
    zitadel_management_pb.UpdateCustomNotificationPolicyResponse,
    (request: zitadel_management_pb.UpdateCustomNotificationPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateCustomNotificationPolicyResponse.deserializeBinary
  );

  updateCustomNotificationPolicy(
    request: zitadel_management_pb.UpdateCustomNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateCustomNotificationPolicyResponse>;

  updateCustomNotificationPolicy(
    request: zitadel_management_pb.UpdateCustomNotificationPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomNotificationPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateCustomNotificationPolicyResponse>;

  updateCustomNotificationPolicy(
    request: zitadel_management_pb.UpdateCustomNotificationPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomNotificationPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateCustomNotificationPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomNotificationPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateCustomNotificationPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomNotificationPolicy);
  }

  methodDescriptorResetNotificationPolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetNotificationPolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetNotificationPolicyToDefaultRequest,
    zitadel_management_pb.ResetNotificationPolicyToDefaultResponse,
    (request: zitadel_management_pb.ResetNotificationPolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetNotificationPolicyToDefaultResponse.deserializeBinary
  );

  resetNotificationPolicyToDefault(
    request: zitadel_management_pb.ResetNotificationPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetNotificationPolicyToDefaultResponse>;

  resetNotificationPolicyToDefault(
    request: zitadel_management_pb.ResetNotificationPolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetNotificationPolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetNotificationPolicyToDefaultResponse>;

  resetNotificationPolicyToDefault(
    request: zitadel_management_pb.ResetNotificationPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetNotificationPolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetNotificationPolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetNotificationPolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetNotificationPolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetNotificationPolicyToDefault);
  }

  methodDescriptorGetLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetLabelPolicyRequest,
    zitadel_management_pb.GetLabelPolicyResponse,
    (request: zitadel_management_pb.GetLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetLabelPolicyResponse.deserializeBinary
  );

  getLabelPolicy(
    request: zitadel_management_pb.GetLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetLabelPolicyResponse>;

  getLabelPolicy(
    request: zitadel_management_pb.GetLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetLabelPolicyResponse>;

  getLabelPolicy(
    request: zitadel_management_pb.GetLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetLabelPolicy);
  }

  methodDescriptorGetPreviewLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetPreviewLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetPreviewLabelPolicyRequest,
    zitadel_management_pb.GetPreviewLabelPolicyResponse,
    (request: zitadel_management_pb.GetPreviewLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetPreviewLabelPolicyResponse.deserializeBinary
  );

  getPreviewLabelPolicy(
    request: zitadel_management_pb.GetPreviewLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetPreviewLabelPolicyResponse>;

  getPreviewLabelPolicy(
    request: zitadel_management_pb.GetPreviewLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPreviewLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetPreviewLabelPolicyResponse>;

  getPreviewLabelPolicy(
    request: zitadel_management_pb.GetPreviewLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetPreviewLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetPreviewLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetPreviewLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetPreviewLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetPreviewLabelPolicy);
  }

  methodDescriptorGetDefaultLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultLabelPolicyRequest,
    zitadel_management_pb.GetDefaultLabelPolicyResponse,
    (request: zitadel_management_pb.GetDefaultLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultLabelPolicyResponse.deserializeBinary
  );

  getDefaultLabelPolicy(
    request: zitadel_management_pb.GetDefaultLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultLabelPolicyResponse>;

  getDefaultLabelPolicy(
    request: zitadel_management_pb.GetDefaultLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultLabelPolicyResponse>;

  getDefaultLabelPolicy(
    request: zitadel_management_pb.GetDefaultLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultLabelPolicy);
  }

  methodDescriptorAddCustomLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddCustomLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddCustomLabelPolicyRequest,
    zitadel_management_pb.AddCustomLabelPolicyResponse,
    (request: zitadel_management_pb.AddCustomLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddCustomLabelPolicyResponse.deserializeBinary
  );

  addCustomLabelPolicy(
    request: zitadel_management_pb.AddCustomLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddCustomLabelPolicyResponse>;

  addCustomLabelPolicy(
    request: zitadel_management_pb.AddCustomLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddCustomLabelPolicyResponse>;

  addCustomLabelPolicy(
    request: zitadel_management_pb.AddCustomLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddCustomLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddCustomLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorAddCustomLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddCustomLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorAddCustomLabelPolicy);
  }

  methodDescriptorUpdateCustomLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateCustomLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateCustomLabelPolicyRequest,
    zitadel_management_pb.UpdateCustomLabelPolicyResponse,
    (request: zitadel_management_pb.UpdateCustomLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateCustomLabelPolicyResponse.deserializeBinary
  );

  updateCustomLabelPolicy(
    request: zitadel_management_pb.UpdateCustomLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateCustomLabelPolicyResponse>;

  updateCustomLabelPolicy(
    request: zitadel_management_pb.UpdateCustomLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateCustomLabelPolicyResponse>;

  updateCustomLabelPolicy(
    request: zitadel_management_pb.UpdateCustomLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateCustomLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateCustomLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateCustomLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomLabelPolicy);
  }

  methodDescriptorActivateCustomLabelPolicy = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ActivateCustomLabelPolicy',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ActivateCustomLabelPolicyRequest,
    zitadel_management_pb.ActivateCustomLabelPolicyResponse,
    (request: zitadel_management_pb.ActivateCustomLabelPolicyRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ActivateCustomLabelPolicyResponse.deserializeBinary
  );

  activateCustomLabelPolicy(
    request: zitadel_management_pb.ActivateCustomLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ActivateCustomLabelPolicyResponse>;

  activateCustomLabelPolicy(
    request: zitadel_management_pb.ActivateCustomLabelPolicyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ActivateCustomLabelPolicyResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ActivateCustomLabelPolicyResponse>;

  activateCustomLabelPolicy(
    request: zitadel_management_pb.ActivateCustomLabelPolicyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ActivateCustomLabelPolicyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ActivateCustomLabelPolicy',
        request,
        metadata || {},
        this.methodDescriptorActivateCustomLabelPolicy,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ActivateCustomLabelPolicy',
    request,
    metadata || {},
    this.methodDescriptorActivateCustomLabelPolicy);
  }

  methodDescriptorRemoveCustomLabelPolicyLogo = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyLogo',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveCustomLabelPolicyLogoRequest,
    zitadel_management_pb.RemoveCustomLabelPolicyLogoResponse,
    (request: zitadel_management_pb.RemoveCustomLabelPolicyLogoRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveCustomLabelPolicyLogoResponse.deserializeBinary
  );

  removeCustomLabelPolicyLogo(
    request: zitadel_management_pb.RemoveCustomLabelPolicyLogoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveCustomLabelPolicyLogoResponse>;

  removeCustomLabelPolicyLogo(
    request: zitadel_management_pb.RemoveCustomLabelPolicyLogoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyLogoResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveCustomLabelPolicyLogoResponse>;

  removeCustomLabelPolicyLogo(
    request: zitadel_management_pb.RemoveCustomLabelPolicyLogoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyLogoResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyLogo',
        request,
        metadata || {},
        this.methodDescriptorRemoveCustomLabelPolicyLogo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyLogo',
    request,
    metadata || {},
    this.methodDescriptorRemoveCustomLabelPolicyLogo);
  }

  methodDescriptorRemoveCustomLabelPolicyLogoDark = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyLogoDark',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkRequest,
    zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkResponse,
    (request: zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkResponse.deserializeBinary
  );

  removeCustomLabelPolicyLogoDark(
    request: zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkResponse>;

  removeCustomLabelPolicyLogoDark(
    request: zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkResponse>;

  removeCustomLabelPolicyLogoDark(
    request: zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyLogoDarkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyLogoDark',
        request,
        metadata || {},
        this.methodDescriptorRemoveCustomLabelPolicyLogoDark,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyLogoDark',
    request,
    metadata || {},
    this.methodDescriptorRemoveCustomLabelPolicyLogoDark);
  }

  methodDescriptorRemoveCustomLabelPolicyIcon = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyIcon',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveCustomLabelPolicyIconRequest,
    zitadel_management_pb.RemoveCustomLabelPolicyIconResponse,
    (request: zitadel_management_pb.RemoveCustomLabelPolicyIconRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveCustomLabelPolicyIconResponse.deserializeBinary
  );

  removeCustomLabelPolicyIcon(
    request: zitadel_management_pb.RemoveCustomLabelPolicyIconRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveCustomLabelPolicyIconResponse>;

  removeCustomLabelPolicyIcon(
    request: zitadel_management_pb.RemoveCustomLabelPolicyIconRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyIconResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveCustomLabelPolicyIconResponse>;

  removeCustomLabelPolicyIcon(
    request: zitadel_management_pb.RemoveCustomLabelPolicyIconRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyIconResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyIcon',
        request,
        metadata || {},
        this.methodDescriptorRemoveCustomLabelPolicyIcon,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyIcon',
    request,
    metadata || {},
    this.methodDescriptorRemoveCustomLabelPolicyIcon);
  }

  methodDescriptorRemoveCustomLabelPolicyIconDark = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyIconDark',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveCustomLabelPolicyIconDarkRequest,
    zitadel_management_pb.RemoveCustomLabelPolicyIconDarkResponse,
    (request: zitadel_management_pb.RemoveCustomLabelPolicyIconDarkRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveCustomLabelPolicyIconDarkResponse.deserializeBinary
  );

  removeCustomLabelPolicyIconDark(
    request: zitadel_management_pb.RemoveCustomLabelPolicyIconDarkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveCustomLabelPolicyIconDarkResponse>;

  removeCustomLabelPolicyIconDark(
    request: zitadel_management_pb.RemoveCustomLabelPolicyIconDarkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyIconDarkResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveCustomLabelPolicyIconDarkResponse>;

  removeCustomLabelPolicyIconDark(
    request: zitadel_management_pb.RemoveCustomLabelPolicyIconDarkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyIconDarkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyIconDark',
        request,
        metadata || {},
        this.methodDescriptorRemoveCustomLabelPolicyIconDark,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyIconDark',
    request,
    metadata || {},
    this.methodDescriptorRemoveCustomLabelPolicyIconDark);
  }

  methodDescriptorRemoveCustomLabelPolicyFont = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyFont',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveCustomLabelPolicyFontRequest,
    zitadel_management_pb.RemoveCustomLabelPolicyFontResponse,
    (request: zitadel_management_pb.RemoveCustomLabelPolicyFontRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveCustomLabelPolicyFontResponse.deserializeBinary
  );

  removeCustomLabelPolicyFont(
    request: zitadel_management_pb.RemoveCustomLabelPolicyFontRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveCustomLabelPolicyFontResponse>;

  removeCustomLabelPolicyFont(
    request: zitadel_management_pb.RemoveCustomLabelPolicyFontRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyFontResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveCustomLabelPolicyFontResponse>;

  removeCustomLabelPolicyFont(
    request: zitadel_management_pb.RemoveCustomLabelPolicyFontRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveCustomLabelPolicyFontResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyFont',
        request,
        metadata || {},
        this.methodDescriptorRemoveCustomLabelPolicyFont,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveCustomLabelPolicyFont',
    request,
    metadata || {},
    this.methodDescriptorRemoveCustomLabelPolicyFont);
  }

  methodDescriptorResetLabelPolicyToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetLabelPolicyToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetLabelPolicyToDefaultRequest,
    zitadel_management_pb.ResetLabelPolicyToDefaultResponse,
    (request: zitadel_management_pb.ResetLabelPolicyToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetLabelPolicyToDefaultResponse.deserializeBinary
  );

  resetLabelPolicyToDefault(
    request: zitadel_management_pb.ResetLabelPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetLabelPolicyToDefaultResponse>;

  resetLabelPolicyToDefault(
    request: zitadel_management_pb.ResetLabelPolicyToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetLabelPolicyToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetLabelPolicyToDefaultResponse>;

  resetLabelPolicyToDefault(
    request: zitadel_management_pb.ResetLabelPolicyToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetLabelPolicyToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetLabelPolicyToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetLabelPolicyToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetLabelPolicyToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetLabelPolicyToDefault);
  }

  methodDescriptorGetCustomInitMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomInitMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomInitMessageTextRequest,
    zitadel_management_pb.GetCustomInitMessageTextResponse,
    (request: zitadel_management_pb.GetCustomInitMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomInitMessageTextResponse.deserializeBinary
  );

  getCustomInitMessageText(
    request: zitadel_management_pb.GetCustomInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomInitMessageTextResponse>;

  getCustomInitMessageText(
    request: zitadel_management_pb.GetCustomInitMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomInitMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomInitMessageTextResponse>;

  getCustomInitMessageText(
    request: zitadel_management_pb.GetCustomInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomInitMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomInitMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomInitMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomInitMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomInitMessageText);
  }

  methodDescriptorGetDefaultInitMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultInitMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultInitMessageTextRequest,
    zitadel_management_pb.GetDefaultInitMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultInitMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultInitMessageTextResponse.deserializeBinary
  );

  getDefaultInitMessageText(
    request: zitadel_management_pb.GetDefaultInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultInitMessageTextResponse>;

  getDefaultInitMessageText(
    request: zitadel_management_pb.GetDefaultInitMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultInitMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultInitMessageTextResponse>;

  getDefaultInitMessageText(
    request: zitadel_management_pb.GetDefaultInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultInitMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultInitMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultInitMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultInitMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultInitMessageText);
  }

  methodDescriptorSetCustomInitMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomInitMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomInitMessageTextRequest,
    zitadel_management_pb.SetCustomInitMessageTextResponse,
    (request: zitadel_management_pb.SetCustomInitMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomInitMessageTextResponse.deserializeBinary
  );

  setCustomInitMessageText(
    request: zitadel_management_pb.SetCustomInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomInitMessageTextResponse>;

  setCustomInitMessageText(
    request: zitadel_management_pb.SetCustomInitMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomInitMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomInitMessageTextResponse>;

  setCustomInitMessageText(
    request: zitadel_management_pb.SetCustomInitMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomInitMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomInitMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomInitMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomInitMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomInitMessageText);
  }

  methodDescriptorResetCustomInitMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomInitMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomInitMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomInitMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomInitMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomInitMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomInitMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomInitMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomInitMessageTextToDefaultResponse>;

  resetCustomInitMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomInitMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomInitMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomInitMessageTextToDefaultResponse>;

  resetCustomInitMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomInitMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomInitMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomInitMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomInitMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomInitMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomInitMessageTextToDefault);
  }

  methodDescriptorGetCustomPasswordResetMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomPasswordResetMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomPasswordResetMessageTextRequest,
    zitadel_management_pb.GetCustomPasswordResetMessageTextResponse,
    (request: zitadel_management_pb.GetCustomPasswordResetMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomPasswordResetMessageTextResponse.deserializeBinary
  );

  getCustomPasswordResetMessageText(
    request: zitadel_management_pb.GetCustomPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomPasswordResetMessageTextResponse>;

  getCustomPasswordResetMessageText(
    request: zitadel_management_pb.GetCustomPasswordResetMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomPasswordResetMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomPasswordResetMessageTextResponse>;

  getCustomPasswordResetMessageText(
    request: zitadel_management_pb.GetCustomPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomPasswordResetMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomPasswordResetMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomPasswordResetMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomPasswordResetMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomPasswordResetMessageText);
  }

  methodDescriptorGetDefaultPasswordResetMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultPasswordResetMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultPasswordResetMessageTextRequest,
    zitadel_management_pb.GetDefaultPasswordResetMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultPasswordResetMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultPasswordResetMessageTextResponse.deserializeBinary
  );

  getDefaultPasswordResetMessageText(
    request: zitadel_management_pb.GetDefaultPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultPasswordResetMessageTextResponse>;

  getDefaultPasswordResetMessageText(
    request: zitadel_management_pb.GetDefaultPasswordResetMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordResetMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultPasswordResetMessageTextResponse>;

  getDefaultPasswordResetMessageText(
    request: zitadel_management_pb.GetDefaultPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordResetMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultPasswordResetMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPasswordResetMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultPasswordResetMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPasswordResetMessageText);
  }

  methodDescriptorSetCustomPasswordResetMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomPasswordResetMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomPasswordResetMessageTextRequest,
    zitadel_management_pb.SetCustomPasswordResetMessageTextResponse,
    (request: zitadel_management_pb.SetCustomPasswordResetMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomPasswordResetMessageTextResponse.deserializeBinary
  );

  setCustomPasswordResetMessageText(
    request: zitadel_management_pb.SetCustomPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomPasswordResetMessageTextResponse>;

  setCustomPasswordResetMessageText(
    request: zitadel_management_pb.SetCustomPasswordResetMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomPasswordResetMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomPasswordResetMessageTextResponse>;

  setCustomPasswordResetMessageText(
    request: zitadel_management_pb.SetCustomPasswordResetMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomPasswordResetMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomPasswordResetMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomPasswordResetMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomPasswordResetMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomPasswordResetMessageText);
  }

  methodDescriptorResetCustomPasswordResetMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomPasswordResetMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomPasswordResetMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultResponse>;

  resetCustomPasswordResetMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultResponse>;

  resetCustomPasswordResetMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomPasswordResetMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomPasswordResetMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomPasswordResetMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomPasswordResetMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomPasswordResetMessageTextToDefault);
  }

  methodDescriptorGetCustomVerifyEmailMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomVerifyEmailMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomVerifyEmailMessageTextRequest,
    zitadel_management_pb.GetCustomVerifyEmailMessageTextResponse,
    (request: zitadel_management_pb.GetCustomVerifyEmailMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomVerifyEmailMessageTextResponse.deserializeBinary
  );

  getCustomVerifyEmailMessageText(
    request: zitadel_management_pb.GetCustomVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomVerifyEmailMessageTextResponse>;

  getCustomVerifyEmailMessageText(
    request: zitadel_management_pb.GetCustomVerifyEmailMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomVerifyEmailMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomVerifyEmailMessageTextResponse>;

  getCustomVerifyEmailMessageText(
    request: zitadel_management_pb.GetCustomVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomVerifyEmailMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomVerifyEmailMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomVerifyEmailMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomVerifyEmailMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomVerifyEmailMessageText);
  }

  methodDescriptorGetDefaultVerifyEmailMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultVerifyEmailMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultVerifyEmailMessageTextRequest,
    zitadel_management_pb.GetDefaultVerifyEmailMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultVerifyEmailMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultVerifyEmailMessageTextResponse.deserializeBinary
  );

  getDefaultVerifyEmailMessageText(
    request: zitadel_management_pb.GetDefaultVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultVerifyEmailMessageTextResponse>;

  getDefaultVerifyEmailMessageText(
    request: zitadel_management_pb.GetDefaultVerifyEmailMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultVerifyEmailMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultVerifyEmailMessageTextResponse>;

  getDefaultVerifyEmailMessageText(
    request: zitadel_management_pb.GetDefaultVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultVerifyEmailMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultVerifyEmailMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultVerifyEmailMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultVerifyEmailMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultVerifyEmailMessageText);
  }

  methodDescriptorSetCustomVerifyEmailMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomVerifyEmailMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomVerifyEmailMessageTextRequest,
    zitadel_management_pb.SetCustomVerifyEmailMessageTextResponse,
    (request: zitadel_management_pb.SetCustomVerifyEmailMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomVerifyEmailMessageTextResponse.deserializeBinary
  );

  setCustomVerifyEmailMessageText(
    request: zitadel_management_pb.SetCustomVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomVerifyEmailMessageTextResponse>;

  setCustomVerifyEmailMessageText(
    request: zitadel_management_pb.SetCustomVerifyEmailMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomVerifyEmailMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomVerifyEmailMessageTextResponse>;

  setCustomVerifyEmailMessageText(
    request: zitadel_management_pb.SetCustomVerifyEmailMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomVerifyEmailMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomVerifyEmailMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomVerifyEmailMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomVerifyEmailMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomVerifyEmailMessageText);
  }

  methodDescriptorResetCustomVerifyEmailMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomVerifyEmailMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomVerifyEmailMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse>;

  resetCustomVerifyEmailMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse>;

  resetCustomVerifyEmailMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomVerifyEmailMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomVerifyEmailMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomVerifyEmailMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomVerifyEmailMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomVerifyEmailMessageTextToDefault);
  }

  methodDescriptorGetCustomVerifyPhoneMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomVerifyPhoneMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomVerifyPhoneMessageTextRequest,
    zitadel_management_pb.GetCustomVerifyPhoneMessageTextResponse,
    (request: zitadel_management_pb.GetCustomVerifyPhoneMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomVerifyPhoneMessageTextResponse.deserializeBinary
  );

  getCustomVerifyPhoneMessageText(
    request: zitadel_management_pb.GetCustomVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomVerifyPhoneMessageTextResponse>;

  getCustomVerifyPhoneMessageText(
    request: zitadel_management_pb.GetCustomVerifyPhoneMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomVerifyPhoneMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomVerifyPhoneMessageTextResponse>;

  getCustomVerifyPhoneMessageText(
    request: zitadel_management_pb.GetCustomVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomVerifyPhoneMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomVerifyPhoneMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomVerifyPhoneMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomVerifyPhoneMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomVerifyPhoneMessageText);
  }

  methodDescriptorGetDefaultVerifyPhoneMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultVerifyPhoneMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultVerifyPhoneMessageTextRequest,
    zitadel_management_pb.GetDefaultVerifyPhoneMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultVerifyPhoneMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultVerifyPhoneMessageTextResponse.deserializeBinary
  );

  getDefaultVerifyPhoneMessageText(
    request: zitadel_management_pb.GetDefaultVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultVerifyPhoneMessageTextResponse>;

  getDefaultVerifyPhoneMessageText(
    request: zitadel_management_pb.GetDefaultVerifyPhoneMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultVerifyPhoneMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultVerifyPhoneMessageTextResponse>;

  getDefaultVerifyPhoneMessageText(
    request: zitadel_management_pb.GetDefaultVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultVerifyPhoneMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultVerifyPhoneMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultVerifyPhoneMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultVerifyPhoneMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultVerifyPhoneMessageText);
  }

  methodDescriptorSetCustomVerifyPhoneMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomVerifyPhoneMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomVerifyPhoneMessageTextRequest,
    zitadel_management_pb.SetCustomVerifyPhoneMessageTextResponse,
    (request: zitadel_management_pb.SetCustomVerifyPhoneMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomVerifyPhoneMessageTextResponse.deserializeBinary
  );

  setCustomVerifyPhoneMessageText(
    request: zitadel_management_pb.SetCustomVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomVerifyPhoneMessageTextResponse>;

  setCustomVerifyPhoneMessageText(
    request: zitadel_management_pb.SetCustomVerifyPhoneMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomVerifyPhoneMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomVerifyPhoneMessageTextResponse>;

  setCustomVerifyPhoneMessageText(
    request: zitadel_management_pb.SetCustomVerifyPhoneMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomVerifyPhoneMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomVerifyPhoneMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomVerifyPhoneMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomVerifyPhoneMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomVerifyPhoneMessageText);
  }

  methodDescriptorResetCustomVerifyPhoneMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomVerifyPhoneMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomVerifyPhoneMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse>;

  resetCustomVerifyPhoneMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse>;

  resetCustomVerifyPhoneMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomVerifyPhoneMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomVerifyPhoneMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomVerifyPhoneMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomVerifyPhoneMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomVerifyPhoneMessageTextToDefault);
  }

  methodDescriptorGetCustomVerifySMSOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomVerifySMSOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomVerifySMSOTPMessageTextRequest,
    zitadel_management_pb.GetCustomVerifySMSOTPMessageTextResponse,
    (request: zitadel_management_pb.GetCustomVerifySMSOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomVerifySMSOTPMessageTextResponse.deserializeBinary
  );

  getCustomVerifySMSOTPMessageText(
    request: zitadel_management_pb.GetCustomVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomVerifySMSOTPMessageTextResponse>;

  getCustomVerifySMSOTPMessageText(
    request: zitadel_management_pb.GetCustomVerifySMSOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomVerifySMSOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomVerifySMSOTPMessageTextResponse>;

  getCustomVerifySMSOTPMessageText(
    request: zitadel_management_pb.GetCustomVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomVerifySMSOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomVerifySMSOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomVerifySMSOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomVerifySMSOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomVerifySMSOTPMessageText);
  }

  methodDescriptorGetDefaultVerifySMSOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultVerifySMSOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextRequest,
    zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextResponse.deserializeBinary
  );

  getDefaultVerifySMSOTPMessageText(
    request: zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextResponse>;

  getDefaultVerifySMSOTPMessageText(
    request: zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextResponse>;

  getDefaultVerifySMSOTPMessageText(
    request: zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultVerifySMSOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultVerifySMSOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultVerifySMSOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultVerifySMSOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultVerifySMSOTPMessageText);
  }

  methodDescriptorSetCustomVerifySMSOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomVerifySMSOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomVerifySMSOTPMessageTextRequest,
    zitadel_management_pb.SetCustomVerifySMSOTPMessageTextResponse,
    (request: zitadel_management_pb.SetCustomVerifySMSOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomVerifySMSOTPMessageTextResponse.deserializeBinary
  );

  setCustomVerifySMSOTPMessageText(
    request: zitadel_management_pb.SetCustomVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomVerifySMSOTPMessageTextResponse>;

  setCustomVerifySMSOTPMessageText(
    request: zitadel_management_pb.SetCustomVerifySMSOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomVerifySMSOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomVerifySMSOTPMessageTextResponse>;

  setCustomVerifySMSOTPMessageText(
    request: zitadel_management_pb.SetCustomVerifySMSOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomVerifySMSOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomVerifySMSOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomVerifySMSOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomVerifySMSOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomVerifySMSOTPMessageText);
  }

  methodDescriptorResetCustomVerifySMSOTPMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomVerifySMSOTPMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomVerifySMSOTPMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse>;

  resetCustomVerifySMSOTPMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse>;

  resetCustomVerifySMSOTPMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomVerifySMSOTPMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomVerifySMSOTPMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomVerifySMSOTPMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomVerifySMSOTPMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomVerifySMSOTPMessageTextToDefault);
  }

  methodDescriptorGetCustomVerifyEmailOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomVerifyEmailOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextRequest,
    zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextResponse,
    (request: zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextResponse.deserializeBinary
  );

  getCustomVerifyEmailOTPMessageText(
    request: zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextResponse>;

  getCustomVerifyEmailOTPMessageText(
    request: zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextResponse>;

  getCustomVerifyEmailOTPMessageText(
    request: zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomVerifyEmailOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomVerifyEmailOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomVerifyEmailOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomVerifyEmailOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomVerifyEmailOTPMessageText);
  }

  methodDescriptorGetDefaultVerifyEmailOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultVerifyEmailOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextRequest,
    zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextResponse.deserializeBinary
  );

  getDefaultVerifyEmailOTPMessageText(
    request: zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextResponse>;

  getDefaultVerifyEmailOTPMessageText(
    request: zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextResponse>;

  getDefaultVerifyEmailOTPMessageText(
    request: zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultVerifyEmailOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultVerifyEmailOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultVerifyEmailOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultVerifyEmailOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultVerifyEmailOTPMessageText);
  }

  methodDescriptorSetCustomVerifyEmailOTPMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomVerifyEmailOTPMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextRequest,
    zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextResponse,
    (request: zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextResponse.deserializeBinary
  );

  setCustomVerifyEmailOTPMessageText(
    request: zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextResponse>;

  setCustomVerifyEmailOTPMessageText(
    request: zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextResponse>;

  setCustomVerifyEmailOTPMessageText(
    request: zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomVerifyEmailOTPMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomVerifyEmailOTPMessageText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomVerifyEmailOTPMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomVerifyEmailOTPMessageText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomVerifyEmailOTPMessageText);
  }

  methodDescriptorResetCustomVerifyEmailOTPMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomVerifyEmailOTPMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomVerifyEmailOTPMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse>;

  resetCustomVerifyEmailOTPMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse>;

  resetCustomVerifyEmailOTPMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomVerifyEmailOTPMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomVerifyEmailOTPMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomVerifyEmailOTPMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomVerifyEmailOTPMessageTextToDefault);
  }

  methodDescriptorGetCustomDomainClaimedMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomDomainClaimedMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomDomainClaimedMessageTextRequest,
    zitadel_management_pb.GetCustomDomainClaimedMessageTextResponse,
    (request: zitadel_management_pb.GetCustomDomainClaimedMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomDomainClaimedMessageTextResponse.deserializeBinary
  );

  getCustomDomainClaimedMessageText(
    request: zitadel_management_pb.GetCustomDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomDomainClaimedMessageTextResponse>;

  getCustomDomainClaimedMessageText(
    request: zitadel_management_pb.GetCustomDomainClaimedMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomDomainClaimedMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomDomainClaimedMessageTextResponse>;

  getCustomDomainClaimedMessageText(
    request: zitadel_management_pb.GetCustomDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomDomainClaimedMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomDomainClaimedMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomDomainClaimedMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomDomainClaimedMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomDomainClaimedMessageText);
  }

  methodDescriptorGetDefaultDomainClaimedMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultDomainClaimedMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultDomainClaimedMessageTextRequest,
    zitadel_management_pb.GetDefaultDomainClaimedMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultDomainClaimedMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultDomainClaimedMessageTextResponse.deserializeBinary
  );

  getDefaultDomainClaimedMessageText(
    request: zitadel_management_pb.GetDefaultDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultDomainClaimedMessageTextResponse>;

  getDefaultDomainClaimedMessageText(
    request: zitadel_management_pb.GetDefaultDomainClaimedMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultDomainClaimedMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultDomainClaimedMessageTextResponse>;

  getDefaultDomainClaimedMessageText(
    request: zitadel_management_pb.GetDefaultDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultDomainClaimedMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultDomainClaimedMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultDomainClaimedMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultDomainClaimedMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultDomainClaimedMessageText);
  }

  methodDescriptorSetCustomDomainClaimedMessageCustomText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomDomainClaimedMessageCustomText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomDomainClaimedMessageTextRequest,
    zitadel_management_pb.SetCustomDomainClaimedMessageTextResponse,
    (request: zitadel_management_pb.SetCustomDomainClaimedMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomDomainClaimedMessageTextResponse.deserializeBinary
  );

  setCustomDomainClaimedMessageCustomText(
    request: zitadel_management_pb.SetCustomDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomDomainClaimedMessageTextResponse>;

  setCustomDomainClaimedMessageCustomText(
    request: zitadel_management_pb.SetCustomDomainClaimedMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomDomainClaimedMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomDomainClaimedMessageTextResponse>;

  setCustomDomainClaimedMessageCustomText(
    request: zitadel_management_pb.SetCustomDomainClaimedMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomDomainClaimedMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomDomainClaimedMessageCustomText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomDomainClaimedMessageCustomText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomDomainClaimedMessageCustomText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomDomainClaimedMessageCustomText);
  }

  methodDescriptorResetCustomDomainClaimedMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomDomainClaimedMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomDomainClaimedMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse>;

  resetCustomDomainClaimedMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse>;

  resetCustomDomainClaimedMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomDomainClaimedMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomDomainClaimedMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomDomainClaimedMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomDomainClaimedMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomDomainClaimedMessageTextToDefault);
  }

  methodDescriptorGetCustomPasswordlessRegistrationMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomPasswordlessRegistrationMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextRequest,
    zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextResponse,
    (request: zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextResponse.deserializeBinary
  );

  getCustomPasswordlessRegistrationMessageText(
    request: zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextResponse>;

  getCustomPasswordlessRegistrationMessageText(
    request: zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextResponse>;

  getCustomPasswordlessRegistrationMessageText(
    request: zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomPasswordlessRegistrationMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomPasswordlessRegistrationMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomPasswordlessRegistrationMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomPasswordlessRegistrationMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomPasswordlessRegistrationMessageText);
  }

  methodDescriptorGetDefaultPasswordlessRegistrationMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultPasswordlessRegistrationMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextRequest,
    zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextResponse.deserializeBinary
  );

  getDefaultPasswordlessRegistrationMessageText(
    request: zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextResponse>;

  getDefaultPasswordlessRegistrationMessageText(
    request: zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextResponse>;

  getDefaultPasswordlessRegistrationMessageText(
    request: zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordlessRegistrationMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultPasswordlessRegistrationMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPasswordlessRegistrationMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultPasswordlessRegistrationMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPasswordlessRegistrationMessageText);
  }

  methodDescriptorSetCustomPasswordlessRegistrationMessageCustomText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomPasswordlessRegistrationMessageCustomText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextRequest,
    zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextResponse,
    (request: zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextResponse.deserializeBinary
  );

  setCustomPasswordlessRegistrationMessageCustomText(
    request: zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextResponse>;

  setCustomPasswordlessRegistrationMessageCustomText(
    request: zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextResponse>;

  setCustomPasswordlessRegistrationMessageCustomText(
    request: zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomPasswordlessRegistrationMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomPasswordlessRegistrationMessageCustomText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomPasswordlessRegistrationMessageCustomText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomPasswordlessRegistrationMessageCustomText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomPasswordlessRegistrationMessageCustomText);
  }

  methodDescriptorResetCustomPasswordlessRegistrationMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomPasswordlessRegistrationMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomPasswordlessRegistrationMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse>;

  resetCustomPasswordlessRegistrationMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse>;

  resetCustomPasswordlessRegistrationMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomPasswordlessRegistrationMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomPasswordlessRegistrationMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomPasswordlessRegistrationMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomPasswordlessRegistrationMessageTextToDefault);
  }

  methodDescriptorGetCustomPasswordChangeMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomPasswordChangeMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomPasswordChangeMessageTextRequest,
    zitadel_management_pb.GetCustomPasswordChangeMessageTextResponse,
    (request: zitadel_management_pb.GetCustomPasswordChangeMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomPasswordChangeMessageTextResponse.deserializeBinary
  );

  getCustomPasswordChangeMessageText(
    request: zitadel_management_pb.GetCustomPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomPasswordChangeMessageTextResponse>;

  getCustomPasswordChangeMessageText(
    request: zitadel_management_pb.GetCustomPasswordChangeMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomPasswordChangeMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomPasswordChangeMessageTextResponse>;

  getCustomPasswordChangeMessageText(
    request: zitadel_management_pb.GetCustomPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomPasswordChangeMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomPasswordChangeMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetCustomPasswordChangeMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomPasswordChangeMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetCustomPasswordChangeMessageText);
  }

  methodDescriptorGetDefaultPasswordChangeMessageText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultPasswordChangeMessageText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultPasswordChangeMessageTextRequest,
    zitadel_management_pb.GetDefaultPasswordChangeMessageTextResponse,
    (request: zitadel_management_pb.GetDefaultPasswordChangeMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultPasswordChangeMessageTextResponse.deserializeBinary
  );

  getDefaultPasswordChangeMessageText(
    request: zitadel_management_pb.GetDefaultPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultPasswordChangeMessageTextResponse>;

  getDefaultPasswordChangeMessageText(
    request: zitadel_management_pb.GetDefaultPasswordChangeMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordChangeMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultPasswordChangeMessageTextResponse>;

  getDefaultPasswordChangeMessageText(
    request: zitadel_management_pb.GetDefaultPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultPasswordChangeMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultPasswordChangeMessageText',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultPasswordChangeMessageText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultPasswordChangeMessageText',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultPasswordChangeMessageText);
  }

  methodDescriptorSetCustomPasswordChangeMessageCustomText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomPasswordChangeMessageCustomText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomPasswordChangeMessageTextRequest,
    zitadel_management_pb.SetCustomPasswordChangeMessageTextResponse,
    (request: zitadel_management_pb.SetCustomPasswordChangeMessageTextRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomPasswordChangeMessageTextResponse.deserializeBinary
  );

  setCustomPasswordChangeMessageCustomText(
    request: zitadel_management_pb.SetCustomPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomPasswordChangeMessageTextResponse>;

  setCustomPasswordChangeMessageCustomText(
    request: zitadel_management_pb.SetCustomPasswordChangeMessageTextRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomPasswordChangeMessageTextResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomPasswordChangeMessageTextResponse>;

  setCustomPasswordChangeMessageCustomText(
    request: zitadel_management_pb.SetCustomPasswordChangeMessageTextRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomPasswordChangeMessageTextResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomPasswordChangeMessageCustomText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomPasswordChangeMessageCustomText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomPasswordChangeMessageCustomText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomPasswordChangeMessageCustomText);
  }

  methodDescriptorResetCustomPasswordChangeMessageTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomPasswordChangeMessageTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest,
    zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse.deserializeBinary
  );

  resetCustomPasswordChangeMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse>;

  resetCustomPasswordChangeMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse>;

  resetCustomPasswordChangeMessageTextToDefault(
    request: zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomPasswordChangeMessageTextToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomPasswordChangeMessageTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomPasswordChangeMessageTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomPasswordChangeMessageTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomPasswordChangeMessageTextToDefault);
  }

  methodDescriptorGetCustomLoginTexts = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetCustomLoginTexts',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetCustomLoginTextsRequest,
    zitadel_management_pb.GetCustomLoginTextsResponse,
    (request: zitadel_management_pb.GetCustomLoginTextsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetCustomLoginTextsResponse.deserializeBinary
  );

  getCustomLoginTexts(
    request: zitadel_management_pb.GetCustomLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetCustomLoginTextsResponse>;

  getCustomLoginTexts(
    request: zitadel_management_pb.GetCustomLoginTextsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomLoginTextsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetCustomLoginTextsResponse>;

  getCustomLoginTexts(
    request: zitadel_management_pb.GetCustomLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetCustomLoginTextsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetCustomLoginTexts',
        request,
        metadata || {},
        this.methodDescriptorGetCustomLoginTexts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetCustomLoginTexts',
    request,
    metadata || {},
    this.methodDescriptorGetCustomLoginTexts);
  }

  methodDescriptorGetDefaultLoginTexts = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetDefaultLoginTexts',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetDefaultLoginTextsRequest,
    zitadel_management_pb.GetDefaultLoginTextsResponse,
    (request: zitadel_management_pb.GetDefaultLoginTextsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetDefaultLoginTextsResponse.deserializeBinary
  );

  getDefaultLoginTexts(
    request: zitadel_management_pb.GetDefaultLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetDefaultLoginTextsResponse>;

  getDefaultLoginTexts(
    request: zitadel_management_pb.GetDefaultLoginTextsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultLoginTextsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetDefaultLoginTextsResponse>;

  getDefaultLoginTexts(
    request: zitadel_management_pb.GetDefaultLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetDefaultLoginTextsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetDefaultLoginTexts',
        request,
        metadata || {},
        this.methodDescriptorGetDefaultLoginTexts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetDefaultLoginTexts',
    request,
    metadata || {},
    this.methodDescriptorGetDefaultLoginTexts);
  }

  methodDescriptorSetCustomLoginText = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetCustomLoginText',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetCustomLoginTextsRequest,
    zitadel_management_pb.SetCustomLoginTextsResponse,
    (request: zitadel_management_pb.SetCustomLoginTextsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetCustomLoginTextsResponse.deserializeBinary
  );

  setCustomLoginText(
    request: zitadel_management_pb.SetCustomLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetCustomLoginTextsResponse>;

  setCustomLoginText(
    request: zitadel_management_pb.SetCustomLoginTextsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomLoginTextsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetCustomLoginTextsResponse>;

  setCustomLoginText(
    request: zitadel_management_pb.SetCustomLoginTextsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetCustomLoginTextsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetCustomLoginText',
        request,
        metadata || {},
        this.methodDescriptorSetCustomLoginText,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetCustomLoginText',
    request,
    metadata || {},
    this.methodDescriptorSetCustomLoginText);
  }

  methodDescriptorResetCustomLoginTextToDefault = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ResetCustomLoginTextToDefault',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ResetCustomLoginTextsToDefaultRequest,
    zitadel_management_pb.ResetCustomLoginTextsToDefaultResponse,
    (request: zitadel_management_pb.ResetCustomLoginTextsToDefaultRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ResetCustomLoginTextsToDefaultResponse.deserializeBinary
  );

  resetCustomLoginTextToDefault(
    request: zitadel_management_pb.ResetCustomLoginTextsToDefaultRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ResetCustomLoginTextsToDefaultResponse>;

  resetCustomLoginTextToDefault(
    request: zitadel_management_pb.ResetCustomLoginTextsToDefaultRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomLoginTextsToDefaultResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ResetCustomLoginTextsToDefaultResponse>;

  resetCustomLoginTextToDefault(
    request: zitadel_management_pb.ResetCustomLoginTextsToDefaultRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ResetCustomLoginTextsToDefaultResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ResetCustomLoginTextToDefault',
        request,
        metadata || {},
        this.methodDescriptorResetCustomLoginTextToDefault,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ResetCustomLoginTextToDefault',
    request,
    metadata || {},
    this.methodDescriptorResetCustomLoginTextToDefault);
  }

  methodDescriptorGetOrgIDPByID = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetOrgIDPByID',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetOrgIDPByIDRequest,
    zitadel_management_pb.GetOrgIDPByIDResponse,
    (request: zitadel_management_pb.GetOrgIDPByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetOrgIDPByIDResponse.deserializeBinary
  );

  getOrgIDPByID(
    request: zitadel_management_pb.GetOrgIDPByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetOrgIDPByIDResponse>;

  getOrgIDPByID(
    request: zitadel_management_pb.GetOrgIDPByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOrgIDPByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetOrgIDPByIDResponse>;

  getOrgIDPByID(
    request: zitadel_management_pb.GetOrgIDPByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetOrgIDPByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetOrgIDPByID',
        request,
        metadata || {},
        this.methodDescriptorGetOrgIDPByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetOrgIDPByID',
    request,
    metadata || {},
    this.methodDescriptorGetOrgIDPByID);
  }

  methodDescriptorListOrgIDPs = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListOrgIDPs',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListOrgIDPsRequest,
    zitadel_management_pb.ListOrgIDPsResponse,
    (request: zitadel_management_pb.ListOrgIDPsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListOrgIDPsResponse.deserializeBinary
  );

  listOrgIDPs(
    request: zitadel_management_pb.ListOrgIDPsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListOrgIDPsResponse>;

  listOrgIDPs(
    request: zitadel_management_pb.ListOrgIDPsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgIDPsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListOrgIDPsResponse>;

  listOrgIDPs(
    request: zitadel_management_pb.ListOrgIDPsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListOrgIDPsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListOrgIDPs',
        request,
        metadata || {},
        this.methodDescriptorListOrgIDPs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListOrgIDPs',
    request,
    metadata || {},
    this.methodDescriptorListOrgIDPs);
  }

  methodDescriptorAddOrgOIDCIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddOrgOIDCIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddOrgOIDCIDPRequest,
    zitadel_management_pb.AddOrgOIDCIDPResponse,
    (request: zitadel_management_pb.AddOrgOIDCIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddOrgOIDCIDPResponse.deserializeBinary
  );

  addOrgOIDCIDP(
    request: zitadel_management_pb.AddOrgOIDCIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddOrgOIDCIDPResponse>;

  addOrgOIDCIDP(
    request: zitadel_management_pb.AddOrgOIDCIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgOIDCIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddOrgOIDCIDPResponse>;

  addOrgOIDCIDP(
    request: zitadel_management_pb.AddOrgOIDCIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgOIDCIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddOrgOIDCIDP',
        request,
        metadata || {},
        this.methodDescriptorAddOrgOIDCIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddOrgOIDCIDP',
    request,
    metadata || {},
    this.methodDescriptorAddOrgOIDCIDP);
  }

  methodDescriptorAddOrgJWTIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddOrgJWTIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddOrgJWTIDPRequest,
    zitadel_management_pb.AddOrgJWTIDPResponse,
    (request: zitadel_management_pb.AddOrgJWTIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddOrgJWTIDPResponse.deserializeBinary
  );

  addOrgJWTIDP(
    request: zitadel_management_pb.AddOrgJWTIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddOrgJWTIDPResponse>;

  addOrgJWTIDP(
    request: zitadel_management_pb.AddOrgJWTIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgJWTIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddOrgJWTIDPResponse>;

  addOrgJWTIDP(
    request: zitadel_management_pb.AddOrgJWTIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddOrgJWTIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddOrgJWTIDP',
        request,
        metadata || {},
        this.methodDescriptorAddOrgJWTIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddOrgJWTIDP',
    request,
    metadata || {},
    this.methodDescriptorAddOrgJWTIDP);
  }

  methodDescriptorDeactivateOrgIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeactivateOrgIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeactivateOrgIDPRequest,
    zitadel_management_pb.DeactivateOrgIDPResponse,
    (request: zitadel_management_pb.DeactivateOrgIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeactivateOrgIDPResponse.deserializeBinary
  );

  deactivateOrgIDP(
    request: zitadel_management_pb.DeactivateOrgIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeactivateOrgIDPResponse>;

  deactivateOrgIDP(
    request: zitadel_management_pb.DeactivateOrgIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateOrgIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeactivateOrgIDPResponse>;

  deactivateOrgIDP(
    request: zitadel_management_pb.DeactivateOrgIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateOrgIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeactivateOrgIDP',
        request,
        metadata || {},
        this.methodDescriptorDeactivateOrgIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeactivateOrgIDP',
    request,
    metadata || {},
    this.methodDescriptorDeactivateOrgIDP);
  }

  methodDescriptorReactivateOrgIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ReactivateOrgIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ReactivateOrgIDPRequest,
    zitadel_management_pb.ReactivateOrgIDPResponse,
    (request: zitadel_management_pb.ReactivateOrgIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ReactivateOrgIDPResponse.deserializeBinary
  );

  reactivateOrgIDP(
    request: zitadel_management_pb.ReactivateOrgIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ReactivateOrgIDPResponse>;

  reactivateOrgIDP(
    request: zitadel_management_pb.ReactivateOrgIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateOrgIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ReactivateOrgIDPResponse>;

  reactivateOrgIDP(
    request: zitadel_management_pb.ReactivateOrgIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateOrgIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ReactivateOrgIDP',
        request,
        metadata || {},
        this.methodDescriptorReactivateOrgIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ReactivateOrgIDP',
    request,
    metadata || {},
    this.methodDescriptorReactivateOrgIDP);
  }

  methodDescriptorRemoveOrgIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RemoveOrgIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RemoveOrgIDPRequest,
    zitadel_management_pb.RemoveOrgIDPResponse,
    (request: zitadel_management_pb.RemoveOrgIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RemoveOrgIDPResponse.deserializeBinary
  );

  removeOrgIDP(
    request: zitadel_management_pb.RemoveOrgIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RemoveOrgIDPResponse>;

  removeOrgIDP(
    request: zitadel_management_pb.RemoveOrgIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RemoveOrgIDPResponse>;

  removeOrgIDP(
    request: zitadel_management_pb.RemoveOrgIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RemoveOrgIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RemoveOrgIDP',
        request,
        metadata || {},
        this.methodDescriptorRemoveOrgIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RemoveOrgIDP',
    request,
    metadata || {},
    this.methodDescriptorRemoveOrgIDP);
  }

  methodDescriptorUpdateOrgIDP = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateOrgIDP',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateOrgIDPRequest,
    zitadel_management_pb.UpdateOrgIDPResponse,
    (request: zitadel_management_pb.UpdateOrgIDPRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateOrgIDPResponse.deserializeBinary
  );

  updateOrgIDP(
    request: zitadel_management_pb.UpdateOrgIDPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateOrgIDPResponse>;

  updateOrgIDP(
    request: zitadel_management_pb.UpdateOrgIDPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgIDPResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateOrgIDPResponse>;

  updateOrgIDP(
    request: zitadel_management_pb.UpdateOrgIDPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgIDPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateOrgIDP',
        request,
        metadata || {},
        this.methodDescriptorUpdateOrgIDP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateOrgIDP',
    request,
    metadata || {},
    this.methodDescriptorUpdateOrgIDP);
  }

  methodDescriptorUpdateOrgIDPOIDCConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateOrgIDPOIDCConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateOrgIDPOIDCConfigRequest,
    zitadel_management_pb.UpdateOrgIDPOIDCConfigResponse,
    (request: zitadel_management_pb.UpdateOrgIDPOIDCConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateOrgIDPOIDCConfigResponse.deserializeBinary
  );

  updateOrgIDPOIDCConfig(
    request: zitadel_management_pb.UpdateOrgIDPOIDCConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateOrgIDPOIDCConfigResponse>;

  updateOrgIDPOIDCConfig(
    request: zitadel_management_pb.UpdateOrgIDPOIDCConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgIDPOIDCConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateOrgIDPOIDCConfigResponse>;

  updateOrgIDPOIDCConfig(
    request: zitadel_management_pb.UpdateOrgIDPOIDCConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgIDPOIDCConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateOrgIDPOIDCConfig',
        request,
        metadata || {},
        this.methodDescriptorUpdateOrgIDPOIDCConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateOrgIDPOIDCConfig',
    request,
    metadata || {},
    this.methodDescriptorUpdateOrgIDPOIDCConfig);
  }

  methodDescriptorUpdateOrgIDPJWTConfig = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateOrgIDPJWTConfig',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateOrgIDPJWTConfigRequest,
    zitadel_management_pb.UpdateOrgIDPJWTConfigResponse,
    (request: zitadel_management_pb.UpdateOrgIDPJWTConfigRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateOrgIDPJWTConfigResponse.deserializeBinary
  );

  updateOrgIDPJWTConfig(
    request: zitadel_management_pb.UpdateOrgIDPJWTConfigRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateOrgIDPJWTConfigResponse>;

  updateOrgIDPJWTConfig(
    request: zitadel_management_pb.UpdateOrgIDPJWTConfigRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgIDPJWTConfigResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateOrgIDPJWTConfigResponse>;

  updateOrgIDPJWTConfig(
    request: zitadel_management_pb.UpdateOrgIDPJWTConfigRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateOrgIDPJWTConfigResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateOrgIDPJWTConfig',
        request,
        metadata || {},
        this.methodDescriptorUpdateOrgIDPJWTConfig,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateOrgIDPJWTConfig',
    request,
    metadata || {},
    this.methodDescriptorUpdateOrgIDPJWTConfig);
  }

  methodDescriptorListProviders = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListProviders',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListProvidersRequest,
    zitadel_management_pb.ListProvidersResponse,
    (request: zitadel_management_pb.ListProvidersRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListProvidersResponse.deserializeBinary
  );

  listProviders(
    request: zitadel_management_pb.ListProvidersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListProvidersResponse>;

  listProviders(
    request: zitadel_management_pb.ListProvidersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProvidersResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListProvidersResponse>;

  listProviders(
    request: zitadel_management_pb.ListProvidersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListProvidersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListProviders',
        request,
        metadata || {},
        this.methodDescriptorListProviders,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListProviders',
    request,
    metadata || {},
    this.methodDescriptorListProviders);
  }

  methodDescriptorGetProviderByID = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetProviderByID',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetProviderByIDRequest,
    zitadel_management_pb.GetProviderByIDResponse,
    (request: zitadel_management_pb.GetProviderByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetProviderByIDResponse.deserializeBinary
  );

  getProviderByID(
    request: zitadel_management_pb.GetProviderByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetProviderByIDResponse>;

  getProviderByID(
    request: zitadel_management_pb.GetProviderByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetProviderByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetProviderByIDResponse>;

  getProviderByID(
    request: zitadel_management_pb.GetProviderByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetProviderByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetProviderByID',
        request,
        metadata || {},
        this.methodDescriptorGetProviderByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetProviderByID',
    request,
    metadata || {},
    this.methodDescriptorGetProviderByID);
  }

  methodDescriptorAddGenericOAuthProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddGenericOAuthProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddGenericOAuthProviderRequest,
    zitadel_management_pb.AddGenericOAuthProviderResponse,
    (request: zitadel_management_pb.AddGenericOAuthProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddGenericOAuthProviderResponse.deserializeBinary
  );

  addGenericOAuthProvider(
    request: zitadel_management_pb.AddGenericOAuthProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddGenericOAuthProviderResponse>;

  addGenericOAuthProvider(
    request: zitadel_management_pb.AddGenericOAuthProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGenericOAuthProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddGenericOAuthProviderResponse>;

  addGenericOAuthProvider(
    request: zitadel_management_pb.AddGenericOAuthProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGenericOAuthProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddGenericOAuthProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGenericOAuthProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddGenericOAuthProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGenericOAuthProvider);
  }

  methodDescriptorUpdateGenericOAuthProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateGenericOAuthProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateGenericOAuthProviderRequest,
    zitadel_management_pb.UpdateGenericOAuthProviderResponse,
    (request: zitadel_management_pb.UpdateGenericOAuthProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateGenericOAuthProviderResponse.deserializeBinary
  );

  updateGenericOAuthProvider(
    request: zitadel_management_pb.UpdateGenericOAuthProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateGenericOAuthProviderResponse>;

  updateGenericOAuthProvider(
    request: zitadel_management_pb.UpdateGenericOAuthProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGenericOAuthProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateGenericOAuthProviderResponse>;

  updateGenericOAuthProvider(
    request: zitadel_management_pb.UpdateGenericOAuthProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGenericOAuthProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateGenericOAuthProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGenericOAuthProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateGenericOAuthProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGenericOAuthProvider);
  }

  methodDescriptorAddGenericOIDCProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddGenericOIDCProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddGenericOIDCProviderRequest,
    zitadel_management_pb.AddGenericOIDCProviderResponse,
    (request: zitadel_management_pb.AddGenericOIDCProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddGenericOIDCProviderResponse.deserializeBinary
  );

  addGenericOIDCProvider(
    request: zitadel_management_pb.AddGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddGenericOIDCProviderResponse>;

  addGenericOIDCProvider(
    request: zitadel_management_pb.AddGenericOIDCProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGenericOIDCProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddGenericOIDCProviderResponse>;

  addGenericOIDCProvider(
    request: zitadel_management_pb.AddGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGenericOIDCProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddGenericOIDCProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGenericOIDCProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddGenericOIDCProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGenericOIDCProvider);
  }

  methodDescriptorUpdateGenericOIDCProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateGenericOIDCProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateGenericOIDCProviderRequest,
    zitadel_management_pb.UpdateGenericOIDCProviderResponse,
    (request: zitadel_management_pb.UpdateGenericOIDCProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateGenericOIDCProviderResponse.deserializeBinary
  );

  updateGenericOIDCProvider(
    request: zitadel_management_pb.UpdateGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateGenericOIDCProviderResponse>;

  updateGenericOIDCProvider(
    request: zitadel_management_pb.UpdateGenericOIDCProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGenericOIDCProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateGenericOIDCProviderResponse>;

  updateGenericOIDCProvider(
    request: zitadel_management_pb.UpdateGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGenericOIDCProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateGenericOIDCProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGenericOIDCProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateGenericOIDCProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGenericOIDCProvider);
  }

  methodDescriptorMigrateGenericOIDCProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/MigrateGenericOIDCProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.MigrateGenericOIDCProviderRequest,
    zitadel_management_pb.MigrateGenericOIDCProviderResponse,
    (request: zitadel_management_pb.MigrateGenericOIDCProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.MigrateGenericOIDCProviderResponse.deserializeBinary
  );

  migrateGenericOIDCProvider(
    request: zitadel_management_pb.MigrateGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.MigrateGenericOIDCProviderResponse>;

  migrateGenericOIDCProvider(
    request: zitadel_management_pb.MigrateGenericOIDCProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.MigrateGenericOIDCProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.MigrateGenericOIDCProviderResponse>;

  migrateGenericOIDCProvider(
    request: zitadel_management_pb.MigrateGenericOIDCProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.MigrateGenericOIDCProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/MigrateGenericOIDCProvider',
        request,
        metadata || {},
        this.methodDescriptorMigrateGenericOIDCProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/MigrateGenericOIDCProvider',
    request,
    metadata || {},
    this.methodDescriptorMigrateGenericOIDCProvider);
  }

  methodDescriptorAddJWTProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddJWTProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddJWTProviderRequest,
    zitadel_management_pb.AddJWTProviderResponse,
    (request: zitadel_management_pb.AddJWTProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddJWTProviderResponse.deserializeBinary
  );

  addJWTProvider(
    request: zitadel_management_pb.AddJWTProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddJWTProviderResponse>;

  addJWTProvider(
    request: zitadel_management_pb.AddJWTProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddJWTProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddJWTProviderResponse>;

  addJWTProvider(
    request: zitadel_management_pb.AddJWTProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddJWTProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddJWTProvider',
        request,
        metadata || {},
        this.methodDescriptorAddJWTProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddJWTProvider',
    request,
    metadata || {},
    this.methodDescriptorAddJWTProvider);
  }

  methodDescriptorUpdateJWTProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateJWTProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateJWTProviderRequest,
    zitadel_management_pb.UpdateJWTProviderResponse,
    (request: zitadel_management_pb.UpdateJWTProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateJWTProviderResponse.deserializeBinary
  );

  updateJWTProvider(
    request: zitadel_management_pb.UpdateJWTProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateJWTProviderResponse>;

  updateJWTProvider(
    request: zitadel_management_pb.UpdateJWTProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateJWTProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateJWTProviderResponse>;

  updateJWTProvider(
    request: zitadel_management_pb.UpdateJWTProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateJWTProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateJWTProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateJWTProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateJWTProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateJWTProvider);
  }

  methodDescriptorAddAzureADProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddAzureADProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddAzureADProviderRequest,
    zitadel_management_pb.AddAzureADProviderResponse,
    (request: zitadel_management_pb.AddAzureADProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddAzureADProviderResponse.deserializeBinary
  );

  addAzureADProvider(
    request: zitadel_management_pb.AddAzureADProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddAzureADProviderResponse>;

  addAzureADProvider(
    request: zitadel_management_pb.AddAzureADProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddAzureADProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddAzureADProviderResponse>;

  addAzureADProvider(
    request: zitadel_management_pb.AddAzureADProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddAzureADProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddAzureADProvider',
        request,
        metadata || {},
        this.methodDescriptorAddAzureADProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddAzureADProvider',
    request,
    metadata || {},
    this.methodDescriptorAddAzureADProvider);
  }

  methodDescriptorUpdateAzureADProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateAzureADProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateAzureADProviderRequest,
    zitadel_management_pb.UpdateAzureADProviderResponse,
    (request: zitadel_management_pb.UpdateAzureADProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateAzureADProviderResponse.deserializeBinary
  );

  updateAzureADProvider(
    request: zitadel_management_pb.UpdateAzureADProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateAzureADProviderResponse>;

  updateAzureADProvider(
    request: zitadel_management_pb.UpdateAzureADProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateAzureADProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateAzureADProviderResponse>;

  updateAzureADProvider(
    request: zitadel_management_pb.UpdateAzureADProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateAzureADProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateAzureADProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateAzureADProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateAzureADProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateAzureADProvider);
  }

  methodDescriptorAddGitHubProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddGitHubProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddGitHubProviderRequest,
    zitadel_management_pb.AddGitHubProviderResponse,
    (request: zitadel_management_pb.AddGitHubProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddGitHubProviderResponse.deserializeBinary
  );

  addGitHubProvider(
    request: zitadel_management_pb.AddGitHubProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddGitHubProviderResponse>;

  addGitHubProvider(
    request: zitadel_management_pb.AddGitHubProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGitHubProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddGitHubProviderResponse>;

  addGitHubProvider(
    request: zitadel_management_pb.AddGitHubProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGitHubProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddGitHubProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGitHubProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddGitHubProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGitHubProvider);
  }

  methodDescriptorUpdateGitHubProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateGitHubProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateGitHubProviderRequest,
    zitadel_management_pb.UpdateGitHubProviderResponse,
    (request: zitadel_management_pb.UpdateGitHubProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateGitHubProviderResponse.deserializeBinary
  );

  updateGitHubProvider(
    request: zitadel_management_pb.UpdateGitHubProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateGitHubProviderResponse>;

  updateGitHubProvider(
    request: zitadel_management_pb.UpdateGitHubProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGitHubProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateGitHubProviderResponse>;

  updateGitHubProvider(
    request: zitadel_management_pb.UpdateGitHubProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGitHubProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateGitHubProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGitHubProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateGitHubProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGitHubProvider);
  }

  methodDescriptorAddGitHubEnterpriseServerProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddGitHubEnterpriseServerProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddGitHubEnterpriseServerProviderRequest,
    zitadel_management_pb.AddGitHubEnterpriseServerProviderResponse,
    (request: zitadel_management_pb.AddGitHubEnterpriseServerProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddGitHubEnterpriseServerProviderResponse.deserializeBinary
  );

  addGitHubEnterpriseServerProvider(
    request: zitadel_management_pb.AddGitHubEnterpriseServerProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddGitHubEnterpriseServerProviderResponse>;

  addGitHubEnterpriseServerProvider(
    request: zitadel_management_pb.AddGitHubEnterpriseServerProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGitHubEnterpriseServerProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddGitHubEnterpriseServerProviderResponse>;

  addGitHubEnterpriseServerProvider(
    request: zitadel_management_pb.AddGitHubEnterpriseServerProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGitHubEnterpriseServerProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddGitHubEnterpriseServerProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGitHubEnterpriseServerProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddGitHubEnterpriseServerProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGitHubEnterpriseServerProvider);
  }

  methodDescriptorUpdateGitHubEnterpriseServerProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateGitHubEnterpriseServerProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateGitHubEnterpriseServerProviderRequest,
    zitadel_management_pb.UpdateGitHubEnterpriseServerProviderResponse,
    (request: zitadel_management_pb.UpdateGitHubEnterpriseServerProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateGitHubEnterpriseServerProviderResponse.deserializeBinary
  );

  updateGitHubEnterpriseServerProvider(
    request: zitadel_management_pb.UpdateGitHubEnterpriseServerProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateGitHubEnterpriseServerProviderResponse>;

  updateGitHubEnterpriseServerProvider(
    request: zitadel_management_pb.UpdateGitHubEnterpriseServerProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGitHubEnterpriseServerProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateGitHubEnterpriseServerProviderResponse>;

  updateGitHubEnterpriseServerProvider(
    request: zitadel_management_pb.UpdateGitHubEnterpriseServerProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGitHubEnterpriseServerProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateGitHubEnterpriseServerProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGitHubEnterpriseServerProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateGitHubEnterpriseServerProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGitHubEnterpriseServerProvider);
  }

  methodDescriptorAddGitLabProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddGitLabProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddGitLabProviderRequest,
    zitadel_management_pb.AddGitLabProviderResponse,
    (request: zitadel_management_pb.AddGitLabProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddGitLabProviderResponse.deserializeBinary
  );

  addGitLabProvider(
    request: zitadel_management_pb.AddGitLabProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddGitLabProviderResponse>;

  addGitLabProvider(
    request: zitadel_management_pb.AddGitLabProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGitLabProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddGitLabProviderResponse>;

  addGitLabProvider(
    request: zitadel_management_pb.AddGitLabProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGitLabProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddGitLabProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGitLabProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddGitLabProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGitLabProvider);
  }

  methodDescriptorUpdateGitLabProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateGitLabProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateGitLabProviderRequest,
    zitadel_management_pb.UpdateGitLabProviderResponse,
    (request: zitadel_management_pb.UpdateGitLabProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateGitLabProviderResponse.deserializeBinary
  );

  updateGitLabProvider(
    request: zitadel_management_pb.UpdateGitLabProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateGitLabProviderResponse>;

  updateGitLabProvider(
    request: zitadel_management_pb.UpdateGitLabProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGitLabProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateGitLabProviderResponse>;

  updateGitLabProvider(
    request: zitadel_management_pb.UpdateGitLabProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGitLabProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateGitLabProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGitLabProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateGitLabProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGitLabProvider);
  }

  methodDescriptorAddGitLabSelfHostedProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddGitLabSelfHostedProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddGitLabSelfHostedProviderRequest,
    zitadel_management_pb.AddGitLabSelfHostedProviderResponse,
    (request: zitadel_management_pb.AddGitLabSelfHostedProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddGitLabSelfHostedProviderResponse.deserializeBinary
  );

  addGitLabSelfHostedProvider(
    request: zitadel_management_pb.AddGitLabSelfHostedProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddGitLabSelfHostedProviderResponse>;

  addGitLabSelfHostedProvider(
    request: zitadel_management_pb.AddGitLabSelfHostedProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGitLabSelfHostedProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddGitLabSelfHostedProviderResponse>;

  addGitLabSelfHostedProvider(
    request: zitadel_management_pb.AddGitLabSelfHostedProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGitLabSelfHostedProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddGitLabSelfHostedProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGitLabSelfHostedProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddGitLabSelfHostedProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGitLabSelfHostedProvider);
  }

  methodDescriptorUpdateGitLabSelfHostedProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateGitLabSelfHostedProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateGitLabSelfHostedProviderRequest,
    zitadel_management_pb.UpdateGitLabSelfHostedProviderResponse,
    (request: zitadel_management_pb.UpdateGitLabSelfHostedProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateGitLabSelfHostedProviderResponse.deserializeBinary
  );

  updateGitLabSelfHostedProvider(
    request: zitadel_management_pb.UpdateGitLabSelfHostedProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateGitLabSelfHostedProviderResponse>;

  updateGitLabSelfHostedProvider(
    request: zitadel_management_pb.UpdateGitLabSelfHostedProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGitLabSelfHostedProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateGitLabSelfHostedProviderResponse>;

  updateGitLabSelfHostedProvider(
    request: zitadel_management_pb.UpdateGitLabSelfHostedProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGitLabSelfHostedProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateGitLabSelfHostedProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGitLabSelfHostedProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateGitLabSelfHostedProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGitLabSelfHostedProvider);
  }

  methodDescriptorAddGoogleProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddGoogleProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddGoogleProviderRequest,
    zitadel_management_pb.AddGoogleProviderResponse,
    (request: zitadel_management_pb.AddGoogleProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddGoogleProviderResponse.deserializeBinary
  );

  addGoogleProvider(
    request: zitadel_management_pb.AddGoogleProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddGoogleProviderResponse>;

  addGoogleProvider(
    request: zitadel_management_pb.AddGoogleProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGoogleProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddGoogleProviderResponse>;

  addGoogleProvider(
    request: zitadel_management_pb.AddGoogleProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddGoogleProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddGoogleProvider',
        request,
        metadata || {},
        this.methodDescriptorAddGoogleProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddGoogleProvider',
    request,
    metadata || {},
    this.methodDescriptorAddGoogleProvider);
  }

  methodDescriptorUpdateGoogleProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateGoogleProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateGoogleProviderRequest,
    zitadel_management_pb.UpdateGoogleProviderResponse,
    (request: zitadel_management_pb.UpdateGoogleProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateGoogleProviderResponse.deserializeBinary
  );

  updateGoogleProvider(
    request: zitadel_management_pb.UpdateGoogleProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateGoogleProviderResponse>;

  updateGoogleProvider(
    request: zitadel_management_pb.UpdateGoogleProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGoogleProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateGoogleProviderResponse>;

  updateGoogleProvider(
    request: zitadel_management_pb.UpdateGoogleProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateGoogleProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateGoogleProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateGoogleProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateGoogleProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateGoogleProvider);
  }

  methodDescriptorAddLDAPProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddLDAPProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddLDAPProviderRequest,
    zitadel_management_pb.AddLDAPProviderResponse,
    (request: zitadel_management_pb.AddLDAPProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddLDAPProviderResponse.deserializeBinary
  );

  addLDAPProvider(
    request: zitadel_management_pb.AddLDAPProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddLDAPProviderResponse>;

  addLDAPProvider(
    request: zitadel_management_pb.AddLDAPProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddLDAPProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddLDAPProviderResponse>;

  addLDAPProvider(
    request: zitadel_management_pb.AddLDAPProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddLDAPProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddLDAPProvider',
        request,
        metadata || {},
        this.methodDescriptorAddLDAPProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddLDAPProvider',
    request,
    metadata || {},
    this.methodDescriptorAddLDAPProvider);
  }

  methodDescriptorUpdateLDAPProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateLDAPProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateLDAPProviderRequest,
    zitadel_management_pb.UpdateLDAPProviderResponse,
    (request: zitadel_management_pb.UpdateLDAPProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateLDAPProviderResponse.deserializeBinary
  );

  updateLDAPProvider(
    request: zitadel_management_pb.UpdateLDAPProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateLDAPProviderResponse>;

  updateLDAPProvider(
    request: zitadel_management_pb.UpdateLDAPProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateLDAPProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateLDAPProviderResponse>;

  updateLDAPProvider(
    request: zitadel_management_pb.UpdateLDAPProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateLDAPProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateLDAPProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateLDAPProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateLDAPProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateLDAPProvider);
  }

  methodDescriptorAddAppleProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddAppleProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddAppleProviderRequest,
    zitadel_management_pb.AddAppleProviderResponse,
    (request: zitadel_management_pb.AddAppleProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddAppleProviderResponse.deserializeBinary
  );

  addAppleProvider(
    request: zitadel_management_pb.AddAppleProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddAppleProviderResponse>;

  addAppleProvider(
    request: zitadel_management_pb.AddAppleProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddAppleProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddAppleProviderResponse>;

  addAppleProvider(
    request: zitadel_management_pb.AddAppleProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddAppleProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddAppleProvider',
        request,
        metadata || {},
        this.methodDescriptorAddAppleProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddAppleProvider',
    request,
    metadata || {},
    this.methodDescriptorAddAppleProvider);
  }

  methodDescriptorUpdateAppleProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateAppleProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateAppleProviderRequest,
    zitadel_management_pb.UpdateAppleProviderResponse,
    (request: zitadel_management_pb.UpdateAppleProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateAppleProviderResponse.deserializeBinary
  );

  updateAppleProvider(
    request: zitadel_management_pb.UpdateAppleProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateAppleProviderResponse>;

  updateAppleProvider(
    request: zitadel_management_pb.UpdateAppleProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateAppleProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateAppleProviderResponse>;

  updateAppleProvider(
    request: zitadel_management_pb.UpdateAppleProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateAppleProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateAppleProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateAppleProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateAppleProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateAppleProvider);
  }

  methodDescriptorAddSAMLProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/AddSAMLProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.AddSAMLProviderRequest,
    zitadel_management_pb.AddSAMLProviderResponse,
    (request: zitadel_management_pb.AddSAMLProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.AddSAMLProviderResponse.deserializeBinary
  );

  addSAMLProvider(
    request: zitadel_management_pb.AddSAMLProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.AddSAMLProviderResponse>;

  addSAMLProvider(
    request: zitadel_management_pb.AddSAMLProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddSAMLProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.AddSAMLProviderResponse>;

  addSAMLProvider(
    request: zitadel_management_pb.AddSAMLProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.AddSAMLProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/AddSAMLProvider',
        request,
        metadata || {},
        this.methodDescriptorAddSAMLProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/AddSAMLProvider',
    request,
    metadata || {},
    this.methodDescriptorAddSAMLProvider);
  }

  methodDescriptorUpdateSAMLProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateSAMLProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateSAMLProviderRequest,
    zitadel_management_pb.UpdateSAMLProviderResponse,
    (request: zitadel_management_pb.UpdateSAMLProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateSAMLProviderResponse.deserializeBinary
  );

  updateSAMLProvider(
    request: zitadel_management_pb.UpdateSAMLProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateSAMLProviderResponse>;

  updateSAMLProvider(
    request: zitadel_management_pb.UpdateSAMLProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateSAMLProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateSAMLProviderResponse>;

  updateSAMLProvider(
    request: zitadel_management_pb.UpdateSAMLProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateSAMLProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateSAMLProvider',
        request,
        metadata || {},
        this.methodDescriptorUpdateSAMLProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateSAMLProvider',
    request,
    metadata || {},
    this.methodDescriptorUpdateSAMLProvider);
  }

  methodDescriptorRegenerateSAMLProviderCertificate = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/RegenerateSAMLProviderCertificate',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.RegenerateSAMLProviderCertificateRequest,
    zitadel_management_pb.RegenerateSAMLProviderCertificateResponse,
    (request: zitadel_management_pb.RegenerateSAMLProviderCertificateRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.RegenerateSAMLProviderCertificateResponse.deserializeBinary
  );

  regenerateSAMLProviderCertificate(
    request: zitadel_management_pb.RegenerateSAMLProviderCertificateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.RegenerateSAMLProviderCertificateResponse>;

  regenerateSAMLProviderCertificate(
    request: zitadel_management_pb.RegenerateSAMLProviderCertificateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RegenerateSAMLProviderCertificateResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.RegenerateSAMLProviderCertificateResponse>;

  regenerateSAMLProviderCertificate(
    request: zitadel_management_pb.RegenerateSAMLProviderCertificateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.RegenerateSAMLProviderCertificateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/RegenerateSAMLProviderCertificate',
        request,
        metadata || {},
        this.methodDescriptorRegenerateSAMLProviderCertificate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/RegenerateSAMLProviderCertificate',
    request,
    metadata || {},
    this.methodDescriptorRegenerateSAMLProviderCertificate);
  }

  methodDescriptorDeleteProvider = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeleteProvider',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeleteProviderRequest,
    zitadel_management_pb.DeleteProviderResponse,
    (request: zitadel_management_pb.DeleteProviderRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeleteProviderResponse.deserializeBinary
  );

  deleteProvider(
    request: zitadel_management_pb.DeleteProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeleteProviderResponse>;

  deleteProvider(
    request: zitadel_management_pb.DeleteProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeleteProviderResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeleteProviderResponse>;

  deleteProvider(
    request: zitadel_management_pb.DeleteProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeleteProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeleteProvider',
        request,
        metadata || {},
        this.methodDescriptorDeleteProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeleteProvider',
    request,
    metadata || {},
    this.methodDescriptorDeleteProvider);
  }

  methodDescriptorListActions = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListActions',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListActionsRequest,
    zitadel_management_pb.ListActionsResponse,
    (request: zitadel_management_pb.ListActionsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListActionsResponse.deserializeBinary
  );

  listActions(
    request: zitadel_management_pb.ListActionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListActionsResponse>;

  listActions(
    request: zitadel_management_pb.ListActionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListActionsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListActionsResponse>;

  listActions(
    request: zitadel_management_pb.ListActionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListActionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListActions',
        request,
        metadata || {},
        this.methodDescriptorListActions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListActions',
    request,
    metadata || {},
    this.methodDescriptorListActions);
  }

  methodDescriptorGetAction = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetAction',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetActionRequest,
    zitadel_management_pb.GetActionResponse,
    (request: zitadel_management_pb.GetActionRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetActionResponse.deserializeBinary
  );

  getAction(
    request: zitadel_management_pb.GetActionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetActionResponse>;

  getAction(
    request: zitadel_management_pb.GetActionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetActionResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetActionResponse>;

  getAction(
    request: zitadel_management_pb.GetActionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetActionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetAction',
        request,
        metadata || {},
        this.methodDescriptorGetAction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetAction',
    request,
    metadata || {},
    this.methodDescriptorGetAction);
  }

  methodDescriptorCreateAction = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/CreateAction',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.CreateActionRequest,
    zitadel_management_pb.CreateActionResponse,
    (request: zitadel_management_pb.CreateActionRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.CreateActionResponse.deserializeBinary
  );

  createAction(
    request: zitadel_management_pb.CreateActionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.CreateActionResponse>;

  createAction(
    request: zitadel_management_pb.CreateActionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.CreateActionResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.CreateActionResponse>;

  createAction(
    request: zitadel_management_pb.CreateActionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.CreateActionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/CreateAction',
        request,
        metadata || {},
        this.methodDescriptorCreateAction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/CreateAction',
    request,
    metadata || {},
    this.methodDescriptorCreateAction);
  }

  methodDescriptorUpdateAction = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/UpdateAction',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.UpdateActionRequest,
    zitadel_management_pb.UpdateActionResponse,
    (request: zitadel_management_pb.UpdateActionRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.UpdateActionResponse.deserializeBinary
  );

  updateAction(
    request: zitadel_management_pb.UpdateActionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.UpdateActionResponse>;

  updateAction(
    request: zitadel_management_pb.UpdateActionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateActionResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.UpdateActionResponse>;

  updateAction(
    request: zitadel_management_pb.UpdateActionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.UpdateActionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/UpdateAction',
        request,
        metadata || {},
        this.methodDescriptorUpdateAction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/UpdateAction',
    request,
    metadata || {},
    this.methodDescriptorUpdateAction);
  }

  methodDescriptorDeactivateAction = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeactivateAction',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeactivateActionRequest,
    zitadel_management_pb.DeactivateActionResponse,
    (request: zitadel_management_pb.DeactivateActionRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeactivateActionResponse.deserializeBinary
  );

  deactivateAction(
    request: zitadel_management_pb.DeactivateActionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeactivateActionResponse>;

  deactivateAction(
    request: zitadel_management_pb.DeactivateActionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateActionResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeactivateActionResponse>;

  deactivateAction(
    request: zitadel_management_pb.DeactivateActionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeactivateActionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeactivateAction',
        request,
        metadata || {},
        this.methodDescriptorDeactivateAction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeactivateAction',
    request,
    metadata || {},
    this.methodDescriptorDeactivateAction);
  }

  methodDescriptorReactivateAction = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ReactivateAction',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ReactivateActionRequest,
    zitadel_management_pb.ReactivateActionResponse,
    (request: zitadel_management_pb.ReactivateActionRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ReactivateActionResponse.deserializeBinary
  );

  reactivateAction(
    request: zitadel_management_pb.ReactivateActionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ReactivateActionResponse>;

  reactivateAction(
    request: zitadel_management_pb.ReactivateActionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateActionResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ReactivateActionResponse>;

  reactivateAction(
    request: zitadel_management_pb.ReactivateActionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ReactivateActionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ReactivateAction',
        request,
        metadata || {},
        this.methodDescriptorReactivateAction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ReactivateAction',
    request,
    metadata || {},
    this.methodDescriptorReactivateAction);
  }

  methodDescriptorDeleteAction = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/DeleteAction',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.DeleteActionRequest,
    zitadel_management_pb.DeleteActionResponse,
    (request: zitadel_management_pb.DeleteActionRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.DeleteActionResponse.deserializeBinary
  );

  deleteAction(
    request: zitadel_management_pb.DeleteActionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.DeleteActionResponse>;

  deleteAction(
    request: zitadel_management_pb.DeleteActionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeleteActionResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.DeleteActionResponse>;

  deleteAction(
    request: zitadel_management_pb.DeleteActionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.DeleteActionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/DeleteAction',
        request,
        metadata || {},
        this.methodDescriptorDeleteAction,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/DeleteAction',
    request,
    metadata || {},
    this.methodDescriptorDeleteAction);
  }

  methodDescriptorListFlowTypes = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListFlowTypes',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListFlowTypesRequest,
    zitadel_management_pb.ListFlowTypesResponse,
    (request: zitadel_management_pb.ListFlowTypesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListFlowTypesResponse.deserializeBinary
  );

  listFlowTypes(
    request: zitadel_management_pb.ListFlowTypesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListFlowTypesResponse>;

  listFlowTypes(
    request: zitadel_management_pb.ListFlowTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListFlowTypesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListFlowTypesResponse>;

  listFlowTypes(
    request: zitadel_management_pb.ListFlowTypesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListFlowTypesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListFlowTypes',
        request,
        metadata || {},
        this.methodDescriptorListFlowTypes,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListFlowTypes',
    request,
    metadata || {},
    this.methodDescriptorListFlowTypes);
  }

  methodDescriptorListFlowTriggerTypes = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ListFlowTriggerTypes',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ListFlowTriggerTypesRequest,
    zitadel_management_pb.ListFlowTriggerTypesResponse,
    (request: zitadel_management_pb.ListFlowTriggerTypesRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ListFlowTriggerTypesResponse.deserializeBinary
  );

  listFlowTriggerTypes(
    request: zitadel_management_pb.ListFlowTriggerTypesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ListFlowTriggerTypesResponse>;

  listFlowTriggerTypes(
    request: zitadel_management_pb.ListFlowTriggerTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListFlowTriggerTypesResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ListFlowTriggerTypesResponse>;

  listFlowTriggerTypes(
    request: zitadel_management_pb.ListFlowTriggerTypesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ListFlowTriggerTypesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ListFlowTriggerTypes',
        request,
        metadata || {},
        this.methodDescriptorListFlowTriggerTypes,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ListFlowTriggerTypes',
    request,
    metadata || {},
    this.methodDescriptorListFlowTriggerTypes);
  }

  methodDescriptorGetFlow = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/GetFlow',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.GetFlowRequest,
    zitadel_management_pb.GetFlowResponse,
    (request: zitadel_management_pb.GetFlowRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.GetFlowResponse.deserializeBinary
  );

  getFlow(
    request: zitadel_management_pb.GetFlowRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.GetFlowResponse>;

  getFlow(
    request: zitadel_management_pb.GetFlowRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetFlowResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.GetFlowResponse>;

  getFlow(
    request: zitadel_management_pb.GetFlowRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.GetFlowResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/GetFlow',
        request,
        metadata || {},
        this.methodDescriptorGetFlow,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/GetFlow',
    request,
    metadata || {},
    this.methodDescriptorGetFlow);
  }

  methodDescriptorClearFlow = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/ClearFlow',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.ClearFlowRequest,
    zitadel_management_pb.ClearFlowResponse,
    (request: zitadel_management_pb.ClearFlowRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.ClearFlowResponse.deserializeBinary
  );

  clearFlow(
    request: zitadel_management_pb.ClearFlowRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.ClearFlowResponse>;

  clearFlow(
    request: zitadel_management_pb.ClearFlowRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ClearFlowResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.ClearFlowResponse>;

  clearFlow(
    request: zitadel_management_pb.ClearFlowRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.ClearFlowResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/ClearFlow',
        request,
        metadata || {},
        this.methodDescriptorClearFlow,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/ClearFlow',
    request,
    metadata || {},
    this.methodDescriptorClearFlow);
  }

  methodDescriptorSetTriggerActions = new grpcWeb.MethodDescriptor(
    '/zitadel.management.v1.ManagementService/SetTriggerActions',
    grpcWeb.MethodType.UNARY,
    zitadel_management_pb.SetTriggerActionsRequest,
    zitadel_management_pb.SetTriggerActionsResponse,
    (request: zitadel_management_pb.SetTriggerActionsRequest) => {
      return request.serializeBinary();
    },
    zitadel_management_pb.SetTriggerActionsResponse.deserializeBinary
  );

  setTriggerActions(
    request: zitadel_management_pb.SetTriggerActionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_management_pb.SetTriggerActionsResponse>;

  setTriggerActions(
    request: zitadel_management_pb.SetTriggerActionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetTriggerActionsResponse) => void): grpcWeb.ClientReadableStream<zitadel_management_pb.SetTriggerActionsResponse>;

  setTriggerActions(
    request: zitadel_management_pb.SetTriggerActionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_management_pb.SetTriggerActionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.management.v1.ManagementService/SetTriggerActions',
        request,
        metadata || {},
        this.methodDescriptorSetTriggerActions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.management.v1.ManagementService/SetTriggerActions',
    request,
    metadata || {},
    this.methodDescriptorSetTriggerActions);
  }

}

