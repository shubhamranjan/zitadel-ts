/**
 * @fileoverview gRPC-Web generated client stub for zitadel.system.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: zitadel/system.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as zitadel_system_pb from '../zitadel/system_pb'; // proto import: "zitadel/system.proto"


export class SystemServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorHealthz = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/Healthz',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.HealthzRequest,
    zitadel_system_pb.HealthzResponse,
    (request: zitadel_system_pb.HealthzRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.HealthzResponse.deserializeBinary
  );

  healthz(
    request: zitadel_system_pb.HealthzRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.HealthzResponse>;

  healthz(
    request: zitadel_system_pb.HealthzRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.HealthzResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.HealthzResponse>;

  healthz(
    request: zitadel_system_pb.HealthzRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.HealthzResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/Healthz',
        request,
        metadata || {},
        this.methodDescriptorHealthz,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/Healthz',
    request,
    metadata || {},
    this.methodDescriptorHealthz);
  }

  methodDescriptorListInstances = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/ListInstances',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.ListInstancesRequest,
    zitadel_system_pb.ListInstancesResponse,
    (request: zitadel_system_pb.ListInstancesRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.ListInstancesResponse.deserializeBinary
  );

  listInstances(
    request: zitadel_system_pb.ListInstancesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.ListInstancesResponse>;

  listInstances(
    request: zitadel_system_pb.ListInstancesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListInstancesResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.ListInstancesResponse>;

  listInstances(
    request: zitadel_system_pb.ListInstancesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListInstancesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/ListInstances',
        request,
        metadata || {},
        this.methodDescriptorListInstances,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/ListInstances',
    request,
    metadata || {},
    this.methodDescriptorListInstances);
  }

  methodDescriptorGetInstance = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/GetInstance',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.GetInstanceRequest,
    zitadel_system_pb.GetInstanceResponse,
    (request: zitadel_system_pb.GetInstanceRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.GetInstanceResponse.deserializeBinary
  );

  getInstance(
    request: zitadel_system_pb.GetInstanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.GetInstanceResponse>;

  getInstance(
    request: zitadel_system_pb.GetInstanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.GetInstanceResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.GetInstanceResponse>;

  getInstance(
    request: zitadel_system_pb.GetInstanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.GetInstanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/GetInstance',
        request,
        metadata || {},
        this.methodDescriptorGetInstance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/GetInstance',
    request,
    metadata || {},
    this.methodDescriptorGetInstance);
  }

  methodDescriptorAddInstance = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/AddInstance',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.AddInstanceRequest,
    zitadel_system_pb.AddInstanceResponse,
    (request: zitadel_system_pb.AddInstanceRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.AddInstanceResponse.deserializeBinary
  );

  addInstance(
    request: zitadel_system_pb.AddInstanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.AddInstanceResponse>;

  addInstance(
    request: zitadel_system_pb.AddInstanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.AddInstanceResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.AddInstanceResponse>;

  addInstance(
    request: zitadel_system_pb.AddInstanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.AddInstanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/AddInstance',
        request,
        metadata || {},
        this.methodDescriptorAddInstance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/AddInstance',
    request,
    metadata || {},
    this.methodDescriptorAddInstance);
  }

  methodDescriptorUpdateInstance = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/UpdateInstance',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.UpdateInstanceRequest,
    zitadel_system_pb.UpdateInstanceResponse,
    (request: zitadel_system_pb.UpdateInstanceRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.UpdateInstanceResponse.deserializeBinary
  );

  updateInstance(
    request: zitadel_system_pb.UpdateInstanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.UpdateInstanceResponse>;

  updateInstance(
    request: zitadel_system_pb.UpdateInstanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.UpdateInstanceResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.UpdateInstanceResponse>;

  updateInstance(
    request: zitadel_system_pb.UpdateInstanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.UpdateInstanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/UpdateInstance',
        request,
        metadata || {},
        this.methodDescriptorUpdateInstance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/UpdateInstance',
    request,
    metadata || {},
    this.methodDescriptorUpdateInstance);
  }

  methodDescriptorCreateInstance = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/CreateInstance',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.CreateInstanceRequest,
    zitadel_system_pb.CreateInstanceResponse,
    (request: zitadel_system_pb.CreateInstanceRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.CreateInstanceResponse.deserializeBinary
  );

  createInstance(
    request: zitadel_system_pb.CreateInstanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.CreateInstanceResponse>;

  createInstance(
    request: zitadel_system_pb.CreateInstanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.CreateInstanceResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.CreateInstanceResponse>;

  createInstance(
    request: zitadel_system_pb.CreateInstanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.CreateInstanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/CreateInstance',
        request,
        metadata || {},
        this.methodDescriptorCreateInstance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/CreateInstance',
    request,
    metadata || {},
    this.methodDescriptorCreateInstance);
  }

  methodDescriptorRemoveInstance = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/RemoveInstance',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.RemoveInstanceRequest,
    zitadel_system_pb.RemoveInstanceResponse,
    (request: zitadel_system_pb.RemoveInstanceRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.RemoveInstanceResponse.deserializeBinary
  );

  removeInstance(
    request: zitadel_system_pb.RemoveInstanceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.RemoveInstanceResponse>;

  removeInstance(
    request: zitadel_system_pb.RemoveInstanceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.RemoveInstanceResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.RemoveInstanceResponse>;

  removeInstance(
    request: zitadel_system_pb.RemoveInstanceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.RemoveInstanceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/RemoveInstance',
        request,
        metadata || {},
        this.methodDescriptorRemoveInstance,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/RemoveInstance',
    request,
    metadata || {},
    this.methodDescriptorRemoveInstance);
  }

  methodDescriptorListIAMMembers = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/ListIAMMembers',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.ListIAMMembersRequest,
    zitadel_system_pb.ListIAMMembersResponse,
    (request: zitadel_system_pb.ListIAMMembersRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.ListIAMMembersResponse.deserializeBinary
  );

  listIAMMembers(
    request: zitadel_system_pb.ListIAMMembersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.ListIAMMembersResponse>;

  listIAMMembers(
    request: zitadel_system_pb.ListIAMMembersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListIAMMembersResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.ListIAMMembersResponse>;

  listIAMMembers(
    request: zitadel_system_pb.ListIAMMembersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListIAMMembersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/ListIAMMembers',
        request,
        metadata || {},
        this.methodDescriptorListIAMMembers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/ListIAMMembers',
    request,
    metadata || {},
    this.methodDescriptorListIAMMembers);
  }

  methodDescriptorExistsDomain = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/ExistsDomain',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.ExistsDomainRequest,
    zitadel_system_pb.ExistsDomainResponse,
    (request: zitadel_system_pb.ExistsDomainRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.ExistsDomainResponse.deserializeBinary
  );

  existsDomain(
    request: zitadel_system_pb.ExistsDomainRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.ExistsDomainResponse>;

  existsDomain(
    request: zitadel_system_pb.ExistsDomainRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ExistsDomainResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.ExistsDomainResponse>;

  existsDomain(
    request: zitadel_system_pb.ExistsDomainRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ExistsDomainResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/ExistsDomain',
        request,
        metadata || {},
        this.methodDescriptorExistsDomain,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/ExistsDomain',
    request,
    metadata || {},
    this.methodDescriptorExistsDomain);
  }

  methodDescriptorListDomains = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/ListDomains',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.ListDomainsRequest,
    zitadel_system_pb.ListDomainsResponse,
    (request: zitadel_system_pb.ListDomainsRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.ListDomainsResponse.deserializeBinary
  );

  listDomains(
    request: zitadel_system_pb.ListDomainsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.ListDomainsResponse>;

  listDomains(
    request: zitadel_system_pb.ListDomainsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListDomainsResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.ListDomainsResponse>;

  listDomains(
    request: zitadel_system_pb.ListDomainsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListDomainsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/ListDomains',
        request,
        metadata || {},
        this.methodDescriptorListDomains,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/ListDomains',
    request,
    metadata || {},
    this.methodDescriptorListDomains);
  }

  methodDescriptorAddDomain = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/AddDomain',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.AddDomainRequest,
    zitadel_system_pb.AddDomainResponse,
    (request: zitadel_system_pb.AddDomainRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.AddDomainResponse.deserializeBinary
  );

  addDomain(
    request: zitadel_system_pb.AddDomainRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.AddDomainResponse>;

  addDomain(
    request: zitadel_system_pb.AddDomainRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.AddDomainResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.AddDomainResponse>;

  addDomain(
    request: zitadel_system_pb.AddDomainRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.AddDomainResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/AddDomain',
        request,
        metadata || {},
        this.methodDescriptorAddDomain,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/AddDomain',
    request,
    metadata || {},
    this.methodDescriptorAddDomain);
  }

  methodDescriptorRemoveDomain = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/RemoveDomain',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.RemoveDomainRequest,
    zitadel_system_pb.RemoveDomainResponse,
    (request: zitadel_system_pb.RemoveDomainRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.RemoveDomainResponse.deserializeBinary
  );

  removeDomain(
    request: zitadel_system_pb.RemoveDomainRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.RemoveDomainResponse>;

  removeDomain(
    request: zitadel_system_pb.RemoveDomainRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.RemoveDomainResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.RemoveDomainResponse>;

  removeDomain(
    request: zitadel_system_pb.RemoveDomainRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.RemoveDomainResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/RemoveDomain',
        request,
        metadata || {},
        this.methodDescriptorRemoveDomain,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/RemoveDomain',
    request,
    metadata || {},
    this.methodDescriptorRemoveDomain);
  }

  methodDescriptorSetPrimaryDomain = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/SetPrimaryDomain',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.SetPrimaryDomainRequest,
    zitadel_system_pb.SetPrimaryDomainResponse,
    (request: zitadel_system_pb.SetPrimaryDomainRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.SetPrimaryDomainResponse.deserializeBinary
  );

  setPrimaryDomain(
    request: zitadel_system_pb.SetPrimaryDomainRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.SetPrimaryDomainResponse>;

  setPrimaryDomain(
    request: zitadel_system_pb.SetPrimaryDomainRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.SetPrimaryDomainResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.SetPrimaryDomainResponse>;

  setPrimaryDomain(
    request: zitadel_system_pb.SetPrimaryDomainRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.SetPrimaryDomainResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/SetPrimaryDomain',
        request,
        metadata || {},
        this.methodDescriptorSetPrimaryDomain,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/SetPrimaryDomain',
    request,
    metadata || {},
    this.methodDescriptorSetPrimaryDomain);
  }

  methodDescriptorListViews = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/ListViews',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.ListViewsRequest,
    zitadel_system_pb.ListViewsResponse,
    (request: zitadel_system_pb.ListViewsRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.ListViewsResponse.deserializeBinary
  );

  listViews(
    request: zitadel_system_pb.ListViewsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.ListViewsResponse>;

  listViews(
    request: zitadel_system_pb.ListViewsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListViewsResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.ListViewsResponse>;

  listViews(
    request: zitadel_system_pb.ListViewsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListViewsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/ListViews',
        request,
        metadata || {},
        this.methodDescriptorListViews,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/ListViews',
    request,
    metadata || {},
    this.methodDescriptorListViews);
  }

  methodDescriptorClearView = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/ClearView',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.ClearViewRequest,
    zitadel_system_pb.ClearViewResponse,
    (request: zitadel_system_pb.ClearViewRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.ClearViewResponse.deserializeBinary
  );

  clearView(
    request: zitadel_system_pb.ClearViewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.ClearViewResponse>;

  clearView(
    request: zitadel_system_pb.ClearViewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ClearViewResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.ClearViewResponse>;

  clearView(
    request: zitadel_system_pb.ClearViewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ClearViewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/ClearView',
        request,
        metadata || {},
        this.methodDescriptorClearView,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/ClearView',
    request,
    metadata || {},
    this.methodDescriptorClearView);
  }

  methodDescriptorListFailedEvents = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/ListFailedEvents',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.ListFailedEventsRequest,
    zitadel_system_pb.ListFailedEventsResponse,
    (request: zitadel_system_pb.ListFailedEventsRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.ListFailedEventsResponse.deserializeBinary
  );

  listFailedEvents(
    request: zitadel_system_pb.ListFailedEventsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.ListFailedEventsResponse>;

  listFailedEvents(
    request: zitadel_system_pb.ListFailedEventsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListFailedEventsResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.ListFailedEventsResponse>;

  listFailedEvents(
    request: zitadel_system_pb.ListFailedEventsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ListFailedEventsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/ListFailedEvents',
        request,
        metadata || {},
        this.methodDescriptorListFailedEvents,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/ListFailedEvents',
    request,
    metadata || {},
    this.methodDescriptorListFailedEvents);
  }

  methodDescriptorRemoveFailedEvent = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/RemoveFailedEvent',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.RemoveFailedEventRequest,
    zitadel_system_pb.RemoveFailedEventResponse,
    (request: zitadel_system_pb.RemoveFailedEventRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.RemoveFailedEventResponse.deserializeBinary
  );

  removeFailedEvent(
    request: zitadel_system_pb.RemoveFailedEventRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.RemoveFailedEventResponse>;

  removeFailedEvent(
    request: zitadel_system_pb.RemoveFailedEventRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.RemoveFailedEventResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.RemoveFailedEventResponse>;

  removeFailedEvent(
    request: zitadel_system_pb.RemoveFailedEventRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.RemoveFailedEventResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/RemoveFailedEvent',
        request,
        metadata || {},
        this.methodDescriptorRemoveFailedEvent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/RemoveFailedEvent',
    request,
    metadata || {},
    this.methodDescriptorRemoveFailedEvent);
  }

  methodDescriptorAddQuota = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/AddQuota',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.AddQuotaRequest,
    zitadel_system_pb.AddQuotaResponse,
    (request: zitadel_system_pb.AddQuotaRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.AddQuotaResponse.deserializeBinary
  );

  addQuota(
    request: zitadel_system_pb.AddQuotaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.AddQuotaResponse>;

  addQuota(
    request: zitadel_system_pb.AddQuotaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.AddQuotaResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.AddQuotaResponse>;

  addQuota(
    request: zitadel_system_pb.AddQuotaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.AddQuotaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/AddQuota',
        request,
        metadata || {},
        this.methodDescriptorAddQuota,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/AddQuota',
    request,
    metadata || {},
    this.methodDescriptorAddQuota);
  }

  methodDescriptorSetQuota = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/SetQuota',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.SetQuotaRequest,
    zitadel_system_pb.SetQuotaResponse,
    (request: zitadel_system_pb.SetQuotaRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.SetQuotaResponse.deserializeBinary
  );

  setQuota(
    request: zitadel_system_pb.SetQuotaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.SetQuotaResponse>;

  setQuota(
    request: zitadel_system_pb.SetQuotaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.SetQuotaResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.SetQuotaResponse>;

  setQuota(
    request: zitadel_system_pb.SetQuotaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.SetQuotaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/SetQuota',
        request,
        metadata || {},
        this.methodDescriptorSetQuota,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/SetQuota',
    request,
    metadata || {},
    this.methodDescriptorSetQuota);
  }

  methodDescriptorRemoveQuota = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/RemoveQuota',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.RemoveQuotaRequest,
    zitadel_system_pb.RemoveQuotaResponse,
    (request: zitadel_system_pb.RemoveQuotaRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.RemoveQuotaResponse.deserializeBinary
  );

  removeQuota(
    request: zitadel_system_pb.RemoveQuotaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.RemoveQuotaResponse>;

  removeQuota(
    request: zitadel_system_pb.RemoveQuotaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.RemoveQuotaResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.RemoveQuotaResponse>;

  removeQuota(
    request: zitadel_system_pb.RemoveQuotaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.RemoveQuotaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/RemoveQuota',
        request,
        metadata || {},
        this.methodDescriptorRemoveQuota,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/RemoveQuota',
    request,
    metadata || {},
    this.methodDescriptorRemoveQuota);
  }

  methodDescriptorSetInstanceFeature = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/SetInstanceFeature',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.SetInstanceFeatureRequest,
    zitadel_system_pb.SetInstanceFeatureResponse,
    (request: zitadel_system_pb.SetInstanceFeatureRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.SetInstanceFeatureResponse.deserializeBinary
  );

  setInstanceFeature(
    request: zitadel_system_pb.SetInstanceFeatureRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.SetInstanceFeatureResponse>;

  setInstanceFeature(
    request: zitadel_system_pb.SetInstanceFeatureRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.SetInstanceFeatureResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.SetInstanceFeatureResponse>;

  setInstanceFeature(
    request: zitadel_system_pb.SetInstanceFeatureRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.SetInstanceFeatureResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/SetInstanceFeature',
        request,
        metadata || {},
        this.methodDescriptorSetInstanceFeature,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/SetInstanceFeature',
    request,
    metadata || {},
    this.methodDescriptorSetInstanceFeature);
  }

  methodDescriptorSetLimits = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/SetLimits',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.SetLimitsRequest,
    zitadel_system_pb.SetLimitsResponse,
    (request: zitadel_system_pb.SetLimitsRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.SetLimitsResponse.deserializeBinary
  );

  setLimits(
    request: zitadel_system_pb.SetLimitsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.SetLimitsResponse>;

  setLimits(
    request: zitadel_system_pb.SetLimitsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.SetLimitsResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.SetLimitsResponse>;

  setLimits(
    request: zitadel_system_pb.SetLimitsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.SetLimitsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/SetLimits',
        request,
        metadata || {},
        this.methodDescriptorSetLimits,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/SetLimits',
    request,
    metadata || {},
    this.methodDescriptorSetLimits);
  }

  methodDescriptorResetLimits = new grpcWeb.MethodDescriptor(
    '/zitadel.system.v1.SystemService/ResetLimits',
    grpcWeb.MethodType.UNARY,
    zitadel_system_pb.ResetLimitsRequest,
    zitadel_system_pb.ResetLimitsResponse,
    (request: zitadel_system_pb.ResetLimitsRequest) => {
      return request.serializeBinary();
    },
    zitadel_system_pb.ResetLimitsResponse.deserializeBinary
  );

  resetLimits(
    request: zitadel_system_pb.ResetLimitsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_system_pb.ResetLimitsResponse>;

  resetLimits(
    request: zitadel_system_pb.ResetLimitsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ResetLimitsResponse) => void): grpcWeb.ClientReadableStream<zitadel_system_pb.ResetLimitsResponse>;

  resetLimits(
    request: zitadel_system_pb.ResetLimitsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_system_pb.ResetLimitsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.system.v1.SystemService/ResetLimits',
        request,
        metadata || {},
        this.methodDescriptorResetLimits,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.system.v1.SystemService/ResetLimits',
    request,
    metadata || {},
    this.methodDescriptorResetLimits);
  }

}

