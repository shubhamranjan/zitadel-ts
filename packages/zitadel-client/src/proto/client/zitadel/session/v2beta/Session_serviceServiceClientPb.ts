/**
 * @fileoverview gRPC-Web generated client stub for zitadel.session.v2beta
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: zitadel/session/v2beta/session_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as zitadel_session_v2beta_session_service_pb from '../../../zitadel/session/v2beta/session_service_pb'; // proto import: "zitadel/session/v2beta/session_service.proto"


export class SessionServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListSessions = new grpcWeb.MethodDescriptor(
    '/zitadel.session.v2beta.SessionService/ListSessions',
    grpcWeb.MethodType.UNARY,
    zitadel_session_v2beta_session_service_pb.ListSessionsRequest,
    zitadel_session_v2beta_session_service_pb.ListSessionsResponse,
    (request: zitadel_session_v2beta_session_service_pb.ListSessionsRequest) => {
      return request.serializeBinary();
    },
    zitadel_session_v2beta_session_service_pb.ListSessionsResponse.deserializeBinary
  );

  listSessions(
    request: zitadel_session_v2beta_session_service_pb.ListSessionsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_session_v2beta_session_service_pb.ListSessionsResponse>;

  listSessions(
    request: zitadel_session_v2beta_session_service_pb.ListSessionsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.ListSessionsResponse) => void): grpcWeb.ClientReadableStream<zitadel_session_v2beta_session_service_pb.ListSessionsResponse>;

  listSessions(
    request: zitadel_session_v2beta_session_service_pb.ListSessionsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.ListSessionsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.session.v2beta.SessionService/ListSessions',
        request,
        metadata || {},
        this.methodDescriptorListSessions,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.session.v2beta.SessionService/ListSessions',
    request,
    metadata || {},
    this.methodDescriptorListSessions);
  }

  methodDescriptorGetSession = new grpcWeb.MethodDescriptor(
    '/zitadel.session.v2beta.SessionService/GetSession',
    grpcWeb.MethodType.UNARY,
    zitadel_session_v2beta_session_service_pb.GetSessionRequest,
    zitadel_session_v2beta_session_service_pb.GetSessionResponse,
    (request: zitadel_session_v2beta_session_service_pb.GetSessionRequest) => {
      return request.serializeBinary();
    },
    zitadel_session_v2beta_session_service_pb.GetSessionResponse.deserializeBinary
  );

  getSession(
    request: zitadel_session_v2beta_session_service_pb.GetSessionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_session_v2beta_session_service_pb.GetSessionResponse>;

  getSession(
    request: zitadel_session_v2beta_session_service_pb.GetSessionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.GetSessionResponse) => void): grpcWeb.ClientReadableStream<zitadel_session_v2beta_session_service_pb.GetSessionResponse>;

  getSession(
    request: zitadel_session_v2beta_session_service_pb.GetSessionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.GetSessionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.session.v2beta.SessionService/GetSession',
        request,
        metadata || {},
        this.methodDescriptorGetSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.session.v2beta.SessionService/GetSession',
    request,
    metadata || {},
    this.methodDescriptorGetSession);
  }

  methodDescriptorCreateSession = new grpcWeb.MethodDescriptor(
    '/zitadel.session.v2beta.SessionService/CreateSession',
    grpcWeb.MethodType.UNARY,
    zitadel_session_v2beta_session_service_pb.CreateSessionRequest,
    zitadel_session_v2beta_session_service_pb.CreateSessionResponse,
    (request: zitadel_session_v2beta_session_service_pb.CreateSessionRequest) => {
      return request.serializeBinary();
    },
    zitadel_session_v2beta_session_service_pb.CreateSessionResponse.deserializeBinary
  );

  createSession(
    request: zitadel_session_v2beta_session_service_pb.CreateSessionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_session_v2beta_session_service_pb.CreateSessionResponse>;

  createSession(
    request: zitadel_session_v2beta_session_service_pb.CreateSessionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.CreateSessionResponse) => void): grpcWeb.ClientReadableStream<zitadel_session_v2beta_session_service_pb.CreateSessionResponse>;

  createSession(
    request: zitadel_session_v2beta_session_service_pb.CreateSessionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.CreateSessionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.session.v2beta.SessionService/CreateSession',
        request,
        metadata || {},
        this.methodDescriptorCreateSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.session.v2beta.SessionService/CreateSession',
    request,
    metadata || {},
    this.methodDescriptorCreateSession);
  }

  methodDescriptorSetSession = new grpcWeb.MethodDescriptor(
    '/zitadel.session.v2beta.SessionService/SetSession',
    grpcWeb.MethodType.UNARY,
    zitadel_session_v2beta_session_service_pb.SetSessionRequest,
    zitadel_session_v2beta_session_service_pb.SetSessionResponse,
    (request: zitadel_session_v2beta_session_service_pb.SetSessionRequest) => {
      return request.serializeBinary();
    },
    zitadel_session_v2beta_session_service_pb.SetSessionResponse.deserializeBinary
  );

  setSession(
    request: zitadel_session_v2beta_session_service_pb.SetSessionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_session_v2beta_session_service_pb.SetSessionResponse>;

  setSession(
    request: zitadel_session_v2beta_session_service_pb.SetSessionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.SetSessionResponse) => void): grpcWeb.ClientReadableStream<zitadel_session_v2beta_session_service_pb.SetSessionResponse>;

  setSession(
    request: zitadel_session_v2beta_session_service_pb.SetSessionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.SetSessionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.session.v2beta.SessionService/SetSession',
        request,
        metadata || {},
        this.methodDescriptorSetSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.session.v2beta.SessionService/SetSession',
    request,
    metadata || {},
    this.methodDescriptorSetSession);
  }

  methodDescriptorDeleteSession = new grpcWeb.MethodDescriptor(
    '/zitadel.session.v2beta.SessionService/DeleteSession',
    grpcWeb.MethodType.UNARY,
    zitadel_session_v2beta_session_service_pb.DeleteSessionRequest,
    zitadel_session_v2beta_session_service_pb.DeleteSessionResponse,
    (request: zitadel_session_v2beta_session_service_pb.DeleteSessionRequest) => {
      return request.serializeBinary();
    },
    zitadel_session_v2beta_session_service_pb.DeleteSessionResponse.deserializeBinary
  );

  deleteSession(
    request: zitadel_session_v2beta_session_service_pb.DeleteSessionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_session_v2beta_session_service_pb.DeleteSessionResponse>;

  deleteSession(
    request: zitadel_session_v2beta_session_service_pb.DeleteSessionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.DeleteSessionResponse) => void): grpcWeb.ClientReadableStream<zitadel_session_v2beta_session_service_pb.DeleteSessionResponse>;

  deleteSession(
    request: zitadel_session_v2beta_session_service_pb.DeleteSessionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_session_v2beta_session_service_pb.DeleteSessionResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.session.v2beta.SessionService/DeleteSession',
        request,
        metadata || {},
        this.methodDescriptorDeleteSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.session.v2beta.SessionService/DeleteSession',
    request,
    metadata || {},
    this.methodDescriptorDeleteSession);
  }

}

