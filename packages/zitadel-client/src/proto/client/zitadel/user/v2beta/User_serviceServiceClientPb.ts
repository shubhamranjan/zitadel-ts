/**
 * @fileoverview gRPC-Web generated client stub for zitadel.user.v2beta
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: zitadel/user/v2beta/user_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as zitadel_user_v2beta_user_service_pb from '../../../zitadel/user/v2beta/user_service_pb'; // proto import: "zitadel/user/v2beta/user_service.proto"


export class UserServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorAddHumanUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/AddHumanUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.AddHumanUserRequest,
    zitadel_user_v2beta_user_service_pb.AddHumanUserResponse,
    (request: zitadel_user_v2beta_user_service_pb.AddHumanUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.AddHumanUserResponse.deserializeBinary
  );

  addHumanUser(
    request: zitadel_user_v2beta_user_service_pb.AddHumanUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.AddHumanUserResponse>;

  addHumanUser(
    request: zitadel_user_v2beta_user_service_pb.AddHumanUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.AddHumanUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.AddHumanUserResponse>;

  addHumanUser(
    request: zitadel_user_v2beta_user_service_pb.AddHumanUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.AddHumanUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/AddHumanUser',
        request,
        metadata || {},
        this.methodDescriptorAddHumanUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/AddHumanUser',
    request,
    metadata || {},
    this.methodDescriptorAddHumanUser);
  }

  methodDescriptorSetEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/SetEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.SetEmailRequest,
    zitadel_user_v2beta_user_service_pb.SetEmailResponse,
    (request: zitadel_user_v2beta_user_service_pb.SetEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.SetEmailResponse.deserializeBinary
  );

  setEmail(
    request: zitadel_user_v2beta_user_service_pb.SetEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.SetEmailResponse>;

  setEmail(
    request: zitadel_user_v2beta_user_service_pb.SetEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.SetEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.SetEmailResponse>;

  setEmail(
    request: zitadel_user_v2beta_user_service_pb.SetEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.SetEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/SetEmail',
        request,
        metadata || {},
        this.methodDescriptorSetEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/SetEmail',
    request,
    metadata || {},
    this.methodDescriptorSetEmail);
  }

  methodDescriptorVerifyEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/VerifyEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.VerifyEmailRequest,
    zitadel_user_v2beta_user_service_pb.VerifyEmailResponse,
    (request: zitadel_user_v2beta_user_service_pb.VerifyEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.VerifyEmailResponse.deserializeBinary
  );

  verifyEmail(
    request: zitadel_user_v2beta_user_service_pb.VerifyEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.VerifyEmailResponse>;

  verifyEmail(
    request: zitadel_user_v2beta_user_service_pb.VerifyEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.VerifyEmailResponse>;

  verifyEmail(
    request: zitadel_user_v2beta_user_service_pb.VerifyEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/VerifyEmail',
        request,
        metadata || {},
        this.methodDescriptorVerifyEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/VerifyEmail',
    request,
    metadata || {},
    this.methodDescriptorVerifyEmail);
  }

  methodDescriptorSetPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/SetPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.SetPhoneRequest,
    zitadel_user_v2beta_user_service_pb.SetPhoneResponse,
    (request: zitadel_user_v2beta_user_service_pb.SetPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.SetPhoneResponse.deserializeBinary
  );

  setPhone(
    request: zitadel_user_v2beta_user_service_pb.SetPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.SetPhoneResponse>;

  setPhone(
    request: zitadel_user_v2beta_user_service_pb.SetPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.SetPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.SetPhoneResponse>;

  setPhone(
    request: zitadel_user_v2beta_user_service_pb.SetPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.SetPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/SetPhone',
        request,
        metadata || {},
        this.methodDescriptorSetPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/SetPhone',
    request,
    metadata || {},
    this.methodDescriptorSetPhone);
  }

  methodDescriptorVerifyPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/VerifyPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.VerifyPhoneRequest,
    zitadel_user_v2beta_user_service_pb.VerifyPhoneResponse,
    (request: zitadel_user_v2beta_user_service_pb.VerifyPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.VerifyPhoneResponse.deserializeBinary
  );

  verifyPhone(
    request: zitadel_user_v2beta_user_service_pb.VerifyPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.VerifyPhoneResponse>;

  verifyPhone(
    request: zitadel_user_v2beta_user_service_pb.VerifyPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.VerifyPhoneResponse>;

  verifyPhone(
    request: zitadel_user_v2beta_user_service_pb.VerifyPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/VerifyPhone',
        request,
        metadata || {},
        this.methodDescriptorVerifyPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/VerifyPhone',
    request,
    metadata || {},
    this.methodDescriptorVerifyPhone);
  }

  methodDescriptorUpdateHumanUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/UpdateHumanUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.UpdateHumanUserRequest,
    zitadel_user_v2beta_user_service_pb.UpdateHumanUserResponse,
    (request: zitadel_user_v2beta_user_service_pb.UpdateHumanUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.UpdateHumanUserResponse.deserializeBinary
  );

  updateHumanUser(
    request: zitadel_user_v2beta_user_service_pb.UpdateHumanUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.UpdateHumanUserResponse>;

  updateHumanUser(
    request: zitadel_user_v2beta_user_service_pb.UpdateHumanUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.UpdateHumanUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.UpdateHumanUserResponse>;

  updateHumanUser(
    request: zitadel_user_v2beta_user_service_pb.UpdateHumanUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.UpdateHumanUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/UpdateHumanUser',
        request,
        metadata || {},
        this.methodDescriptorUpdateHumanUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/UpdateHumanUser',
    request,
    metadata || {},
    this.methodDescriptorUpdateHumanUser);
  }

  methodDescriptorDeactivateUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/DeactivateUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.DeactivateUserRequest,
    zitadel_user_v2beta_user_service_pb.DeactivateUserResponse,
    (request: zitadel_user_v2beta_user_service_pb.DeactivateUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.DeactivateUserResponse.deserializeBinary
  );

  deactivateUser(
    request: zitadel_user_v2beta_user_service_pb.DeactivateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.DeactivateUserResponse>;

  deactivateUser(
    request: zitadel_user_v2beta_user_service_pb.DeactivateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.DeactivateUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.DeactivateUserResponse>;

  deactivateUser(
    request: zitadel_user_v2beta_user_service_pb.DeactivateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.DeactivateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/DeactivateUser',
        request,
        metadata || {},
        this.methodDescriptorDeactivateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/DeactivateUser',
    request,
    metadata || {},
    this.methodDescriptorDeactivateUser);
  }

  methodDescriptorReactivateUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/ReactivateUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.ReactivateUserRequest,
    zitadel_user_v2beta_user_service_pb.ReactivateUserResponse,
    (request: zitadel_user_v2beta_user_service_pb.ReactivateUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.ReactivateUserResponse.deserializeBinary
  );

  reactivateUser(
    request: zitadel_user_v2beta_user_service_pb.ReactivateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.ReactivateUserResponse>;

  reactivateUser(
    request: zitadel_user_v2beta_user_service_pb.ReactivateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.ReactivateUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.ReactivateUserResponse>;

  reactivateUser(
    request: zitadel_user_v2beta_user_service_pb.ReactivateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.ReactivateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/ReactivateUser',
        request,
        metadata || {},
        this.methodDescriptorReactivateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/ReactivateUser',
    request,
    metadata || {},
    this.methodDescriptorReactivateUser);
  }

  methodDescriptorLockUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/LockUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.LockUserRequest,
    zitadel_user_v2beta_user_service_pb.LockUserResponse,
    (request: zitadel_user_v2beta_user_service_pb.LockUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.LockUserResponse.deserializeBinary
  );

  lockUser(
    request: zitadel_user_v2beta_user_service_pb.LockUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.LockUserResponse>;

  lockUser(
    request: zitadel_user_v2beta_user_service_pb.LockUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.LockUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.LockUserResponse>;

  lockUser(
    request: zitadel_user_v2beta_user_service_pb.LockUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.LockUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/LockUser',
        request,
        metadata || {},
        this.methodDescriptorLockUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/LockUser',
    request,
    metadata || {},
    this.methodDescriptorLockUser);
  }

  methodDescriptorUnlockUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/UnlockUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.UnlockUserRequest,
    zitadel_user_v2beta_user_service_pb.UnlockUserResponse,
    (request: zitadel_user_v2beta_user_service_pb.UnlockUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.UnlockUserResponse.deserializeBinary
  );

  unlockUser(
    request: zitadel_user_v2beta_user_service_pb.UnlockUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.UnlockUserResponse>;

  unlockUser(
    request: zitadel_user_v2beta_user_service_pb.UnlockUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.UnlockUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.UnlockUserResponse>;

  unlockUser(
    request: zitadel_user_v2beta_user_service_pb.UnlockUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.UnlockUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/UnlockUser',
        request,
        metadata || {},
        this.methodDescriptorUnlockUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/UnlockUser',
    request,
    metadata || {},
    this.methodDescriptorUnlockUser);
  }

  methodDescriptorDeleteUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/DeleteUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.DeleteUserRequest,
    zitadel_user_v2beta_user_service_pb.DeleteUserResponse,
    (request: zitadel_user_v2beta_user_service_pb.DeleteUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.DeleteUserResponse.deserializeBinary
  );

  deleteUser(
    request: zitadel_user_v2beta_user_service_pb.DeleteUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.DeleteUserResponse>;

  deleteUser(
    request: zitadel_user_v2beta_user_service_pb.DeleteUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.DeleteUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.DeleteUserResponse>;

  deleteUser(
    request: zitadel_user_v2beta_user_service_pb.DeleteUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.DeleteUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/DeleteUser',
        request,
        metadata || {},
        this.methodDescriptorDeleteUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/DeleteUser',
    request,
    metadata || {},
    this.methodDescriptorDeleteUser);
  }

  methodDescriptorRegisterPasskey = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/RegisterPasskey',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.RegisterPasskeyRequest,
    zitadel_user_v2beta_user_service_pb.RegisterPasskeyResponse,
    (request: zitadel_user_v2beta_user_service_pb.RegisterPasskeyRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.RegisterPasskeyResponse.deserializeBinary
  );

  registerPasskey(
    request: zitadel_user_v2beta_user_service_pb.RegisterPasskeyRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.RegisterPasskeyResponse>;

  registerPasskey(
    request: zitadel_user_v2beta_user_service_pb.RegisterPasskeyRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RegisterPasskeyResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.RegisterPasskeyResponse>;

  registerPasskey(
    request: zitadel_user_v2beta_user_service_pb.RegisterPasskeyRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RegisterPasskeyResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/RegisterPasskey',
        request,
        metadata || {},
        this.methodDescriptorRegisterPasskey,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/RegisterPasskey',
    request,
    metadata || {},
    this.methodDescriptorRegisterPasskey);
  }

  methodDescriptorVerifyPasskeyRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/VerifyPasskeyRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationRequest,
    zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationResponse,
    (request: zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationResponse.deserializeBinary
  );

  verifyPasskeyRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationResponse>;

  verifyPasskeyRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationResponse>;

  verifyPasskeyRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyPasskeyRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/VerifyPasskeyRegistration',
        request,
        metadata || {},
        this.methodDescriptorVerifyPasskeyRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/VerifyPasskeyRegistration',
    request,
    metadata || {},
    this.methodDescriptorVerifyPasskeyRegistration);
  }

  methodDescriptorCreatePasskeyRegistrationLink = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/CreatePasskeyRegistrationLink',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkRequest,
    zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkResponse,
    (request: zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkResponse.deserializeBinary
  );

  createPasskeyRegistrationLink(
    request: zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkResponse>;

  createPasskeyRegistrationLink(
    request: zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkResponse>;

  createPasskeyRegistrationLink(
    request: zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.CreatePasskeyRegistrationLinkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/CreatePasskeyRegistrationLink',
        request,
        metadata || {},
        this.methodDescriptorCreatePasskeyRegistrationLink,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/CreatePasskeyRegistrationLink',
    request,
    metadata || {},
    this.methodDescriptorCreatePasskeyRegistrationLink);
  }

  methodDescriptorRegisterU2F = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/RegisterU2F',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.RegisterU2FRequest,
    zitadel_user_v2beta_user_service_pb.RegisterU2FResponse,
    (request: zitadel_user_v2beta_user_service_pb.RegisterU2FRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.RegisterU2FResponse.deserializeBinary
  );

  registerU2F(
    request: zitadel_user_v2beta_user_service_pb.RegisterU2FRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.RegisterU2FResponse>;

  registerU2F(
    request: zitadel_user_v2beta_user_service_pb.RegisterU2FRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RegisterU2FResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.RegisterU2FResponse>;

  registerU2F(
    request: zitadel_user_v2beta_user_service_pb.RegisterU2FRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RegisterU2FResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/RegisterU2F',
        request,
        metadata || {},
        this.methodDescriptorRegisterU2F,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/RegisterU2F',
    request,
    metadata || {},
    this.methodDescriptorRegisterU2F);
  }

  methodDescriptorVerifyU2FRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/VerifyU2FRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationRequest,
    zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationResponse,
    (request: zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationResponse.deserializeBinary
  );

  verifyU2FRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationResponse>;

  verifyU2FRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationResponse>;

  verifyU2FRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyU2FRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/VerifyU2FRegistration',
        request,
        metadata || {},
        this.methodDescriptorVerifyU2FRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/VerifyU2FRegistration',
    request,
    metadata || {},
    this.methodDescriptorVerifyU2FRegistration);
  }

  methodDescriptorRegisterTOTP = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/RegisterTOTP',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.RegisterTOTPRequest,
    zitadel_user_v2beta_user_service_pb.RegisterTOTPResponse,
    (request: zitadel_user_v2beta_user_service_pb.RegisterTOTPRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.RegisterTOTPResponse.deserializeBinary
  );

  registerTOTP(
    request: zitadel_user_v2beta_user_service_pb.RegisterTOTPRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.RegisterTOTPResponse>;

  registerTOTP(
    request: zitadel_user_v2beta_user_service_pb.RegisterTOTPRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RegisterTOTPResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.RegisterTOTPResponse>;

  registerTOTP(
    request: zitadel_user_v2beta_user_service_pb.RegisterTOTPRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RegisterTOTPResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/RegisterTOTP',
        request,
        metadata || {},
        this.methodDescriptorRegisterTOTP,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/RegisterTOTP',
    request,
    metadata || {},
    this.methodDescriptorRegisterTOTP);
  }

  methodDescriptorVerifyTOTPRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/VerifyTOTPRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationRequest,
    zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationResponse,
    (request: zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationResponse.deserializeBinary
  );

  verifyTOTPRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationResponse>;

  verifyTOTPRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationResponse>;

  verifyTOTPRegistration(
    request: zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.VerifyTOTPRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/VerifyTOTPRegistration',
        request,
        metadata || {},
        this.methodDescriptorVerifyTOTPRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/VerifyTOTPRegistration',
    request,
    metadata || {},
    this.methodDescriptorVerifyTOTPRegistration);
  }

  methodDescriptorAddOTPSMS = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/AddOTPSMS',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.AddOTPSMSRequest,
    zitadel_user_v2beta_user_service_pb.AddOTPSMSResponse,
    (request: zitadel_user_v2beta_user_service_pb.AddOTPSMSRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.AddOTPSMSResponse.deserializeBinary
  );

  addOTPSMS(
    request: zitadel_user_v2beta_user_service_pb.AddOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.AddOTPSMSResponse>;

  addOTPSMS(
    request: zitadel_user_v2beta_user_service_pb.AddOTPSMSRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.AddOTPSMSResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.AddOTPSMSResponse>;

  addOTPSMS(
    request: zitadel_user_v2beta_user_service_pb.AddOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.AddOTPSMSResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/AddOTPSMS',
        request,
        metadata || {},
        this.methodDescriptorAddOTPSMS,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/AddOTPSMS',
    request,
    metadata || {},
    this.methodDescriptorAddOTPSMS);
  }

  methodDescriptorRemoveOTPSMS = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/RemoveOTPSMS',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.RemoveOTPSMSRequest,
    zitadel_user_v2beta_user_service_pb.RemoveOTPSMSResponse,
    (request: zitadel_user_v2beta_user_service_pb.RemoveOTPSMSRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.RemoveOTPSMSResponse.deserializeBinary
  );

  removeOTPSMS(
    request: zitadel_user_v2beta_user_service_pb.RemoveOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.RemoveOTPSMSResponse>;

  removeOTPSMS(
    request: zitadel_user_v2beta_user_service_pb.RemoveOTPSMSRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RemoveOTPSMSResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.RemoveOTPSMSResponse>;

  removeOTPSMS(
    request: zitadel_user_v2beta_user_service_pb.RemoveOTPSMSRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RemoveOTPSMSResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/RemoveOTPSMS',
        request,
        metadata || {},
        this.methodDescriptorRemoveOTPSMS,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/RemoveOTPSMS',
    request,
    metadata || {},
    this.methodDescriptorRemoveOTPSMS);
  }

  methodDescriptorAddOTPEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/AddOTPEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.AddOTPEmailRequest,
    zitadel_user_v2beta_user_service_pb.AddOTPEmailResponse,
    (request: zitadel_user_v2beta_user_service_pb.AddOTPEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.AddOTPEmailResponse.deserializeBinary
  );

  addOTPEmail(
    request: zitadel_user_v2beta_user_service_pb.AddOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.AddOTPEmailResponse>;

  addOTPEmail(
    request: zitadel_user_v2beta_user_service_pb.AddOTPEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.AddOTPEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.AddOTPEmailResponse>;

  addOTPEmail(
    request: zitadel_user_v2beta_user_service_pb.AddOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.AddOTPEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/AddOTPEmail',
        request,
        metadata || {},
        this.methodDescriptorAddOTPEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/AddOTPEmail',
    request,
    metadata || {},
    this.methodDescriptorAddOTPEmail);
  }

  methodDescriptorRemoveOTPEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/RemoveOTPEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.RemoveOTPEmailRequest,
    zitadel_user_v2beta_user_service_pb.RemoveOTPEmailResponse,
    (request: zitadel_user_v2beta_user_service_pb.RemoveOTPEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.RemoveOTPEmailResponse.deserializeBinary
  );

  removeOTPEmail(
    request: zitadel_user_v2beta_user_service_pb.RemoveOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.RemoveOTPEmailResponse>;

  removeOTPEmail(
    request: zitadel_user_v2beta_user_service_pb.RemoveOTPEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RemoveOTPEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.RemoveOTPEmailResponse>;

  removeOTPEmail(
    request: zitadel_user_v2beta_user_service_pb.RemoveOTPEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RemoveOTPEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/RemoveOTPEmail',
        request,
        metadata || {},
        this.methodDescriptorRemoveOTPEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/RemoveOTPEmail',
    request,
    metadata || {},
    this.methodDescriptorRemoveOTPEmail);
  }

  methodDescriptorStartIdentityProviderIntent = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/StartIdentityProviderIntent',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentRequest,
    zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentResponse,
    (request: zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentResponse.deserializeBinary
  );

  startIdentityProviderIntent(
    request: zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentResponse>;

  startIdentityProviderIntent(
    request: zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentResponse>;

  startIdentityProviderIntent(
    request: zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.StartIdentityProviderIntentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/StartIdentityProviderIntent',
        request,
        metadata || {},
        this.methodDescriptorStartIdentityProviderIntent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/StartIdentityProviderIntent',
    request,
    metadata || {},
    this.methodDescriptorStartIdentityProviderIntent);
  }

  methodDescriptorRetrieveIdentityProviderIntent = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/RetrieveIdentityProviderIntent',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentRequest,
    zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentResponse,
    (request: zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentResponse.deserializeBinary
  );

  retrieveIdentityProviderIntent(
    request: zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentResponse>;

  retrieveIdentityProviderIntent(
    request: zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentResponse>;

  retrieveIdentityProviderIntent(
    request: zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.RetrieveIdentityProviderIntentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/RetrieveIdentityProviderIntent',
        request,
        metadata || {},
        this.methodDescriptorRetrieveIdentityProviderIntent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/RetrieveIdentityProviderIntent',
    request,
    metadata || {},
    this.methodDescriptorRetrieveIdentityProviderIntent);
  }

  methodDescriptorAddIDPLink = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/AddIDPLink',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.AddIDPLinkRequest,
    zitadel_user_v2beta_user_service_pb.AddIDPLinkResponse,
    (request: zitadel_user_v2beta_user_service_pb.AddIDPLinkRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.AddIDPLinkResponse.deserializeBinary
  );

  addIDPLink(
    request: zitadel_user_v2beta_user_service_pb.AddIDPLinkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.AddIDPLinkResponse>;

  addIDPLink(
    request: zitadel_user_v2beta_user_service_pb.AddIDPLinkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.AddIDPLinkResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.AddIDPLinkResponse>;

  addIDPLink(
    request: zitadel_user_v2beta_user_service_pb.AddIDPLinkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.AddIDPLinkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/AddIDPLink',
        request,
        metadata || {},
        this.methodDescriptorAddIDPLink,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/AddIDPLink',
    request,
    metadata || {},
    this.methodDescriptorAddIDPLink);
  }

  methodDescriptorPasswordReset = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/PasswordReset',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.PasswordResetRequest,
    zitadel_user_v2beta_user_service_pb.PasswordResetResponse,
    (request: zitadel_user_v2beta_user_service_pb.PasswordResetRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.PasswordResetResponse.deserializeBinary
  );

  passwordReset(
    request: zitadel_user_v2beta_user_service_pb.PasswordResetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.PasswordResetResponse>;

  passwordReset(
    request: zitadel_user_v2beta_user_service_pb.PasswordResetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.PasswordResetResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.PasswordResetResponse>;

  passwordReset(
    request: zitadel_user_v2beta_user_service_pb.PasswordResetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.PasswordResetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/PasswordReset',
        request,
        metadata || {},
        this.methodDescriptorPasswordReset,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/PasswordReset',
    request,
    metadata || {},
    this.methodDescriptorPasswordReset);
  }

  methodDescriptorSetPassword = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/SetPassword',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.SetPasswordRequest,
    zitadel_user_v2beta_user_service_pb.SetPasswordResponse,
    (request: zitadel_user_v2beta_user_service_pb.SetPasswordRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.SetPasswordResponse.deserializeBinary
  );

  setPassword(
    request: zitadel_user_v2beta_user_service_pb.SetPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.SetPasswordResponse>;

  setPassword(
    request: zitadel_user_v2beta_user_service_pb.SetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.SetPasswordResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.SetPasswordResponse>;

  setPassword(
    request: zitadel_user_v2beta_user_service_pb.SetPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.SetPasswordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/SetPassword',
        request,
        metadata || {},
        this.methodDescriptorSetPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/SetPassword',
    request,
    metadata || {},
    this.methodDescriptorSetPassword);
  }

  methodDescriptorListAuthenticationMethodTypes = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v2beta.UserService/ListAuthenticationMethodTypes',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesRequest,
    zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesResponse,
    (request: zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesResponse.deserializeBinary
  );

  listAuthenticationMethodTypes(
    request: zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesResponse>;

  listAuthenticationMethodTypes(
    request: zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesResponse>;

  listAuthenticationMethodTypes(
    request: zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v2beta_user_service_pb.ListAuthenticationMethodTypesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v2beta.UserService/ListAuthenticationMethodTypes',
        request,
        metadata || {},
        this.methodDescriptorListAuthenticationMethodTypes,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v2beta.UserService/ListAuthenticationMethodTypes',
    request,
    metadata || {},
    this.methodDescriptorListAuthenticationMethodTypes);
  }

}

